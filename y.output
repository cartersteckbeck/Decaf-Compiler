Terminals unused in grammar

   "class"
   "interface"
   "extends"
   "implements"
   "for"
   "while"
   "if"
   "else"
   "return"
   "Print"


State 80 conflicts: 2 shift/reduce
State 98 conflicts: 2 shift/reduce
State 99 conflicts: 2 shift/reduce


Grammar

    0 $accept: pgm $end

    1 pgm: program

    2 program: decl

    3 decl: %empty
    4     | decl varDecl
    5     | decl funcDecl

    6 varDecl: variable ';'

    7 variable: type identifier

    8 type: usertype
    9     | primtype
   10     | arraytype

   11 usertype: typeidentifier

   12 primtype: string
   13         | int
   14         | double
   15         | bool

   16 arraytype: usertype array
   17          | primtype array

   18 funcDecl: type identifier '(' formals ')' stmtblock
   19         | void identifier '(' formals ')' stmtblock

   20 formals: %empty
   21        | formals variable
   22        | formals variable ','

   23 varDeclStar: %empty
   24            | varDeclStar varDecl

   25 stmtStar: %empty
   26         | stmtStar stmt

   27 stmtblock: '{' varDeclStar stmtStar '}'

   28 stmt: break ';'
   29     | expr ';'

   30 Lval: identifier
   31     | expr '.' identifier
   32     | expr '[' expr ']'

   33 expr: Lval '=' expr1

   34 expr1: expr2
   35      | expr1 or expr2

   36 expr2: expr3
   37      | expr2 and expr3

   38 expr3: expr4
   39      | expr3 eq expr4
   40      | expr3 neq expr4

   41 expr4: expr5
   42      | expr4 '<' expr5
   43      | expr4 '>' expr5
   44      | expr4 le expr5
   45      | expr4 ge expr5

   46 expr5: expr6
   47      | expr5 '+' expr6
   48      | expr5 '-' expr6

   49 expr6: expr7
   50      | expr6 '*' expr7
   51      | expr6 '/' expr7
   52      | expr6 '%' expr7

   53 expr7: expr8
   54      | '!' expr8
   55      | '-' expr8

   56 expr8: expr9
   57      | expr8 '[' expr9 ']'
   58      | expr8 '.' expr9

   59 expr9: identifier
   60      | constant
   61      | this
   62      | call
   63      | '(' expr ')'
   64      | readint '(' ')'
   65      | readline '(' ')'
   66      | new '(' identifier ')'
   67      | newarray '(' expr ',' type ')'

   68 call: identifier '(' actuals ')'
   69     | expr '.' identifier '(' actuals ')'

   70 actuals: %empty
   71        | actuals expr
   72        | actuals expr ','

   73 constant: intlit
   74         | dbllit
   75         | boollit
   76         | stringlit
   77         | null

   78 typeidentifier: T_TYPEIDENTIFIER

   79 identifier: T_IDENTIFIER

   80 string: "string"

   81 int: "int"

   82 double: "double"

   83 bool: "bool"

   84 array: "[]"

   85 void: "void"

   86 break: "break"

   87 this: "this"

   88 le: "<="

   89 ge: ">="

   90 eq: "=="

   91 neq: "!="

   92 and: "&&"

   93 or: "||"

   94 readint: "ReadInteger"

   95 new: "New"

   96 newarray: "NewArray"

   97 intlit: T_INTLITERAL

   98 dbllit: T_DBLLITERAL

   99 boollit: T_BOOLLITERAL

  100 stringlit: T_STRINGLITERAL

  101 null: "null"

  102 readline: "ReadLine"


Terminals, with rules where they appear

$end (0) 0
'!' (33) 54
'%' (37) 52
'(' (40) 18 19 63 64 65 66 67 68 69
')' (41) 18 19 63 64 65 66 67 68 69
'*' (42) 50
'+' (43) 47
',' (44) 22 67 72
'-' (45) 48 55
'.' (46) 31 58 69
'/' (47) 51
';' (59) 6 28 29
'<' (60) 42
'=' (61) 33
'>' (62) 43
'[' (91) 32 57
']' (93) 32 57
'{' (123) 27
'}' (125) 27
error (256)
"void" (260) 85
"int" (261) 81
"double" (262) 82
"bool" (263) 83
"string" (264) 80
"class" (265)
"interface" (266)
"null" (267) 101
"this" (268) 87
"extends" (269)
"implements" (270)
"for" (271)
"while" (272)
"if" (273)
"else" (274)
"return" (275)
"break" (276) 86
"New" (277) 95
"NewArray" (278) 96
"Print" (279)
"ReadInteger" (280) 94
"ReadLine" (281) 102
"<=" (282) 88
">=" (283) 89
"==" (284) 90
"!=" (285) 91
"&&" (286) 92
"||" (287) 93
"[]" (288) 84
T_DBLLITERAL (289) 98
T_INTLITERAL (290) 97
T_BOOLLITERAL (291) 99
T_IDENTIFIER (292) 79
T_TYPEIDENTIFIER (293) 78
T_STRINGLITERAL (294) 100


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
pgm (57)
    on left: 1, on right: 0
program (58)
    on left: 2, on right: 1
decl (59)
    on left: 3 4 5, on right: 2 4 5
varDecl (60)
    on left: 6, on right: 4 24
variable (61)
    on left: 7, on right: 6 21 22
type (62)
    on left: 8 9 10, on right: 7 18 67
usertype (63)
    on left: 11, on right: 8 16
primtype (64)
    on left: 12 13 14 15, on right: 9 17
arraytype (65)
    on left: 16 17, on right: 10
funcDecl (66)
    on left: 18 19, on right: 5
formals (67)
    on left: 20 21 22, on right: 18 19 21 22
varDeclStar (68)
    on left: 23 24, on right: 24 27
stmtStar (69)
    on left: 25 26, on right: 26 27
stmtblock (70)
    on left: 27, on right: 18 19
stmt (71)
    on left: 28 29, on right: 26
Lval (72)
    on left: 30 31 32, on right: 33
expr (73)
    on left: 33, on right: 29 31 32 63 67 69 71 72
expr1 (74)
    on left: 34 35, on right: 33 35
expr2 (75)
    on left: 36 37, on right: 34 35 37
expr3 (76)
    on left: 38 39 40, on right: 36 37 39 40
expr4 (77)
    on left: 41 42 43 44 45, on right: 38 39 40 42 43 44 45
expr5 (78)
    on left: 46 47 48, on right: 41 42 43 44 45 47 48
expr6 (79)
    on left: 49 50 51 52, on right: 46 47 48 50 51 52
expr7 (80)
    on left: 53 54 55, on right: 49 50 51 52
expr8 (81)
    on left: 56 57 58, on right: 53 54 55 57 58
expr9 (82)
    on left: 59 60 61 62 63 64 65 66 67, on right: 56 57 58
call (83)
    on left: 68 69, on right: 62
actuals (84)
    on left: 70 71 72, on right: 68 69 71 72
constant (85)
    on left: 73 74 75 76 77, on right: 60
typeidentifier (86)
    on left: 78, on right: 11
identifier (87)
    on left: 79, on right: 7 18 19 30 31 59 66 68 69
string (88)
    on left: 80, on right: 12
int (89)
    on left: 81, on right: 13
double (90)
    on left: 82, on right: 14
bool (91)
    on left: 83, on right: 15
array (92)
    on left: 84, on right: 16 17
void (93)
    on left: 85, on right: 19
break (94)
    on left: 86, on right: 28
this (95)
    on left: 87, on right: 61
le (96)
    on left: 88, on right: 44
ge (97)
    on left: 89, on right: 45
eq (98)
    on left: 90, on right: 39
neq (99)
    on left: 91, on right: 40
and (100)
    on left: 92, on right: 37
or (101)
    on left: 93, on right: 35
readint (102)
    on left: 94, on right: 64
new (103)
    on left: 95, on right: 66
newarray (104)
    on left: 96, on right: 67
intlit (105)
    on left: 97, on right: 73
dbllit (106)
    on left: 98, on right: 74
boollit (107)
    on left: 99, on right: 75
stringlit (108)
    on left: 100, on right: 76
null (109)
    on left: 101, on right: 77
readline (110)
    on left: 102, on right: 65


State 0

    0 $accept: . pgm $end

    $default  reduce using rule 3 (decl)

    pgm      go to state 1
    program  go to state 2
    decl     go to state 3


State 1

    0 $accept: pgm . $end

    $end  shift, and go to state 4


State 2

    1 pgm: program .

    $default  reduce using rule 1 (pgm)


State 3

    2 program: decl .
    4 decl: decl . varDecl
    5     | decl . funcDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10

    $default  reduce using rule 2 (program)

    varDecl         go to state 11
    variable        go to state 12
    type            go to state 13
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    funcDecl        go to state 17
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22
    void            go to state 23


State 4

    0 $accept: pgm $end .

    $default  accept


State 5

   85 void: "void" .

    $default  reduce using rule 85 (void)


State 6

   81 int: "int" .

    $default  reduce using rule 81 (int)


State 7

   82 double: "double" .

    $default  reduce using rule 82 (double)


State 8

   83 bool: "bool" .

    $default  reduce using rule 83 (bool)


State 9

   80 string: "string" .

    $default  reduce using rule 80 (string)


State 10

   78 typeidentifier: T_TYPEIDENTIFIER .

    $default  reduce using rule 78 (typeidentifier)


State 11

    4 decl: decl varDecl .

    $default  reduce using rule 4 (decl)


State 12

    6 varDecl: variable . ';'

    ';'  shift, and go to state 24


State 13

    7 variable: type . identifier
   18 funcDecl: type . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 26


State 14

    8 type: usertype .
   16 arraytype: usertype . array

    "[]"  shift, and go to state 27

    $default  reduce using rule 8 (type)

    array  go to state 28


State 15

    9 type: primtype .
   17 arraytype: primtype . array

    "[]"  shift, and go to state 27

    $default  reduce using rule 9 (type)

    array  go to state 29


State 16

   10 type: arraytype .

    $default  reduce using rule 10 (type)


State 17

    5 decl: decl funcDecl .

    $default  reduce using rule 5 (decl)


State 18

   11 usertype: typeidentifier .

    $default  reduce using rule 11 (usertype)


State 19

   12 primtype: string .

    $default  reduce using rule 12 (primtype)


State 20

   13 primtype: int .

    $default  reduce using rule 13 (primtype)


State 21

   14 primtype: double .

    $default  reduce using rule 14 (primtype)


State 22

   15 primtype: bool .

    $default  reduce using rule 15 (primtype)


State 23

   19 funcDecl: void . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 30


State 24

    6 varDecl: variable ';' .

    $default  reduce using rule 6 (varDecl)


State 25

   79 identifier: T_IDENTIFIER .

    $default  reduce using rule 79 (identifier)


State 26

    7 variable: type identifier .
   18 funcDecl: type identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 31

    $default  reduce using rule 7 (variable)


State 27

   84 array: "[]" .

    $default  reduce using rule 84 (array)


State 28

   16 arraytype: usertype array .

    $default  reduce using rule 16 (arraytype)


State 29

   17 arraytype: primtype array .

    $default  reduce using rule 17 (arraytype)


State 30

   19 funcDecl: void identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 32


State 31

   18 funcDecl: type identifier '(' . formals ')' stmtblock

    $default  reduce using rule 20 (formals)

    formals  go to state 33


State 32

   19 funcDecl: void identifier '(' . formals ')' stmtblock

    $default  reduce using rule 20 (formals)

    formals  go to state 34


State 33

   18 funcDecl: type identifier '(' formals . ')' stmtblock
   21 formals: formals . variable
   22        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10
    ')'               shift, and go to state 35

    variable        go to state 36
    type            go to state 37
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22


State 34

   19 funcDecl: void identifier '(' formals . ')' stmtblock
   21 formals: formals . variable
   22        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10
    ')'               shift, and go to state 38

    variable        go to state 36
    type            go to state 37
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22


State 35

   18 funcDecl: type identifier '(' formals ')' . stmtblock

    '{'  shift, and go to state 39

    stmtblock  go to state 40


State 36

   21 formals: formals variable .
   22        | formals variable . ','

    ','  shift, and go to state 41

    $default  reduce using rule 21 (formals)


State 37

    7 variable: type . identifier

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 42


State 38

   19 funcDecl: void identifier '(' formals ')' . stmtblock

    '{'  shift, and go to state 39

    stmtblock  go to state 43


State 39

   27 stmtblock: '{' . varDeclStar stmtStar '}'

    $default  reduce using rule 23 (varDeclStar)

    varDeclStar  go to state 44


State 40

   18 funcDecl: type identifier '(' formals ')' stmtblock .

    $default  reduce using rule 18 (funcDecl)


State 41

   22 formals: formals variable ',' .

    $default  reduce using rule 22 (formals)


State 42

    7 variable: type identifier .

    $default  reduce using rule 7 (variable)


State 43

   19 funcDecl: void identifier '(' formals ')' stmtblock .

    $default  reduce using rule 19 (funcDecl)


State 44

   24 varDeclStar: varDeclStar . varDecl
   27 stmtblock: '{' varDeclStar . stmtStar '}'

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10

    $default  reduce using rule 25 (stmtStar)

    varDecl         go to state 45
    variable        go to state 12
    type            go to state 37
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    stmtStar        go to state 46
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22


State 45

   24 varDeclStar: varDeclStar varDecl .

    $default  reduce using rule 24 (varDeclStar)


State 46

   26 stmtStar: stmtStar . stmt
   27 stmtblock: '{' varDeclStar stmtStar . '}'

    "break"       shift, and go to state 47
    T_IDENTIFIER  shift, and go to state 25
    '}'           shift, and go to state 48

    stmt        go to state 49
    Lval        go to state 50
    expr        go to state 51
    identifier  go to state 52
    break       go to state 53


State 47

   86 break: "break" .

    $default  reduce using rule 86 (break)


State 48

   27 stmtblock: '{' varDeclStar stmtStar '}' .

    $default  reduce using rule 27 (stmtblock)


State 49

   26 stmtStar: stmtStar stmt .

    $default  reduce using rule 26 (stmtStar)


State 50

   33 expr: Lval . '=' expr1

    '='  shift, and go to state 54


State 51

   29 stmt: expr . ';'
   31 Lval: expr . '.' identifier
   32     | expr . '[' expr ']'

    ';'  shift, and go to state 55
    '.'  shift, and go to state 56
    '['  shift, and go to state 57


State 52

   30 Lval: identifier .

    $default  reduce using rule 30 (Lval)


State 53

   28 stmt: break . ';'

    ';'  shift, and go to state 58


State 54

   33 expr: Lval '=' . expr1

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr1       go to state 73
    expr2       go to state 74
    expr3       go to state 75
    expr4       go to state 76
    expr5       go to state 77
    expr6       go to state 78
    expr7       go to state 79
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 55

   29 stmt: expr ';' .

    $default  reduce using rule 29 (stmt)


State 56

   31 Lval: expr '.' . identifier

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 95


State 57

   32 Lval: expr '[' . expr ']'

    T_IDENTIFIER  shift, and go to state 25

    Lval        go to state 50
    expr        go to state 96
    identifier  go to state 52


State 58

   28 stmt: break ';' .

    $default  reduce using rule 28 (stmt)


State 59

  101 null: "null" .

    $default  reduce using rule 101 (null)


State 60

   87 this: "this" .

    $default  reduce using rule 87 (this)


State 61

   95 new: "New" .

    $default  reduce using rule 95 (new)


State 62

   96 newarray: "NewArray" .

    $default  reduce using rule 96 (newarray)


State 63

   94 readint: "ReadInteger" .

    $default  reduce using rule 94 (readint)


State 64

  102 readline: "ReadLine" .

    $default  reduce using rule 102 (readline)


State 65

   98 dbllit: T_DBLLITERAL .

    $default  reduce using rule 98 (dbllit)


State 66

   97 intlit: T_INTLITERAL .

    $default  reduce using rule 97 (intlit)


State 67

   99 boollit: T_BOOLLITERAL .

    $default  reduce using rule 99 (boollit)


State 68

  100 stringlit: T_STRINGLITERAL .

    $default  reduce using rule 100 (stringlit)


State 69

   63 expr9: '(' . expr ')'

    T_IDENTIFIER  shift, and go to state 25

    Lval        go to state 50
    expr        go to state 97
    identifier  go to state 52


State 70

   55 expr7: '-' . expr8

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69

    Lval        go to state 50
    expr        go to state 72
    expr8       go to state 98
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 71

   54 expr7: '!' . expr8

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69

    Lval        go to state 50
    expr        go to state 72
    expr8       go to state 99
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 72

   31 Lval: expr . '.' identifier
   32     | expr . '[' expr ']'
   69 call: expr . '.' identifier '(' actuals ')'

    '.'  shift, and go to state 100
    '['  shift, and go to state 57


State 73

   33 expr: Lval '=' expr1 .
   35 expr1: expr1 . or expr2

    "||"  shift, and go to state 101

    $default  reduce using rule 33 (expr)

    or  go to state 102


State 74

   34 expr1: expr2 .
   37 expr2: expr2 . and expr3

    "&&"  shift, and go to state 103

    $default  reduce using rule 34 (expr1)

    and  go to state 104


State 75

   36 expr2: expr3 .
   39 expr3: expr3 . eq expr4
   40      | expr3 . neq expr4

    "=="  shift, and go to state 105
    "!="  shift, and go to state 106

    $default  reduce using rule 36 (expr2)

    eq   go to state 107
    neq  go to state 108


State 76

   38 expr3: expr4 .
   42 expr4: expr4 . '<' expr5
   43      | expr4 . '>' expr5
   44      | expr4 . le expr5
   45      | expr4 . ge expr5

    "<="  shift, and go to state 109
    ">="  shift, and go to state 110
    '<'   shift, and go to state 111
    '>'   shift, and go to state 112

    $default  reduce using rule 38 (expr3)

    le  go to state 113
    ge  go to state 114


State 77

   41 expr4: expr5 .
   47 expr5: expr5 . '+' expr6
   48      | expr5 . '-' expr6

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 41 (expr4)


State 78

   46 expr5: expr6 .
   50 expr6: expr6 . '*' expr7
   51      | expr6 . '/' expr7
   52      | expr6 . '%' expr7

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 46 (expr5)


State 79

   49 expr6: expr7 .

    $default  reduce using rule 49 (expr6)


State 80

   53 expr7: expr8 .
   57 expr8: expr8 . '[' expr9 ']'
   58      | expr8 . '.' expr9

    '.'  shift, and go to state 120
    '['  shift, and go to state 121

    '.'       [reduce using rule 53 (expr7)]
    '['       [reduce using rule 53 (expr7)]
    $default  reduce using rule 53 (expr7)


State 81

   56 expr8: expr9 .

    $default  reduce using rule 56 (expr8)


State 82

   62 expr9: call .

    $default  reduce using rule 62 (expr9)


State 83

   60 expr9: constant .

    $default  reduce using rule 60 (expr9)


State 84

   30 Lval: identifier .
   59 expr9: identifier .
   68 call: identifier . '(' actuals ')'

    '('  shift, and go to state 122

    '='       reduce using rule 30 (Lval)
    $default  reduce using rule 59 (expr9)


State 85

   61 expr9: this .

    $default  reduce using rule 61 (expr9)


State 86

   64 expr9: readint . '(' ')'

    '('  shift, and go to state 123


State 87

   66 expr9: new . '(' identifier ')'

    '('  shift, and go to state 124


State 88

   67 expr9: newarray . '(' expr ',' type ')'

    '('  shift, and go to state 125


State 89

   73 constant: intlit .

    $default  reduce using rule 73 (constant)


State 90

   74 constant: dbllit .

    $default  reduce using rule 74 (constant)


State 91

   75 constant: boollit .

    $default  reduce using rule 75 (constant)


State 92

   76 constant: stringlit .

    $default  reduce using rule 76 (constant)


State 93

   77 constant: null .

    $default  reduce using rule 77 (constant)


State 94

   65 expr9: readline . '(' ')'

    '('  shift, and go to state 126


State 95

   31 Lval: expr '.' identifier .

    $default  reduce using rule 31 (Lval)


State 96

   31 Lval: expr . '.' identifier
   32     | expr . '[' expr ']'
   32     | expr '[' expr . ']'

    '.'  shift, and go to state 56
    '['  shift, and go to state 57
    ']'  shift, and go to state 127


State 97

   31 Lval: expr . '.' identifier
   32     | expr . '[' expr ']'
   63 expr9: '(' expr . ')'

    ')'  shift, and go to state 128
    '.'  shift, and go to state 56
    '['  shift, and go to state 57


State 98

   55 expr7: '-' expr8 .
   57 expr8: expr8 . '[' expr9 ']'
   58      | expr8 . '.' expr9

    '.'  shift, and go to state 120
    '['  shift, and go to state 121

    '.'       [reduce using rule 55 (expr7)]
    '['       [reduce using rule 55 (expr7)]
    $default  reduce using rule 55 (expr7)


State 99

   54 expr7: '!' expr8 .
   57 expr8: expr8 . '[' expr9 ']'
   58      | expr8 . '.' expr9

    '.'  shift, and go to state 120
    '['  shift, and go to state 121

    '.'       [reduce using rule 54 (expr7)]
    '['       [reduce using rule 54 (expr7)]
    $default  reduce using rule 54 (expr7)


State 100

   31 Lval: expr '.' . identifier
   69 call: expr '.' . identifier '(' actuals ')'

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 129


State 101

   93 or: "||" .

    $default  reduce using rule 93 (or)


State 102

   35 expr1: expr1 or . expr2

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr2       go to state 130
    expr3       go to state 75
    expr4       go to state 76
    expr5       go to state 77
    expr6       go to state 78
    expr7       go to state 79
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 103

   92 and: "&&" .

    $default  reduce using rule 92 (and)


State 104

   37 expr2: expr2 and . expr3

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr3       go to state 131
    expr4       go to state 76
    expr5       go to state 77
    expr6       go to state 78
    expr7       go to state 79
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 105

   90 eq: "==" .

    $default  reduce using rule 90 (eq)


State 106

   91 neq: "!=" .

    $default  reduce using rule 91 (neq)


State 107

   39 expr3: expr3 eq . expr4

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr4       go to state 132
    expr5       go to state 77
    expr6       go to state 78
    expr7       go to state 79
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 108

   40 expr3: expr3 neq . expr4

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr4       go to state 133
    expr5       go to state 77
    expr6       go to state 78
    expr7       go to state 79
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 109

   88 le: "<=" .

    $default  reduce using rule 88 (le)


State 110

   89 ge: ">=" .

    $default  reduce using rule 89 (ge)


State 111

   42 expr4: expr4 '<' . expr5

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr5       go to state 134
    expr6       go to state 78
    expr7       go to state 79
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 112

   43 expr4: expr4 '>' . expr5

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr5       go to state 135
    expr6       go to state 78
    expr7       go to state 79
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 113

   44 expr4: expr4 le . expr5

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr5       go to state 136
    expr6       go to state 78
    expr7       go to state 79
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 114

   45 expr4: expr4 ge . expr5

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr5       go to state 137
    expr6       go to state 78
    expr7       go to state 79
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 115

   47 expr5: expr5 '+' . expr6

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr6       go to state 138
    expr7       go to state 79
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 116

   48 expr5: expr5 '-' . expr6

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr6       go to state 139
    expr7       go to state 79
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 117

   50 expr6: expr6 '*' . expr7

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr7       go to state 140
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 118

   51 expr6: expr6 '/' . expr7

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr7       go to state 141
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 119

   52 expr6: expr6 '%' . expr7

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69
    '-'              shift, and go to state 70
    '!'              shift, and go to state 71

    Lval        go to state 50
    expr        go to state 72
    expr7       go to state 142
    expr8       go to state 80
    expr9       go to state 81
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 120

   58 expr8: expr8 '.' . expr9

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69

    Lval        go to state 50
    expr        go to state 72
    expr9       go to state 143
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 121

   57 expr8: expr8 '[' . expr9 ']'

    "null"           shift, and go to state 59
    "this"           shift, and go to state 60
    "New"            shift, and go to state 61
    "NewArray"       shift, and go to state 62
    "ReadInteger"    shift, and go to state 63
    "ReadLine"       shift, and go to state 64
    T_DBLLITERAL     shift, and go to state 65
    T_INTLITERAL     shift, and go to state 66
    T_BOOLLITERAL    shift, and go to state 67
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 68
    '('              shift, and go to state 69

    Lval        go to state 50
    expr        go to state 72
    expr9       go to state 144
    call        go to state 82
    constant    go to state 83
    identifier  go to state 84
    this        go to state 85
    readint     go to state 86
    new         go to state 87
    newarray    go to state 88
    intlit      go to state 89
    dbllit      go to state 90
    boollit     go to state 91
    stringlit   go to state 92
    null        go to state 93
    readline    go to state 94


State 122

   68 call: identifier '(' . actuals ')'

    $default  reduce using rule 70 (actuals)

    actuals  go to state 145


State 123

   64 expr9: readint '(' . ')'

    ')'  shift, and go to state 146


State 124

   66 expr9: new '(' . identifier ')'

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 147


State 125

   67 expr9: newarray '(' . expr ',' type ')'

    T_IDENTIFIER  shift, and go to state 25

    Lval        go to state 50
    expr        go to state 148
    identifier  go to state 52


State 126

   65 expr9: readline '(' . ')'

    ')'  shift, and go to state 149


State 127

   32 Lval: expr '[' expr ']' .

    $default  reduce using rule 32 (Lval)


State 128

   63 expr9: '(' expr ')' .

    $default  reduce using rule 63 (expr9)


State 129

   31 Lval: expr '.' identifier .
   69 call: expr '.' identifier . '(' actuals ')'

    '('  shift, and go to state 150

    $default  reduce using rule 31 (Lval)


State 130

   35 expr1: expr1 or expr2 .
   37 expr2: expr2 . and expr3

    "&&"  shift, and go to state 103

    $default  reduce using rule 35 (expr1)

    and  go to state 104


State 131

   37 expr2: expr2 and expr3 .
   39 expr3: expr3 . eq expr4
   40      | expr3 . neq expr4

    "=="  shift, and go to state 105
    "!="  shift, and go to state 106

    $default  reduce using rule 37 (expr2)

    eq   go to state 107
    neq  go to state 108


State 132

   39 expr3: expr3 eq expr4 .
   42 expr4: expr4 . '<' expr5
   43      | expr4 . '>' expr5
   44      | expr4 . le expr5
   45      | expr4 . ge expr5

    "<="  shift, and go to state 109
    ">="  shift, and go to state 110
    '<'   shift, and go to state 111
    '>'   shift, and go to state 112

    $default  reduce using rule 39 (expr3)

    le  go to state 113
    ge  go to state 114


State 133

   40 expr3: expr3 neq expr4 .
   42 expr4: expr4 . '<' expr5
   43      | expr4 . '>' expr5
   44      | expr4 . le expr5
   45      | expr4 . ge expr5

    "<="  shift, and go to state 109
    ">="  shift, and go to state 110
    '<'   shift, and go to state 111
    '>'   shift, and go to state 112

    $default  reduce using rule 40 (expr3)

    le  go to state 113
    ge  go to state 114


State 134

   42 expr4: expr4 '<' expr5 .
   47 expr5: expr5 . '+' expr6
   48      | expr5 . '-' expr6

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 42 (expr4)


State 135

   43 expr4: expr4 '>' expr5 .
   47 expr5: expr5 . '+' expr6
   48      | expr5 . '-' expr6

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 43 (expr4)


State 136

   44 expr4: expr4 le expr5 .
   47 expr5: expr5 . '+' expr6
   48      | expr5 . '-' expr6

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 44 (expr4)


State 137

   45 expr4: expr4 ge expr5 .
   47 expr5: expr5 . '+' expr6
   48      | expr5 . '-' expr6

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 45 (expr4)


State 138

   47 expr5: expr5 '+' expr6 .
   50 expr6: expr6 . '*' expr7
   51      | expr6 . '/' expr7
   52      | expr6 . '%' expr7

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 47 (expr5)


State 139

   48 expr5: expr5 '-' expr6 .
   50 expr6: expr6 . '*' expr7
   51      | expr6 . '/' expr7
   52      | expr6 . '%' expr7

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 48 (expr5)


State 140

   50 expr6: expr6 '*' expr7 .

    $default  reduce using rule 50 (expr6)


State 141

   51 expr6: expr6 '/' expr7 .

    $default  reduce using rule 51 (expr6)


State 142

   52 expr6: expr6 '%' expr7 .

    $default  reduce using rule 52 (expr6)


State 143

   58 expr8: expr8 '.' expr9 .

    $default  reduce using rule 58 (expr8)


State 144

   57 expr8: expr8 '[' expr9 . ']'

    ']'  shift, and go to state 151


State 145

   68 call: identifier '(' actuals . ')'
   71 actuals: actuals . expr
   72        | actuals . expr ','

    T_IDENTIFIER  shift, and go to state 25
    ')'           shift, and go to state 152

    Lval        go to state 50
    expr        go to state 153
    identifier  go to state 52


State 146

   64 expr9: readint '(' ')' .

    $default  reduce using rule 64 (expr9)


State 147

   66 expr9: new '(' identifier . ')'

    ')'  shift, and go to state 154


State 148

   31 Lval: expr . '.' identifier
   32     | expr . '[' expr ']'
   67 expr9: newarray '(' expr . ',' type ')'

    ','  shift, and go to state 155
    '.'  shift, and go to state 56
    '['  shift, and go to state 57


State 149

   65 expr9: readline '(' ')' .

    $default  reduce using rule 65 (expr9)


State 150

   69 call: expr '.' identifier '(' . actuals ')'

    $default  reduce using rule 70 (actuals)

    actuals  go to state 156


State 151

   57 expr8: expr8 '[' expr9 ']' .

    $default  reduce using rule 57 (expr8)


State 152

   68 call: identifier '(' actuals ')' .

    $default  reduce using rule 68 (call)


State 153

   31 Lval: expr . '.' identifier
   32     | expr . '[' expr ']'
   71 actuals: actuals expr .
   72        | actuals expr . ','

    ','  shift, and go to state 157
    '.'  shift, and go to state 56
    '['  shift, and go to state 57

    $default  reduce using rule 71 (actuals)


State 154

   66 expr9: new '(' identifier ')' .

    $default  reduce using rule 66 (expr9)


State 155

   67 expr9: newarray '(' expr ',' . type ')'

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10

    type            go to state 158
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22


State 156

   69 call: expr '.' identifier '(' actuals . ')'
   71 actuals: actuals . expr
   72        | actuals . expr ','

    T_IDENTIFIER  shift, and go to state 25
    ')'           shift, and go to state 159

    Lval        go to state 50
    expr        go to state 153
    identifier  go to state 52


State 157

   72 actuals: actuals expr ',' .

    $default  reduce using rule 72 (actuals)


State 158

   67 expr9: newarray '(' expr ',' type . ')'

    ')'  shift, and go to state 160


State 159

   69 call: expr '.' identifier '(' actuals ')' .

    $default  reduce using rule 69 (call)


State 160

   67 expr9: newarray '(' expr ',' type ')' .

    $default  reduce using rule 67 (expr9)
