State 140 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce
State 218 conflicts: 15 reduce/reduce
State 219 conflicts: 15 reduce/reduce
State 228 conflicts: 3 reduce/reduce
State 229 conflicts: 4 reduce/reduce
State 230 conflicts: 4 reduce/reduce
State 231 conflicts: 4 reduce/reduce
State 232 conflicts: 1 shift/reduce, 6 reduce/reduce
State 233 conflicts: 1 shift/reduce, 6 reduce/reduce
State 234 conflicts: 12 reduce/reduce
State 235 conflicts: 12 reduce/reduce
State 236 conflicts: 1 shift/reduce, 6 reduce/reduce
State 237 conflicts: 1 shift/reduce, 6 reduce/reduce
State 238 conflicts: 15 reduce/reduce
State 239 conflicts: 15 reduce/reduce
State 240 conflicts: 15 reduce/reduce


Grammar

    0 $accept: pgm $end

    1 pgm: program

    2 program: decl

    3 decl: %empty
    4     | decl varDecl
    5     | decl funcDecl
    6     | decl interfaceDecl
    7     | decl classDecl

    8 varDecl: variable ';'

    9 variable: type identifier

   10 type: usertype
   11     | primtype
   12     | arraytype

   13 usertype: typeidentifier

   14 primtype: string
   15         | int
   16         | double
   17         | bool

   18 arraytype: usertype array
   19          | primtype array

   20 funcDecl: type identifier '(' formals ')' stmtblock
   21         | void identifier '(' formals ')' stmtblock

   22 formals: %empty
   23        | formals variable
   24        | formals ',' variable

   25 classDecl: class identifier '{' fields '}'
   26          | class typeidentifier ext '{' fields '}'
   27          | class typeidentifier implements identifiersPlus '{' fields '}'
   28          | class typeidentifier ext implements identifiersPlus '{' fields '}'

   29 fields: %empty
   30       | fields funcDecl
   31       | fields varDecl

   32 identifiersPlus: identifier
   33                | identifiersPlus ',' identifier

   34 ext: extends identifier
   35    | extends typeidentifier

   36 call: identifier '(' nactuals ')'

   37 interfaceDecl: interface identifier '{' prototypes '}'

   38 prototypes: %empty
   39           | prototypes prototype

   40 prototype: type identifier '(' formals ')' ';'
   41          | void identifier '(' formals ')' ';'

   42 stmtblock: '{' varDeclStar stmtStar '}'

   43 varDeclStar: %empty
   44            | varDeclStar varDecl

   45 stmtStar: %empty
   46         | stmtStar stmt

   47 stmt: matched_stmt
   48     | unmatched_stmt

   49 matched_stmt: ';'
   50             | expr ';'
   51             | matched_if
   52             | matched_while
   53             | matched_for
   54             | break_stmt ';'
   55             | return_stmt ';'
   56             | print_stmt ';'
   57             | stmtblock

   58 unmatched_stmt: unmatched_if
   59               | unmatched_while
   60               | unmatched_for

   61 break_stmt: break

   62 return_stmt: return
   63            | return expr

   64 print_stmt: print '(' actuals ')'

   65 common_if: if '(' expr ')'

   66 matched_if: common_if matched_stmt else matched_stmt

   67 unmatched_if: common_if matched_stmt
   68             | common_if matched_stmt else unmatched_stmt
   69             | common_if unmatched_stmt

   70 common_while: while '(' expr1 ')'

   71 matched_while: common_while matched_stmt

   72 unmatched_while: common_while unmatched_stmt

   73 common_for: for '(' expr ';' expr ';' expr ')'
   74           | for '(' ';' expr ';' expr ')'
   75           | for '(' expr ';' expr ';' ')'
   76           | for '(' ';' expr ';' ')'

   77 matched_for: common_for matched_stmt

   78 unmatched_for: common_for unmatched_stmt

   79 Lvalue: identifier
   80       | expr1 '[' expr1 ']'
   81       | expr1 '.' identifier

   82 expr: expr1
   83     | Lvalue sceq expr1

   84 expr1: expr2
   85      | expr1 or expr2

   86 expr2: expr3
   87      | expr2 and expr3

   88 expr3: expr4
   89      | expr4 eq expr4
   90      | expr4 neq expr4

   91 expr4: expr5
   92      | expr5 sclt expr5
   93      | expr5 scgt expr5
   94      | expr5 le expr5
   95      | expr5 ge expr5

   96 expr5: expr6
   97      | expr5 scplus expr6
   98      | expr5 scminus expr6

   99 expr6: expr7
  100      | expr6 sctimes expr7
  101      | expr6 scdiv expr7
  102      | expr6 scmod expr7

  103 expr7: expr8
  104      | scneq expr7
  105      | scminus expr7

  106 expr8: Lvalue
  107      | constant
  108      | this
  109      | '(' expr ')'
  110      | call
  111      | readint '(' ')'
  112      | readline '(' ')'
  113      | new '(' identifier ')'
  114      | newarray '(' expr ',' type ')'
  115      | newarray '(' expr ',' special ')'

  116 special: identifier

  117 nactuals: %empty
  118         | nactuals expr
  119         | nactuals ',' expr

  120 actuals: expr
  121        | actuals ',' expr

  122 constant: intlit
  123         | dbllit
  124         | boollit
  125         | stringlit
  126         | null

  127 typeidentifier: T_TYPEIDENTIFIER

  128 identifier: T_IDENTIFIER

  129 string: "string"

  130 int: "int"

  131 double: "double"

  132 bool: "bool"

  133 array: "[]"

  134 void: "void"

  135 break: "break"

  136 this: "this"

  137 le: "<="

  138 ge: ">="

  139 eq: "=="

  140 neq: "!="

  141 and: "&&"

  142 or: "||"

  143 readint: "ReadInteger"

  144 new: "New"

  145 newarray: "NewArray"

  146 intlit: T_INTLITERAL

  147 dbllit: T_DBLLITERAL

  148 boollit: T_BOOLLITERAL

  149 stringlit: T_STRINGLITERAL

  150 null: "null"

  151 readline: "ReadLine"

  152 if: "if"

  153 else: "else"

  154 print: "Print"

  155 return: "return"

  156 class: "class"

  157 extends: "extends"

  158 implements: "implements"

  159 for: "for"

  160 while: "while"

  161 interface: "interface"

  162 scplus: '+'

  163 scminus: '-'

  164 sctimes: '*'

  165 scdiv: '/'

  166 scmod: '%'

  167 sclt: '<'

  168 scgt: '>'

  169 sceq: '='

  170 scneq: '!'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 170
'%' (37) 166
'(' (40) 20 21 36 40 41 64 65 70 73 74 75 76 109 111 112 113 114 115
')' (41) 20 21 36 40 41 64 65 70 73 74 75 76 109 111 112 113 114 115
'*' (42) 164
'+' (43) 162
',' (44) 24 33 114 115 119 121
'-' (45) 163
'.' (46) 81
'/' (47) 165
';' (59) 8 40 41 49 50 54 55 56 73 74 75 76
'<' (60) 167
'=' (61) 169
'>' (62) 168
'[' (91) 80
']' (93) 80
'{' (123) 25 26 27 28 37 42
'}' (125) 25 26 27 28 37 42
error (256)
"void" (260) 134
"int" (261) 130
"double" (262) 131
"bool" (263) 132
"string" (264) 129
"class" (265) 156
"interface" (266) 161
"null" (267) 150
"this" (268) 136
"extends" (269) 157
"implements" (270) 158
"for" (271) 159
"while" (272) 160
"if" (273) 152
"else" (274) 153
"return" (275) 155
"break" (276) 135
"New" (277) 144
"NewArray" (278) 145
"Print" (279) 154
"ReadInteger" (280) 143
"ReadLine" (281) 151
"<=" (282) 137
">=" (283) 138
"==" (284) 139
"!=" (285) 140
"&&" (286) 141
"||" (287) 142
"[]" (288) 133
T_DBLLITERAL (289) 147
T_INTLITERAL (290) 146
T_BOOLLITERAL (291) 148
T_IDENTIFIER (292) 128
T_TYPEIDENTIFIER (293) 127
T_STRINGLITERAL (294) 149


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
pgm (57)
    on left: 1, on right: 0
program (58)
    on left: 2, on right: 1
decl (59)
    on left: 3 4 5 6 7, on right: 2 4 5 6 7
varDecl (60)
    on left: 8, on right: 4 31 44
variable (61)
    on left: 9, on right: 8 23 24
type (62)
    on left: 10 11 12, on right: 9 20 40 114
usertype (63)
    on left: 13, on right: 10 18
primtype (64)
    on left: 14 15 16 17, on right: 11 19
arraytype (65)
    on left: 18 19, on right: 12
funcDecl (66)
    on left: 20 21, on right: 5 30
formals (67)
    on left: 22 23 24, on right: 20 21 23 24 40 41
classDecl (68)
    on left: 25 26 27 28, on right: 7
fields (69)
    on left: 29 30 31, on right: 25 26 27 28 30 31
identifiersPlus (70)
    on left: 32 33, on right: 27 28 33
ext (71)
    on left: 34 35, on right: 26 28
call (72)
    on left: 36, on right: 110
interfaceDecl (73)
    on left: 37, on right: 6
prototypes (74)
    on left: 38 39, on right: 37 39
prototype (75)
    on left: 40 41, on right: 39
stmtblock (76)
    on left: 42, on right: 20 21 57
varDeclStar (77)
    on left: 43 44, on right: 42 44
stmtStar (78)
    on left: 45 46, on right: 42 46
stmt (79)
    on left: 47 48, on right: 46
matched_stmt (80)
    on left: 49 50 51 52 53 54 55 56 57, on right: 47 66 67 68 71 77
unmatched_stmt (81)
    on left: 58 59 60, on right: 48 68 69 72 78
break_stmt (82)
    on left: 61, on right: 54
return_stmt (83)
    on left: 62 63, on right: 55
print_stmt (84)
    on left: 64, on right: 56
common_if (85)
    on left: 65, on right: 66 67 68 69
matched_if (86)
    on left: 66, on right: 51
unmatched_if (87)
    on left: 67 68 69, on right: 58
common_while (88)
    on left: 70, on right: 71 72
matched_while (89)
    on left: 71, on right: 52
unmatched_while (90)
    on left: 72, on right: 59
common_for (91)
    on left: 73 74 75 76, on right: 77 78
matched_for (92)
    on left: 77, on right: 53
unmatched_for (93)
    on left: 78, on right: 60
Lvalue (94)
    on left: 79 80 81, on right: 83 106
expr (95)
    on left: 82 83, on right: 50 63 65 73 74 75 76 109 114 115 118
    119 120 121
expr1 (96)
    on left: 84 85, on right: 70 80 81 82 83 85
expr2 (97)
    on left: 86 87, on right: 84 85 87
expr3 (98)
    on left: 88 89 90, on right: 86 87
expr4 (99)
    on left: 91 92 93 94 95, on right: 88 89 90
expr5 (100)
    on left: 96 97 98, on right: 91 92 93 94 95 97 98
expr6 (101)
    on left: 99 100 101 102, on right: 96 97 98 100 101 102
expr7 (102)
    on left: 103 104 105, on right: 99 100 101 102 104 105
expr8 (103)
    on left: 106 107 108 109 110 111 112 113 114 115, on right: 103
special (104)
    on left: 116, on right: 115
nactuals (105)
    on left: 117 118 119, on right: 36 118 119
actuals (106)
    on left: 120 121, on right: 64 121
constant (107)
    on left: 122 123 124 125 126, on right: 107
typeidentifier (108)
    on left: 127, on right: 13 26 27 28 35
identifier (109)
    on left: 128, on right: 9 20 21 25 32 33 34 36 37 40 41 79 81 113
    116
string (110)
    on left: 129, on right: 14
int (111)
    on left: 130, on right: 15
double (112)
    on left: 131, on right: 16
bool (113)
    on left: 132, on right: 17
array (114)
    on left: 133, on right: 18 19
void (115)
    on left: 134, on right: 21 41
break (116)
    on left: 135, on right: 61
this (117)
    on left: 136, on right: 108
le (118)
    on left: 137, on right: 94
ge (119)
    on left: 138, on right: 95
eq (120)
    on left: 139, on right: 89
neq (121)
    on left: 140, on right: 90
and (122)
    on left: 141, on right: 87
or (123)
    on left: 142, on right: 85
readint (124)
    on left: 143, on right: 111
new (125)
    on left: 144, on right: 113
newarray (126)
    on left: 145, on right: 114 115
intlit (127)
    on left: 146, on right: 122
dbllit (128)
    on left: 147, on right: 123
boollit (129)
    on left: 148, on right: 124
stringlit (130)
    on left: 149, on right: 125
null (131)
    on left: 150, on right: 126
readline (132)
    on left: 151, on right: 112
if (133)
    on left: 152, on right: 65
else (134)
    on left: 153, on right: 66 68
print (135)
    on left: 154, on right: 64
return (136)
    on left: 155, on right: 62 63
class (137)
    on left: 156, on right: 25 26 27 28
extends (138)
    on left: 157, on right: 34 35
implements (139)
    on left: 158, on right: 27 28
for (140)
    on left: 159, on right: 73 74 75 76
while (141)
    on left: 160, on right: 70
interface (142)
    on left: 161, on right: 37
scplus (143)
    on left: 162, on right: 97
scminus (144)
    on left: 163, on right: 98 105
sctimes (145)
    on left: 164, on right: 100
scdiv (146)
    on left: 165, on right: 101
scmod (147)
    on left: 166, on right: 102
sclt (148)
    on left: 167, on right: 92
scgt (149)
    on left: 168, on right: 93
sceq (150)
    on left: 169, on right: 83
scneq (151)
    on left: 170, on right: 104


State 0

    0 $accept: . pgm $end

    $default  reduce using rule 3 (decl)

    pgm      go to state 1
    program  go to state 2
    decl     go to state 3


State 1

    0 $accept: pgm . $end

    $end  shift, and go to state 4


State 2

    1 pgm: program .

    $default  reduce using rule 1 (pgm)


State 3

    2 program: decl .
    4 decl: decl . varDecl
    5     | decl . funcDecl
    6     | decl . interfaceDecl
    7     | decl . classDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    "class"           shift, and go to state 10
    "interface"       shift, and go to state 11
    T_TYPEIDENTIFIER  shift, and go to state 12

    $default  reduce using rule 2 (program)

    varDecl         go to state 13
    variable        go to state 14
    type            go to state 15
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    funcDecl        go to state 19
    classDecl       go to state 20
    interfaceDecl   go to state 21
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26
    void            go to state 27
    class           go to state 28
    interface       go to state 29


State 4

    0 $accept: pgm $end .

    $default  accept


State 5

  134 void: "void" .

    $default  reduce using rule 134 (void)


State 6

  130 int: "int" .

    $default  reduce using rule 130 (int)


State 7

  131 double: "double" .

    $default  reduce using rule 131 (double)


State 8

  132 bool: "bool" .

    $default  reduce using rule 132 (bool)


State 9

  129 string: "string" .

    $default  reduce using rule 129 (string)


State 10

  156 class: "class" .

    $default  reduce using rule 156 (class)


State 11

  161 interface: "interface" .

    $default  reduce using rule 161 (interface)


State 12

  127 typeidentifier: T_TYPEIDENTIFIER .

    $default  reduce using rule 127 (typeidentifier)


State 13

    4 decl: decl varDecl .

    $default  reduce using rule 4 (decl)


State 14

    8 varDecl: variable . ';'

    ';'  shift, and go to state 30


State 15

    9 variable: type . identifier
   20 funcDecl: type . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 31

    identifier  go to state 32


State 16

   10 type: usertype .
   18 arraytype: usertype . array

    "[]"  shift, and go to state 33

    $default  reduce using rule 10 (type)

    array  go to state 34


State 17

   11 type: primtype .
   19 arraytype: primtype . array

    "[]"  shift, and go to state 33

    $default  reduce using rule 11 (type)

    array  go to state 35


State 18

   12 type: arraytype .

    $default  reduce using rule 12 (type)


State 19

    5 decl: decl funcDecl .

    $default  reduce using rule 5 (decl)


State 20

    7 decl: decl classDecl .

    $default  reduce using rule 7 (decl)


State 21

    6 decl: decl interfaceDecl .

    $default  reduce using rule 6 (decl)


State 22

   13 usertype: typeidentifier .

    $default  reduce using rule 13 (usertype)


State 23

   14 primtype: string .

    $default  reduce using rule 14 (primtype)


State 24

   15 primtype: int .

    $default  reduce using rule 15 (primtype)


State 25

   16 primtype: double .

    $default  reduce using rule 16 (primtype)


State 26

   17 primtype: bool .

    $default  reduce using rule 17 (primtype)


State 27

   21 funcDecl: void . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 31

    identifier  go to state 36


State 28

   25 classDecl: class . identifier '{' fields '}'
   26          | class . typeidentifier ext '{' fields '}'
   27          | class . typeidentifier implements identifiersPlus '{' fields '}'
   28          | class . typeidentifier ext implements identifiersPlus '{' fields '}'

    T_IDENTIFIER      shift, and go to state 31
    T_TYPEIDENTIFIER  shift, and go to state 12

    typeidentifier  go to state 37
    identifier      go to state 38


State 29

   37 interfaceDecl: interface . identifier '{' prototypes '}'

    T_IDENTIFIER  shift, and go to state 31

    identifier  go to state 39


State 30

    8 varDecl: variable ';' .

    $default  reduce using rule 8 (varDecl)


State 31

  128 identifier: T_IDENTIFIER .

    $default  reduce using rule 128 (identifier)


State 32

    9 variable: type identifier .
   20 funcDecl: type identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 40

    $default  reduce using rule 9 (variable)


State 33

  133 array: "[]" .

    $default  reduce using rule 133 (array)


State 34

   18 arraytype: usertype array .

    $default  reduce using rule 18 (arraytype)


State 35

   19 arraytype: primtype array .

    $default  reduce using rule 19 (arraytype)


State 36

   21 funcDecl: void identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 41


State 37

   26 classDecl: class typeidentifier . ext '{' fields '}'
   27          | class typeidentifier . implements identifiersPlus '{' fields '}'
   28          | class typeidentifier . ext implements identifiersPlus '{' fields '}'

    "extends"     shift, and go to state 42
    "implements"  shift, and go to state 43

    ext         go to state 44
    extends     go to state 45
    implements  go to state 46


State 38

   25 classDecl: class identifier . '{' fields '}'

    '{'  shift, and go to state 47


State 39

   37 interfaceDecl: interface identifier . '{' prototypes '}'

    '{'  shift, and go to state 48


State 40

   20 funcDecl: type identifier '(' . formals ')' stmtblock

    $default  reduce using rule 22 (formals)

    formals  go to state 49


State 41

   21 funcDecl: void identifier '(' . formals ')' stmtblock

    $default  reduce using rule 22 (formals)

    formals  go to state 50


State 42

  157 extends: "extends" .

    $default  reduce using rule 157 (extends)


State 43

  158 implements: "implements" .

    $default  reduce using rule 158 (implements)


State 44

   26 classDecl: class typeidentifier ext . '{' fields '}'
   28          | class typeidentifier ext . implements identifiersPlus '{' fields '}'

    "implements"  shift, and go to state 43
    '{'           shift, and go to state 51

    implements  go to state 52


State 45

   34 ext: extends . identifier
   35    | extends . typeidentifier

    T_IDENTIFIER      shift, and go to state 31
    T_TYPEIDENTIFIER  shift, and go to state 12

    typeidentifier  go to state 53
    identifier      go to state 54


State 46

   27 classDecl: class typeidentifier implements . identifiersPlus '{' fields '}'

    T_IDENTIFIER  shift, and go to state 31

    identifiersPlus  go to state 55
    identifier       go to state 56


State 47

   25 classDecl: class identifier '{' . fields '}'

    $default  reduce using rule 29 (fields)

    fields  go to state 57


State 48

   37 interfaceDecl: interface identifier '{' . prototypes '}'

    $default  reduce using rule 38 (prototypes)

    prototypes  go to state 58


State 49

   20 funcDecl: type identifier '(' formals . ')' stmtblock
   23 formals: formals . variable
   24        | formals . ',' variable

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    ')'               shift, and go to state 59
    ','               shift, and go to state 60

    variable        go to state 61
    type            go to state 62
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26


State 50

   21 funcDecl: void identifier '(' formals . ')' stmtblock
   23 formals: formals . variable
   24        | formals . ',' variable

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    ')'               shift, and go to state 63
    ','               shift, and go to state 60

    variable        go to state 61
    type            go to state 62
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26


State 51

   26 classDecl: class typeidentifier ext '{' . fields '}'

    $default  reduce using rule 29 (fields)

    fields  go to state 64


State 52

   28 classDecl: class typeidentifier ext implements . identifiersPlus '{' fields '}'

    T_IDENTIFIER  shift, and go to state 31

    identifiersPlus  go to state 65
    identifier       go to state 56


State 53

   35 ext: extends typeidentifier .

    $default  reduce using rule 35 (ext)


State 54

   34 ext: extends identifier .

    $default  reduce using rule 34 (ext)


State 55

   27 classDecl: class typeidentifier implements identifiersPlus . '{' fields '}'
   33 identifiersPlus: identifiersPlus . ',' identifier

    ','  shift, and go to state 66
    '{'  shift, and go to state 67


State 56

   32 identifiersPlus: identifier .

    $default  reduce using rule 32 (identifiersPlus)


State 57

   25 classDecl: class identifier '{' fields . '}'
   30 fields: fields . funcDecl
   31       | fields . varDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    '}'               shift, and go to state 68

    varDecl         go to state 69
    variable        go to state 14
    type            go to state 15
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    funcDecl        go to state 70
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26
    void            go to state 27


State 58

   37 interfaceDecl: interface identifier '{' prototypes . '}'
   39 prototypes: prototypes . prototype

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    '}'               shift, and go to state 71

    type            go to state 72
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    prototype       go to state 73
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26
    void            go to state 74


State 59

   20 funcDecl: type identifier '(' formals ')' . stmtblock

    '{'  shift, and go to state 75

    stmtblock  go to state 76


State 60

   24 formals: formals ',' . variable

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12

    variable        go to state 77
    type            go to state 62
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26


State 61

   23 formals: formals variable .

    $default  reduce using rule 23 (formals)


State 62

    9 variable: type . identifier

    T_IDENTIFIER  shift, and go to state 31

    identifier  go to state 78


State 63

   21 funcDecl: void identifier '(' formals ')' . stmtblock

    '{'  shift, and go to state 75

    stmtblock  go to state 79


State 64

   26 classDecl: class typeidentifier ext '{' fields . '}'
   30 fields: fields . funcDecl
   31       | fields . varDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    '}'               shift, and go to state 80

    varDecl         go to state 69
    variable        go to state 14
    type            go to state 15
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    funcDecl        go to state 70
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26
    void            go to state 27


State 65

   28 classDecl: class typeidentifier ext implements identifiersPlus . '{' fields '}'
   33 identifiersPlus: identifiersPlus . ',' identifier

    ','  shift, and go to state 66
    '{'  shift, and go to state 81


State 66

   33 identifiersPlus: identifiersPlus ',' . identifier

    T_IDENTIFIER  shift, and go to state 31

    identifier  go to state 82


State 67

   27 classDecl: class typeidentifier implements identifiersPlus '{' . fields '}'

    $default  reduce using rule 29 (fields)

    fields  go to state 83


State 68

   25 classDecl: class identifier '{' fields '}' .

    $default  reduce using rule 25 (classDecl)


State 69

   31 fields: fields varDecl .

    $default  reduce using rule 31 (fields)


State 70

   30 fields: fields funcDecl .

    $default  reduce using rule 30 (fields)


State 71

   37 interfaceDecl: interface identifier '{' prototypes '}' .

    $default  reduce using rule 37 (interfaceDecl)


State 72

   40 prototype: type . identifier '(' formals ')' ';'

    T_IDENTIFIER  shift, and go to state 31

    identifier  go to state 84


State 73

   39 prototypes: prototypes prototype .

    $default  reduce using rule 39 (prototypes)


State 74

   41 prototype: void . identifier '(' formals ')' ';'

    T_IDENTIFIER  shift, and go to state 31

    identifier  go to state 85


State 75

   42 stmtblock: '{' . varDeclStar stmtStar '}'

    $default  reduce using rule 43 (varDeclStar)

    varDeclStar  go to state 86


State 76

   20 funcDecl: type identifier '(' formals ')' stmtblock .

    $default  reduce using rule 20 (funcDecl)


State 77

   24 formals: formals ',' variable .

    $default  reduce using rule 24 (formals)


State 78

    9 variable: type identifier .

    $default  reduce using rule 9 (variable)


State 79

   21 funcDecl: void identifier '(' formals ')' stmtblock .

    $default  reduce using rule 21 (funcDecl)


State 80

   26 classDecl: class typeidentifier ext '{' fields '}' .

    $default  reduce using rule 26 (classDecl)


State 81

   28 classDecl: class typeidentifier ext implements identifiersPlus '{' . fields '}'

    $default  reduce using rule 29 (fields)

    fields  go to state 87


State 82

   33 identifiersPlus: identifiersPlus ',' identifier .

    $default  reduce using rule 33 (identifiersPlus)


State 83

   27 classDecl: class typeidentifier implements identifiersPlus '{' fields . '}'
   30 fields: fields . funcDecl
   31       | fields . varDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    '}'               shift, and go to state 88

    varDecl         go to state 69
    variable        go to state 14
    type            go to state 15
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    funcDecl        go to state 70
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26
    void            go to state 27


State 84

   40 prototype: type identifier . '(' formals ')' ';'

    '('  shift, and go to state 89


State 85

   41 prototype: void identifier . '(' formals ')' ';'

    '('  shift, and go to state 90


State 86

   42 stmtblock: '{' varDeclStar . stmtStar '}'
   44 varDeclStar: varDeclStar . varDecl

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12

    $default  reduce using rule 45 (stmtStar)

    varDecl         go to state 91
    variable        go to state 14
    type            go to state 62
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    stmtStar        go to state 92
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26


State 87

   28 classDecl: class typeidentifier ext implements identifiersPlus '{' fields . '}'
   30 fields: fields . funcDecl
   31       | fields . varDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    '}'               shift, and go to state 93

    varDecl         go to state 69
    variable        go to state 14
    type            go to state 15
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    funcDecl        go to state 70
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26
    void            go to state 27


State 88

   27 classDecl: class typeidentifier implements identifiersPlus '{' fields '}' .

    $default  reduce using rule 27 (classDecl)


State 89

   40 prototype: type identifier '(' . formals ')' ';'

    $default  reduce using rule 22 (formals)

    formals  go to state 94


State 90

   41 prototype: void identifier '(' . formals ')' ';'

    $default  reduce using rule 22 (formals)

    formals  go to state 95


State 91

   44 varDeclStar: varDeclStar varDecl .

    $default  reduce using rule 44 (varDeclStar)


State 92

   42 stmtblock: '{' varDeclStar stmtStar . '}'
   46 stmtStar: stmtStar . stmt

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "for"            shift, and go to state 98
    "while"          shift, and go to state 99
    "if"             shift, and go to state 100
    "return"         shift, and go to state 101
    "break"          shift, and go to state 102
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "Print"          shift, and go to state 105
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    ';'              shift, and go to state 112
    '('              shift, and go to state 113
    '{'              shift, and go to state 75
    '}'              shift, and go to state 114
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call             go to state 117
    stmtblock        go to state 118
    stmt             go to state 119
    matched_stmt     go to state 120
    unmatched_stmt   go to state 121
    break_stmt       go to state 122
    return_stmt      go to state 123
    print_stmt       go to state 124
    common_if        go to state 125
    matched_if       go to state 126
    unmatched_if     go to state 127
    common_while     go to state 128
    matched_while    go to state 129
    unmatched_while  go to state 130
    common_for       go to state 131
    matched_for      go to state 132
    unmatched_for    go to state 133
    Lvalue           go to state 134
    expr             go to state 135
    expr1            go to state 136
    expr2            go to state 137
    expr3            go to state 138
    expr4            go to state 139
    expr5            go to state 140
    expr6            go to state 141
    expr7            go to state 142
    expr8            go to state 143
    constant         go to state 144
    identifier       go to state 145
    break            go to state 146
    this             go to state 147
    readint          go to state 148
    new              go to state 149
    newarray         go to state 150
    intlit           go to state 151
    dbllit           go to state 152
    boollit          go to state 153
    stringlit        go to state 154
    null             go to state 155
    readline         go to state 156
    if               go to state 157
    print            go to state 158
    return           go to state 159
    for              go to state 160
    while            go to state 161
    scminus          go to state 162
    scneq            go to state 163


State 93

   28 classDecl: class typeidentifier ext implements identifiersPlus '{' fields '}' .

    $default  reduce using rule 28 (classDecl)


State 94

   23 formals: formals . variable
   24        | formals . ',' variable
   40 prototype: type identifier '(' formals . ')' ';'

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    ')'               shift, and go to state 164
    ','               shift, and go to state 60

    variable        go to state 61
    type            go to state 62
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26


State 95

   23 formals: formals . variable
   24        | formals . ',' variable
   41 prototype: void identifier '(' formals . ')' ';'

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    ')'               shift, and go to state 165
    ','               shift, and go to state 60

    variable        go to state 61
    type            go to state 62
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    typeidentifier  go to state 22
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26


State 96

  150 null: "null" .

    $default  reduce using rule 150 (null)


State 97

  136 this: "this" .

    $default  reduce using rule 136 (this)


State 98

  159 for: "for" .

    $default  reduce using rule 159 (for)


State 99

  160 while: "while" .

    $default  reduce using rule 160 (while)


State 100

  152 if: "if" .

    $default  reduce using rule 152 (if)


State 101

  155 return: "return" .

    $default  reduce using rule 155 (return)


State 102

  135 break: "break" .

    $default  reduce using rule 135 (break)


State 103

  144 new: "New" .

    $default  reduce using rule 144 (new)


State 104

  145 newarray: "NewArray" .

    $default  reduce using rule 145 (newarray)


State 105

  154 print: "Print" .

    $default  reduce using rule 154 (print)


State 106

  143 readint: "ReadInteger" .

    $default  reduce using rule 143 (readint)


State 107

  151 readline: "ReadLine" .

    $default  reduce using rule 151 (readline)


State 108

  147 dbllit: T_DBLLITERAL .

    $default  reduce using rule 147 (dbllit)


State 109

  146 intlit: T_INTLITERAL .

    $default  reduce using rule 146 (intlit)


State 110

  148 boollit: T_BOOLLITERAL .

    $default  reduce using rule 148 (boollit)


State 111

  149 stringlit: T_STRINGLITERAL .

    $default  reduce using rule 149 (stringlit)


State 112

   49 matched_stmt: ';' .

    $default  reduce using rule 49 (matched_stmt)


State 113

  109 expr8: '(' . expr ')'

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 166
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 114

   42 stmtblock: '{' varDeclStar stmtStar '}' .

    $default  reduce using rule 42 (stmtblock)


State 115

  163 scminus: '-' .

    $default  reduce using rule 163 (scminus)


State 116

  170 scneq: '!' .

    $default  reduce using rule 170 (scneq)


State 117

  110 expr8: call .

    $default  reduce using rule 110 (expr8)


State 118

   57 matched_stmt: stmtblock .

    $default  reduce using rule 57 (matched_stmt)


State 119

   46 stmtStar: stmtStar stmt .

    $default  reduce using rule 46 (stmtStar)


State 120

   47 stmt: matched_stmt .

    $default  reduce using rule 47 (stmt)


State 121

   48 stmt: unmatched_stmt .

    $default  reduce using rule 48 (stmt)


State 122

   54 matched_stmt: break_stmt . ';'

    ';'  shift, and go to state 167


State 123

   55 matched_stmt: return_stmt . ';'

    ';'  shift, and go to state 168


State 124

   56 matched_stmt: print_stmt . ';'

    ';'  shift, and go to state 169


State 125

   66 matched_if: common_if . matched_stmt else matched_stmt
   67 unmatched_if: common_if . matched_stmt
   68             | common_if . matched_stmt else unmatched_stmt
   69             | common_if . unmatched_stmt

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "for"            shift, and go to state 98
    "while"          shift, and go to state 99
    "if"             shift, and go to state 100
    "return"         shift, and go to state 101
    "break"          shift, and go to state 102
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "Print"          shift, and go to state 105
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    ';'              shift, and go to state 112
    '('              shift, and go to state 113
    '{'              shift, and go to state 75
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call             go to state 117
    stmtblock        go to state 118
    matched_stmt     go to state 170
    unmatched_stmt   go to state 171
    break_stmt       go to state 122
    return_stmt      go to state 123
    print_stmt       go to state 124
    common_if        go to state 125
    matched_if       go to state 126
    unmatched_if     go to state 127
    common_while     go to state 128
    matched_while    go to state 129
    unmatched_while  go to state 130
    common_for       go to state 131
    matched_for      go to state 132
    unmatched_for    go to state 133
    Lvalue           go to state 134
    expr             go to state 135
    expr1            go to state 136
    expr2            go to state 137
    expr3            go to state 138
    expr4            go to state 139
    expr5            go to state 140
    expr6            go to state 141
    expr7            go to state 142
    expr8            go to state 143
    constant         go to state 144
    identifier       go to state 145
    break            go to state 146
    this             go to state 147
    readint          go to state 148
    new              go to state 149
    newarray         go to state 150
    intlit           go to state 151
    dbllit           go to state 152
    boollit          go to state 153
    stringlit        go to state 154
    null             go to state 155
    readline         go to state 156
    if               go to state 157
    print            go to state 158
    return           go to state 159
    for              go to state 160
    while            go to state 161
    scminus          go to state 162
    scneq            go to state 163


State 126

   51 matched_stmt: matched_if .

    $default  reduce using rule 51 (matched_stmt)


State 127

   58 unmatched_stmt: unmatched_if .

    $default  reduce using rule 58 (unmatched_stmt)


State 128

   71 matched_while: common_while . matched_stmt
   72 unmatched_while: common_while . unmatched_stmt

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "for"            shift, and go to state 98
    "while"          shift, and go to state 99
    "if"             shift, and go to state 100
    "return"         shift, and go to state 101
    "break"          shift, and go to state 102
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "Print"          shift, and go to state 105
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    ';'              shift, and go to state 112
    '('              shift, and go to state 113
    '{'              shift, and go to state 75
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call             go to state 117
    stmtblock        go to state 118
    matched_stmt     go to state 172
    unmatched_stmt   go to state 173
    break_stmt       go to state 122
    return_stmt      go to state 123
    print_stmt       go to state 124
    common_if        go to state 125
    matched_if       go to state 126
    unmatched_if     go to state 127
    common_while     go to state 128
    matched_while    go to state 129
    unmatched_while  go to state 130
    common_for       go to state 131
    matched_for      go to state 132
    unmatched_for    go to state 133
    Lvalue           go to state 134
    expr             go to state 135
    expr1            go to state 136
    expr2            go to state 137
    expr3            go to state 138
    expr4            go to state 139
    expr5            go to state 140
    expr6            go to state 141
    expr7            go to state 142
    expr8            go to state 143
    constant         go to state 144
    identifier       go to state 145
    break            go to state 146
    this             go to state 147
    readint          go to state 148
    new              go to state 149
    newarray         go to state 150
    intlit           go to state 151
    dbllit           go to state 152
    boollit          go to state 153
    stringlit        go to state 154
    null             go to state 155
    readline         go to state 156
    if               go to state 157
    print            go to state 158
    return           go to state 159
    for              go to state 160
    while            go to state 161
    scminus          go to state 162
    scneq            go to state 163


State 129

   52 matched_stmt: matched_while .

    $default  reduce using rule 52 (matched_stmt)


State 130

   59 unmatched_stmt: unmatched_while .

    $default  reduce using rule 59 (unmatched_stmt)


State 131

   77 matched_for: common_for . matched_stmt
   78 unmatched_for: common_for . unmatched_stmt

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "for"            shift, and go to state 98
    "while"          shift, and go to state 99
    "if"             shift, and go to state 100
    "return"         shift, and go to state 101
    "break"          shift, and go to state 102
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "Print"          shift, and go to state 105
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    ';'              shift, and go to state 112
    '('              shift, and go to state 113
    '{'              shift, and go to state 75
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call             go to state 117
    stmtblock        go to state 118
    matched_stmt     go to state 174
    unmatched_stmt   go to state 175
    break_stmt       go to state 122
    return_stmt      go to state 123
    print_stmt       go to state 124
    common_if        go to state 125
    matched_if       go to state 126
    unmatched_if     go to state 127
    common_while     go to state 128
    matched_while    go to state 129
    unmatched_while  go to state 130
    common_for       go to state 131
    matched_for      go to state 132
    unmatched_for    go to state 133
    Lvalue           go to state 134
    expr             go to state 135
    expr1            go to state 136
    expr2            go to state 137
    expr3            go to state 138
    expr4            go to state 139
    expr5            go to state 140
    expr6            go to state 141
    expr7            go to state 142
    expr8            go to state 143
    constant         go to state 144
    identifier       go to state 145
    break            go to state 146
    this             go to state 147
    readint          go to state 148
    new              go to state 149
    newarray         go to state 150
    intlit           go to state 151
    dbllit           go to state 152
    boollit          go to state 153
    stringlit        go to state 154
    null             go to state 155
    readline         go to state 156
    if               go to state 157
    print            go to state 158
    return           go to state 159
    for              go to state 160
    while            go to state 161
    scminus          go to state 162
    scneq            go to state 163


State 132

   53 matched_stmt: matched_for .

    $default  reduce using rule 53 (matched_stmt)


State 133

   60 unmatched_stmt: unmatched_for .

    $default  reduce using rule 60 (unmatched_stmt)


State 134

   83 expr: Lvalue . sceq expr1
  106 expr8: Lvalue .

    '='  shift, and go to state 176

    $default  reduce using rule 106 (expr8)

    sceq  go to state 177


State 135

   50 matched_stmt: expr . ';'

    ';'  shift, and go to state 178


State 136

   80 Lvalue: expr1 . '[' expr1 ']'
   81       | expr1 . '.' identifier
   82 expr: expr1 .
   85 expr1: expr1 . or expr2

    "||"  shift, and go to state 179
    '['   shift, and go to state 180
    '.'   shift, and go to state 181

    $default  reduce using rule 82 (expr)

    or  go to state 182


State 137

   84 expr1: expr2 .
   87 expr2: expr2 . and expr3

    "&&"  shift, and go to state 183

    $default  reduce using rule 84 (expr1)

    and  go to state 184


State 138

   86 expr2: expr3 .

    $default  reduce using rule 86 (expr2)


State 139

   88 expr3: expr4 .
   89      | expr4 . eq expr4
   90      | expr4 . neq expr4

    "=="  shift, and go to state 185
    "!="  shift, and go to state 186

    $default  reduce using rule 88 (expr3)

    eq   go to state 187
    neq  go to state 188


State 140

   91 expr4: expr5 .
   92      | expr5 . sclt expr5
   93      | expr5 . scgt expr5
   94      | expr5 . le expr5
   95      | expr5 . ge expr5
   97 expr5: expr5 . scplus expr6
   98      | expr5 . scminus expr6

    "<="  shift, and go to state 189
    ">="  shift, and go to state 190
    '+'   shift, and go to state 191
    '-'   shift, and go to state 115
    '<'   shift, and go to state 192
    '>'   shift, and go to state 193

    '-'       [reduce using rule 91 (expr4)]
    $default  reduce using rule 91 (expr4)

    le       go to state 194
    ge       go to state 195
    scplus   go to state 196
    scminus  go to state 197
    sclt     go to state 198
    scgt     go to state 199


State 141

   96 expr5: expr6 .
  100 expr6: expr6 . sctimes expr7
  101      | expr6 . scdiv expr7
  102      | expr6 . scmod expr7

    '*'  shift, and go to state 200
    '/'  shift, and go to state 201
    '%'  shift, and go to state 202

    $default  reduce using rule 96 (expr5)

    sctimes  go to state 203
    scdiv    go to state 204
    scmod    go to state 205


State 142

   99 expr6: expr7 .

    $default  reduce using rule 99 (expr6)


State 143

  103 expr7: expr8 .

    $default  reduce using rule 103 (expr7)


State 144

  107 expr8: constant .

    $default  reduce using rule 107 (expr8)


State 145

   36 call: identifier . '(' nactuals ')'
   79 Lvalue: identifier .

    '('  shift, and go to state 206

    '('       [reduce using rule 79 (Lvalue)]
    $default  reduce using rule 79 (Lvalue)


State 146

   61 break_stmt: break .

    $default  reduce using rule 61 (break_stmt)


State 147

  108 expr8: this .

    $default  reduce using rule 108 (expr8)


State 148

  111 expr8: readint . '(' ')'

    '('  shift, and go to state 207


State 149

  113 expr8: new . '(' identifier ')'

    '('  shift, and go to state 208


State 150

  114 expr8: newarray . '(' expr ',' type ')'
  115      | newarray . '(' expr ',' special ')'

    '('  shift, and go to state 209


State 151

  122 constant: intlit .

    $default  reduce using rule 122 (constant)


State 152

  123 constant: dbllit .

    $default  reduce using rule 123 (constant)


State 153

  124 constant: boollit .

    $default  reduce using rule 124 (constant)


State 154

  125 constant: stringlit .

    $default  reduce using rule 125 (constant)


State 155

  126 constant: null .

    $default  reduce using rule 126 (constant)


State 156

  112 expr8: readline . '(' ')'

    '('  shift, and go to state 210


State 157

   65 common_if: if . '(' expr ')'

    '('  shift, and go to state 211


State 158

   64 print_stmt: print . '(' actuals ')'

    '('  shift, and go to state 212


State 159

   62 return_stmt: return .
   63            | return . expr

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    $default  reduce using rule 62 (return_stmt)

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 213
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 160

   73 common_for: for . '(' expr ';' expr ';' expr ')'
   74           | for . '(' ';' expr ';' expr ')'
   75           | for . '(' expr ';' expr ';' ')'
   76           | for . '(' ';' expr ';' ')'

    '('  shift, and go to state 214


State 161

   70 common_while: while . '(' expr1 ')'

    '('  shift, and go to state 215


State 162

  105 expr7: scminus . expr7

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 218
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 163

  104 expr7: scneq . expr7

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 219
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 164

   40 prototype: type identifier '(' formals ')' . ';'

    ';'  shift, and go to state 220


State 165

   41 prototype: void identifier '(' formals ')' . ';'

    ';'  shift, and go to state 221


State 166

  109 expr8: '(' expr . ')'

    ')'  shift, and go to state 222


State 167

   54 matched_stmt: break_stmt ';' .

    $default  reduce using rule 54 (matched_stmt)


State 168

   55 matched_stmt: return_stmt ';' .

    $default  reduce using rule 55 (matched_stmt)


State 169

   56 matched_stmt: print_stmt ';' .

    $default  reduce using rule 56 (matched_stmt)


State 170

   66 matched_if: common_if matched_stmt . else matched_stmt
   67 unmatched_if: common_if matched_stmt .
   68             | common_if matched_stmt . else unmatched_stmt

    "else"  shift, and go to state 223

    $default  reduce using rule 67 (unmatched_if)

    else  go to state 224


State 171

   69 unmatched_if: common_if unmatched_stmt .

    $default  reduce using rule 69 (unmatched_if)


State 172

   71 matched_while: common_while matched_stmt .

    $default  reduce using rule 71 (matched_while)


State 173

   72 unmatched_while: common_while unmatched_stmt .

    $default  reduce using rule 72 (unmatched_while)


State 174

   77 matched_for: common_for matched_stmt .

    $default  reduce using rule 77 (matched_for)


State 175

   78 unmatched_for: common_for unmatched_stmt .

    $default  reduce using rule 78 (unmatched_for)


State 176

  169 sceq: '=' .

    $default  reduce using rule 169 (sceq)


State 177

   83 expr: Lvalue sceq . expr1

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 225
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 178

   50 matched_stmt: expr ';' .

    $default  reduce using rule 50 (matched_stmt)


State 179

  142 or: "||" .

    $default  reduce using rule 142 (or)


State 180

   80 Lvalue: expr1 '[' . expr1 ']'

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 226
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 181

   81 Lvalue: expr1 '.' . identifier

    T_IDENTIFIER  shift, and go to state 31

    identifier  go to state 227


State 182

   85 expr1: expr1 or . expr2

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 228
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 183

  141 and: "&&" .

    $default  reduce using rule 141 (and)


State 184

   87 expr2: expr2 and . expr3

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 229
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 185

  139 eq: "==" .

    $default  reduce using rule 139 (eq)


State 186

  140 neq: "!=" .

    $default  reduce using rule 140 (neq)


State 187

   89 expr3: expr4 eq . expr4

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 230
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 188

   90 expr3: expr4 neq . expr4

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 231
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 189

  137 le: "<=" .

    $default  reduce using rule 137 (le)


State 190

  138 ge: ">=" .

    $default  reduce using rule 138 (ge)


State 191

  162 scplus: '+' .

    $default  reduce using rule 162 (scplus)


State 192

  167 sclt: '<' .

    $default  reduce using rule 167 (sclt)


State 193

  168 scgt: '>' .

    $default  reduce using rule 168 (scgt)


State 194

   94 expr4: expr5 le . expr5

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 232
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 195

   95 expr4: expr5 ge . expr5

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 233
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 196

   97 expr5: expr5 scplus . expr6

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 234
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 197

   98 expr5: expr5 scminus . expr6

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 235
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 198

   92 expr4: expr5 sclt . expr5

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 236
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 199

   93 expr4: expr5 scgt . expr5

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 237
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 200

  164 sctimes: '*' .

    $default  reduce using rule 164 (sctimes)


State 201

  165 scdiv: '/' .

    $default  reduce using rule 165 (scdiv)


State 202

  166 scmod: '%' .

    $default  reduce using rule 166 (scmod)


State 203

  100 expr6: expr6 sctimes . expr7

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 238
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 204

  101 expr6: expr6 scdiv . expr7

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 239
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 205

  102 expr6: expr6 scmod . expr7

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 217
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 240
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 206

   36 call: identifier '(' . nactuals ')'

    $default  reduce using rule 117 (nactuals)

    nactuals  go to state 241


State 207

  111 expr8: readint '(' . ')'

    ')'  shift, and go to state 242


State 208

  113 expr8: new '(' . identifier ')'

    T_IDENTIFIER  shift, and go to state 31

    identifier  go to state 243


State 209

  114 expr8: newarray '(' . expr ',' type ')'
  115      | newarray '(' . expr ',' special ')'

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 244
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 210

  112 expr8: readline '(' . ')'

    ')'  shift, and go to state 245


State 211

   65 common_if: if '(' . expr ')'

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 246
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 212

   64 print_stmt: print '(' . actuals ')'

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 247
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    actuals     go to state 248
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 213

   63 return_stmt: return expr .

    $default  reduce using rule 63 (return_stmt)


State 214

   73 common_for: for '(' . expr ';' expr ';' expr ')'
   74           | for '(' . ';' expr ';' expr ')'
   75           | for '(' . expr ';' expr ';' ')'
   76           | for '(' . ';' expr ';' ')'

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    ';'              shift, and go to state 249
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 250
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 215

   70 common_while: while '(' . expr1 ')'

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 216
    expr1       go to state 251
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 216

  106 expr8: Lvalue .

    $default  reduce using rule 106 (expr8)


State 217

   80 Lvalue: expr1 . '[' expr1 ']'
   81       | expr1 . '.' identifier
   85 expr1: expr1 . or expr2

    "||"  shift, and go to state 179
    '['   shift, and go to state 180
    '.'   shift, and go to state 181

    or  go to state 182


State 218

   99 expr6: expr7 .
  105 expr7: scminus expr7 .

    "<="      reduce using rule 99 (expr6)
    "<="      [reduce using rule 105 (expr7)]
    ">="      reduce using rule 99 (expr6)
    ">="      [reduce using rule 105 (expr7)]
    "=="      reduce using rule 99 (expr6)
    "=="      [reduce using rule 105 (expr7)]
    "!="      reduce using rule 99 (expr6)
    "!="      [reduce using rule 105 (expr7)]
    "&&"      reduce using rule 99 (expr6)
    "&&"      [reduce using rule 105 (expr7)]
    "||"      reduce using rule 99 (expr6)
    "||"      [reduce using rule 105 (expr7)]
    '['       reduce using rule 99 (expr6)
    '['       [reduce using rule 105 (expr7)]
    '.'       reduce using rule 99 (expr6)
    '.'       [reduce using rule 105 (expr7)]
    '+'       reduce using rule 99 (expr6)
    '+'       [reduce using rule 105 (expr7)]
    '-'       reduce using rule 99 (expr6)
    '-'       [reduce using rule 105 (expr7)]
    '*'       reduce using rule 99 (expr6)
    '*'       [reduce using rule 105 (expr7)]
    '/'       reduce using rule 99 (expr6)
    '/'       [reduce using rule 105 (expr7)]
    '%'       reduce using rule 99 (expr6)
    '%'       [reduce using rule 105 (expr7)]
    '<'       reduce using rule 99 (expr6)
    '<'       [reduce using rule 105 (expr7)]
    '>'       reduce using rule 99 (expr6)
    '>'       [reduce using rule 105 (expr7)]
    $default  reduce using rule 105 (expr7)


State 219

   99 expr6: expr7 .
  104 expr7: scneq expr7 .

    "<="      reduce using rule 99 (expr6)
    "<="      [reduce using rule 104 (expr7)]
    ">="      reduce using rule 99 (expr6)
    ">="      [reduce using rule 104 (expr7)]
    "=="      reduce using rule 99 (expr6)
    "=="      [reduce using rule 104 (expr7)]
    "!="      reduce using rule 99 (expr6)
    "!="      [reduce using rule 104 (expr7)]
    "&&"      reduce using rule 99 (expr6)
    "&&"      [reduce using rule 104 (expr7)]
    "||"      reduce using rule 99 (expr6)
    "||"      [reduce using rule 104 (expr7)]
    '['       reduce using rule 99 (expr6)
    '['       [reduce using rule 104 (expr7)]
    '.'       reduce using rule 99 (expr6)
    '.'       [reduce using rule 104 (expr7)]
    '+'       reduce using rule 99 (expr6)
    '+'       [reduce using rule 104 (expr7)]
    '-'       reduce using rule 99 (expr6)
    '-'       [reduce using rule 104 (expr7)]
    '*'       reduce using rule 99 (expr6)
    '*'       [reduce using rule 104 (expr7)]
    '/'       reduce using rule 99 (expr6)
    '/'       [reduce using rule 104 (expr7)]
    '%'       reduce using rule 99 (expr6)
    '%'       [reduce using rule 104 (expr7)]
    '<'       reduce using rule 99 (expr6)
    '<'       [reduce using rule 104 (expr7)]
    '>'       reduce using rule 99 (expr6)
    '>'       [reduce using rule 104 (expr7)]
    $default  reduce using rule 104 (expr7)


State 220

   40 prototype: type identifier '(' formals ')' ';' .

    $default  reduce using rule 40 (prototype)


State 221

   41 prototype: void identifier '(' formals ')' ';' .

    $default  reduce using rule 41 (prototype)


State 222

  109 expr8: '(' expr ')' .

    $default  reduce using rule 109 (expr8)


State 223

  153 else: "else" .

    $default  reduce using rule 153 (else)


State 224

   66 matched_if: common_if matched_stmt else . matched_stmt
   68 unmatched_if: common_if matched_stmt else . unmatched_stmt

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "for"            shift, and go to state 98
    "while"          shift, and go to state 99
    "if"             shift, and go to state 100
    "return"         shift, and go to state 101
    "break"          shift, and go to state 102
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "Print"          shift, and go to state 105
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    ';'              shift, and go to state 112
    '('              shift, and go to state 113
    '{'              shift, and go to state 75
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call             go to state 117
    stmtblock        go to state 118
    matched_stmt     go to state 252
    unmatched_stmt   go to state 253
    break_stmt       go to state 122
    return_stmt      go to state 123
    print_stmt       go to state 124
    common_if        go to state 125
    matched_if       go to state 126
    unmatched_if     go to state 127
    common_while     go to state 128
    matched_while    go to state 129
    unmatched_while  go to state 130
    common_for       go to state 131
    matched_for      go to state 132
    unmatched_for    go to state 133
    Lvalue           go to state 134
    expr             go to state 135
    expr1            go to state 136
    expr2            go to state 137
    expr3            go to state 138
    expr4            go to state 139
    expr5            go to state 140
    expr6            go to state 141
    expr7            go to state 142
    expr8            go to state 143
    constant         go to state 144
    identifier       go to state 145
    break            go to state 146
    this             go to state 147
    readint          go to state 148
    new              go to state 149
    newarray         go to state 150
    intlit           go to state 151
    dbllit           go to state 152
    boollit          go to state 153
    stringlit        go to state 154
    null             go to state 155
    readline         go to state 156
    if               go to state 157
    print            go to state 158
    return           go to state 159
    for              go to state 160
    while            go to state 161
    scminus          go to state 162
    scneq            go to state 163


State 225

   80 Lvalue: expr1 . '[' expr1 ']'
   81       | expr1 . '.' identifier
   83 expr: Lvalue sceq expr1 .
   85 expr1: expr1 . or expr2

    "||"  shift, and go to state 179
    '['   shift, and go to state 180
    '.'   shift, and go to state 181

    $default  reduce using rule 83 (expr)

    or  go to state 182


State 226

   80 Lvalue: expr1 . '[' expr1 ']'
   80       | expr1 '[' expr1 . ']'
   81       | expr1 . '.' identifier
   85 expr1: expr1 . or expr2

    "||"  shift, and go to state 179
    '['   shift, and go to state 180
    ']'   shift, and go to state 254
    '.'   shift, and go to state 181

    or  go to state 182


State 227

   81 Lvalue: expr1 '.' identifier .

    $default  reduce using rule 81 (Lvalue)


State 228

   84 expr1: expr2 .
   85      | expr1 or expr2 .
   87 expr2: expr2 . and expr3

    "&&"  shift, and go to state 183

    "||"      reduce using rule 84 (expr1)
    "||"      [reduce using rule 85 (expr1)]
    '['       reduce using rule 84 (expr1)
    '['       [reduce using rule 85 (expr1)]
    '.'       reduce using rule 84 (expr1)
    '.'       [reduce using rule 85 (expr1)]
    $default  reduce using rule 85 (expr1)

    and  go to state 184


State 229

   86 expr2: expr3 .
   87      | expr2 and expr3 .

    "&&"      reduce using rule 86 (expr2)
    "&&"      [reduce using rule 87 (expr2)]
    "||"      reduce using rule 86 (expr2)
    "||"      [reduce using rule 87 (expr2)]
    '['       reduce using rule 86 (expr2)
    '['       [reduce using rule 87 (expr2)]
    '.'       reduce using rule 86 (expr2)
    '.'       [reduce using rule 87 (expr2)]
    $default  reduce using rule 87 (expr2)


State 230

   88 expr3: expr4 .
   89      | expr4 . eq expr4
   89      | expr4 eq expr4 .
   90      | expr4 . neq expr4

    "=="  shift, and go to state 185
    "!="  shift, and go to state 186

    "&&"      reduce using rule 88 (expr3)
    "&&"      [reduce using rule 89 (expr3)]
    "||"      reduce using rule 88 (expr3)
    "||"      [reduce using rule 89 (expr3)]
    '['       reduce using rule 88 (expr3)
    '['       [reduce using rule 89 (expr3)]
    '.'       reduce using rule 88 (expr3)
    '.'       [reduce using rule 89 (expr3)]
    $default  reduce using rule 89 (expr3)

    eq   go to state 187
    neq  go to state 188


State 231

   88 expr3: expr4 .
   89      | expr4 . eq expr4
   90      | expr4 . neq expr4
   90      | expr4 neq expr4 .

    "=="  shift, and go to state 185
    "!="  shift, and go to state 186

    "&&"      reduce using rule 88 (expr3)
    "&&"      [reduce using rule 90 (expr3)]
    "||"      reduce using rule 88 (expr3)
    "||"      [reduce using rule 90 (expr3)]
    '['       reduce using rule 88 (expr3)
    '['       [reduce using rule 90 (expr3)]
    '.'       reduce using rule 88 (expr3)
    '.'       [reduce using rule 90 (expr3)]
    $default  reduce using rule 90 (expr3)

    eq   go to state 187
    neq  go to state 188


State 232

   91 expr4: expr5 .
   92      | expr5 . sclt expr5
   93      | expr5 . scgt expr5
   94      | expr5 . le expr5
   94      | expr5 le expr5 .
   95      | expr5 . ge expr5
   97 expr5: expr5 . scplus expr6
   98      | expr5 . scminus expr6

    "<="  shift, and go to state 189
    ">="  shift, and go to state 190
    '+'   shift, and go to state 191
    '-'   shift, and go to state 115
    '<'   shift, and go to state 192
    '>'   shift, and go to state 193

    "=="      reduce using rule 91 (expr4)
    "=="      [reduce using rule 94 (expr4)]
    "!="      reduce using rule 91 (expr4)
    "!="      [reduce using rule 94 (expr4)]
    "&&"      reduce using rule 91 (expr4)
    "&&"      [reduce using rule 94 (expr4)]
    "||"      reduce using rule 91 (expr4)
    "||"      [reduce using rule 94 (expr4)]
    '['       reduce using rule 91 (expr4)
    '['       [reduce using rule 94 (expr4)]
    '.'       reduce using rule 91 (expr4)
    '.'       [reduce using rule 94 (expr4)]
    '-'       [reduce using rule 94 (expr4)]
    $default  reduce using rule 94 (expr4)

    le       go to state 194
    ge       go to state 195
    scplus   go to state 196
    scminus  go to state 197
    sclt     go to state 198
    scgt     go to state 199


State 233

   91 expr4: expr5 .
   92      | expr5 . sclt expr5
   93      | expr5 . scgt expr5
   94      | expr5 . le expr5
   95      | expr5 . ge expr5
   95      | expr5 ge expr5 .
   97 expr5: expr5 . scplus expr6
   98      | expr5 . scminus expr6

    "<="  shift, and go to state 189
    ">="  shift, and go to state 190
    '+'   shift, and go to state 191
    '-'   shift, and go to state 115
    '<'   shift, and go to state 192
    '>'   shift, and go to state 193

    "=="      reduce using rule 91 (expr4)
    "=="      [reduce using rule 95 (expr4)]
    "!="      reduce using rule 91 (expr4)
    "!="      [reduce using rule 95 (expr4)]
    "&&"      reduce using rule 91 (expr4)
    "&&"      [reduce using rule 95 (expr4)]
    "||"      reduce using rule 91 (expr4)
    "||"      [reduce using rule 95 (expr4)]
    '['       reduce using rule 91 (expr4)
    '['       [reduce using rule 95 (expr4)]
    '.'       reduce using rule 91 (expr4)
    '.'       [reduce using rule 95 (expr4)]
    '-'       [reduce using rule 95 (expr4)]
    $default  reduce using rule 95 (expr4)

    le       go to state 194
    ge       go to state 195
    scplus   go to state 196
    scminus  go to state 197
    sclt     go to state 198
    scgt     go to state 199


State 234

   96 expr5: expr6 .
   97      | expr5 scplus expr6 .
  100 expr6: expr6 . sctimes expr7
  101      | expr6 . scdiv expr7
  102      | expr6 . scmod expr7

    '*'  shift, and go to state 200
    '/'  shift, and go to state 201
    '%'  shift, and go to state 202

    "<="      reduce using rule 96 (expr5)
    "<="      [reduce using rule 97 (expr5)]
    ">="      reduce using rule 96 (expr5)
    ">="      [reduce using rule 97 (expr5)]
    "=="      reduce using rule 96 (expr5)
    "=="      [reduce using rule 97 (expr5)]
    "!="      reduce using rule 96 (expr5)
    "!="      [reduce using rule 97 (expr5)]
    "&&"      reduce using rule 96 (expr5)
    "&&"      [reduce using rule 97 (expr5)]
    "||"      reduce using rule 96 (expr5)
    "||"      [reduce using rule 97 (expr5)]
    '['       reduce using rule 96 (expr5)
    '['       [reduce using rule 97 (expr5)]
    '.'       reduce using rule 96 (expr5)
    '.'       [reduce using rule 97 (expr5)]
    '+'       reduce using rule 96 (expr5)
    '+'       [reduce using rule 97 (expr5)]
    '-'       reduce using rule 96 (expr5)
    '-'       [reduce using rule 97 (expr5)]
    '<'       reduce using rule 96 (expr5)
    '<'       [reduce using rule 97 (expr5)]
    '>'       reduce using rule 96 (expr5)
    '>'       [reduce using rule 97 (expr5)]
    $default  reduce using rule 97 (expr5)

    sctimes  go to state 203
    scdiv    go to state 204
    scmod    go to state 205


State 235

   96 expr5: expr6 .
   98      | expr5 scminus expr6 .
  100 expr6: expr6 . sctimes expr7
  101      | expr6 . scdiv expr7
  102      | expr6 . scmod expr7

    '*'  shift, and go to state 200
    '/'  shift, and go to state 201
    '%'  shift, and go to state 202

    "<="      reduce using rule 96 (expr5)
    "<="      [reduce using rule 98 (expr5)]
    ">="      reduce using rule 96 (expr5)
    ">="      [reduce using rule 98 (expr5)]
    "=="      reduce using rule 96 (expr5)
    "=="      [reduce using rule 98 (expr5)]
    "!="      reduce using rule 96 (expr5)
    "!="      [reduce using rule 98 (expr5)]
    "&&"      reduce using rule 96 (expr5)
    "&&"      [reduce using rule 98 (expr5)]
    "||"      reduce using rule 96 (expr5)
    "||"      [reduce using rule 98 (expr5)]
    '['       reduce using rule 96 (expr5)
    '['       [reduce using rule 98 (expr5)]
    '.'       reduce using rule 96 (expr5)
    '.'       [reduce using rule 98 (expr5)]
    '+'       reduce using rule 96 (expr5)
    '+'       [reduce using rule 98 (expr5)]
    '-'       reduce using rule 96 (expr5)
    '-'       [reduce using rule 98 (expr5)]
    '<'       reduce using rule 96 (expr5)
    '<'       [reduce using rule 98 (expr5)]
    '>'       reduce using rule 96 (expr5)
    '>'       [reduce using rule 98 (expr5)]
    $default  reduce using rule 98 (expr5)

    sctimes  go to state 203
    scdiv    go to state 204
    scmod    go to state 205


State 236

   91 expr4: expr5 .
   92      | expr5 . sclt expr5
   92      | expr5 sclt expr5 .
   93      | expr5 . scgt expr5
   94      | expr5 . le expr5
   95      | expr5 . ge expr5
   97 expr5: expr5 . scplus expr6
   98      | expr5 . scminus expr6

    "<="  shift, and go to state 189
    ">="  shift, and go to state 190
    '+'   shift, and go to state 191
    '-'   shift, and go to state 115
    '<'   shift, and go to state 192
    '>'   shift, and go to state 193

    "=="      reduce using rule 91 (expr4)
    "=="      [reduce using rule 92 (expr4)]
    "!="      reduce using rule 91 (expr4)
    "!="      [reduce using rule 92 (expr4)]
    "&&"      reduce using rule 91 (expr4)
    "&&"      [reduce using rule 92 (expr4)]
    "||"      reduce using rule 91 (expr4)
    "||"      [reduce using rule 92 (expr4)]
    '['       reduce using rule 91 (expr4)
    '['       [reduce using rule 92 (expr4)]
    '.'       reduce using rule 91 (expr4)
    '.'       [reduce using rule 92 (expr4)]
    '-'       [reduce using rule 92 (expr4)]
    $default  reduce using rule 92 (expr4)

    le       go to state 194
    ge       go to state 195
    scplus   go to state 196
    scminus  go to state 197
    sclt     go to state 198
    scgt     go to state 199


State 237

   91 expr4: expr5 .
   92      | expr5 . sclt expr5
   93      | expr5 . scgt expr5
   93      | expr5 scgt expr5 .
   94      | expr5 . le expr5
   95      | expr5 . ge expr5
   97 expr5: expr5 . scplus expr6
   98      | expr5 . scminus expr6

    "<="  shift, and go to state 189
    ">="  shift, and go to state 190
    '+'   shift, and go to state 191
    '-'   shift, and go to state 115
    '<'   shift, and go to state 192
    '>'   shift, and go to state 193

    "=="      reduce using rule 91 (expr4)
    "=="      [reduce using rule 93 (expr4)]
    "!="      reduce using rule 91 (expr4)
    "!="      [reduce using rule 93 (expr4)]
    "&&"      reduce using rule 91 (expr4)
    "&&"      [reduce using rule 93 (expr4)]
    "||"      reduce using rule 91 (expr4)
    "||"      [reduce using rule 93 (expr4)]
    '['       reduce using rule 91 (expr4)
    '['       [reduce using rule 93 (expr4)]
    '.'       reduce using rule 91 (expr4)
    '.'       [reduce using rule 93 (expr4)]
    '-'       [reduce using rule 93 (expr4)]
    $default  reduce using rule 93 (expr4)

    le       go to state 194
    ge       go to state 195
    scplus   go to state 196
    scminus  go to state 197
    sclt     go to state 198
    scgt     go to state 199


State 238

   99 expr6: expr7 .
  100      | expr6 sctimes expr7 .

    "<="      reduce using rule 99 (expr6)
    "<="      [reduce using rule 100 (expr6)]
    ">="      reduce using rule 99 (expr6)
    ">="      [reduce using rule 100 (expr6)]
    "=="      reduce using rule 99 (expr6)
    "=="      [reduce using rule 100 (expr6)]
    "!="      reduce using rule 99 (expr6)
    "!="      [reduce using rule 100 (expr6)]
    "&&"      reduce using rule 99 (expr6)
    "&&"      [reduce using rule 100 (expr6)]
    "||"      reduce using rule 99 (expr6)
    "||"      [reduce using rule 100 (expr6)]
    '['       reduce using rule 99 (expr6)
    '['       [reduce using rule 100 (expr6)]
    '.'       reduce using rule 99 (expr6)
    '.'       [reduce using rule 100 (expr6)]
    '+'       reduce using rule 99 (expr6)
    '+'       [reduce using rule 100 (expr6)]
    '-'       reduce using rule 99 (expr6)
    '-'       [reduce using rule 100 (expr6)]
    '*'       reduce using rule 99 (expr6)
    '*'       [reduce using rule 100 (expr6)]
    '/'       reduce using rule 99 (expr6)
    '/'       [reduce using rule 100 (expr6)]
    '%'       reduce using rule 99 (expr6)
    '%'       [reduce using rule 100 (expr6)]
    '<'       reduce using rule 99 (expr6)
    '<'       [reduce using rule 100 (expr6)]
    '>'       reduce using rule 99 (expr6)
    '>'       [reduce using rule 100 (expr6)]
    $default  reduce using rule 100 (expr6)


State 239

   99 expr6: expr7 .
  101      | expr6 scdiv expr7 .

    "<="      reduce using rule 99 (expr6)
    "<="      [reduce using rule 101 (expr6)]
    ">="      reduce using rule 99 (expr6)
    ">="      [reduce using rule 101 (expr6)]
    "=="      reduce using rule 99 (expr6)
    "=="      [reduce using rule 101 (expr6)]
    "!="      reduce using rule 99 (expr6)
    "!="      [reduce using rule 101 (expr6)]
    "&&"      reduce using rule 99 (expr6)
    "&&"      [reduce using rule 101 (expr6)]
    "||"      reduce using rule 99 (expr6)
    "||"      [reduce using rule 101 (expr6)]
    '['       reduce using rule 99 (expr6)
    '['       [reduce using rule 101 (expr6)]
    '.'       reduce using rule 99 (expr6)
    '.'       [reduce using rule 101 (expr6)]
    '+'       reduce using rule 99 (expr6)
    '+'       [reduce using rule 101 (expr6)]
    '-'       reduce using rule 99 (expr6)
    '-'       [reduce using rule 101 (expr6)]
    '*'       reduce using rule 99 (expr6)
    '*'       [reduce using rule 101 (expr6)]
    '/'       reduce using rule 99 (expr6)
    '/'       [reduce using rule 101 (expr6)]
    '%'       reduce using rule 99 (expr6)
    '%'       [reduce using rule 101 (expr6)]
    '<'       reduce using rule 99 (expr6)
    '<'       [reduce using rule 101 (expr6)]
    '>'       reduce using rule 99 (expr6)
    '>'       [reduce using rule 101 (expr6)]
    $default  reduce using rule 101 (expr6)


State 240

   99 expr6: expr7 .
  102      | expr6 scmod expr7 .

    "<="      reduce using rule 99 (expr6)
    "<="      [reduce using rule 102 (expr6)]
    ">="      reduce using rule 99 (expr6)
    ">="      [reduce using rule 102 (expr6)]
    "=="      reduce using rule 99 (expr6)
    "=="      [reduce using rule 102 (expr6)]
    "!="      reduce using rule 99 (expr6)
    "!="      [reduce using rule 102 (expr6)]
    "&&"      reduce using rule 99 (expr6)
    "&&"      [reduce using rule 102 (expr6)]
    "||"      reduce using rule 99 (expr6)
    "||"      [reduce using rule 102 (expr6)]
    '['       reduce using rule 99 (expr6)
    '['       [reduce using rule 102 (expr6)]
    '.'       reduce using rule 99 (expr6)
    '.'       [reduce using rule 102 (expr6)]
    '+'       reduce using rule 99 (expr6)
    '+'       [reduce using rule 102 (expr6)]
    '-'       reduce using rule 99 (expr6)
    '-'       [reduce using rule 102 (expr6)]
    '*'       reduce using rule 99 (expr6)
    '*'       [reduce using rule 102 (expr6)]
    '/'       reduce using rule 99 (expr6)
    '/'       [reduce using rule 102 (expr6)]
    '%'       reduce using rule 99 (expr6)
    '%'       [reduce using rule 102 (expr6)]
    '<'       reduce using rule 99 (expr6)
    '<'       [reduce using rule 102 (expr6)]
    '>'       reduce using rule 99 (expr6)
    '>'       [reduce using rule 102 (expr6)]
    $default  reduce using rule 102 (expr6)


State 241

   36 call: identifier '(' nactuals . ')'
  118 nactuals: nactuals . expr
  119         | nactuals . ',' expr

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    ')'              shift, and go to state 255
    ','              shift, and go to state 256
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 257
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 242

  111 expr8: readint '(' ')' .

    $default  reduce using rule 111 (expr8)


State 243

  113 expr8: new '(' identifier . ')'

    ')'  shift, and go to state 258


State 244

  114 expr8: newarray '(' expr . ',' type ')'
  115      | newarray '(' expr . ',' special ')'

    ','  shift, and go to state 259


State 245

  112 expr8: readline '(' ')' .

    $default  reduce using rule 112 (expr8)


State 246

   65 common_if: if '(' expr . ')'

    ')'  shift, and go to state 260


State 247

  120 actuals: expr .

    $default  reduce using rule 120 (actuals)


State 248

   64 print_stmt: print '(' actuals . ')'
  121 actuals: actuals . ',' expr

    ')'  shift, and go to state 261
    ','  shift, and go to state 262


State 249

   74 common_for: for '(' ';' . expr ';' expr ')'
   76           | for '(' ';' . expr ';' ')'

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 263
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 250

   73 common_for: for '(' expr . ';' expr ';' expr ')'
   75           | for '(' expr . ';' expr ';' ')'

    ';'  shift, and go to state 264


State 251

   70 common_while: while '(' expr1 . ')'
   80 Lvalue: expr1 . '[' expr1 ']'
   81       | expr1 . '.' identifier
   85 expr1: expr1 . or expr2

    "||"  shift, and go to state 179
    ')'   shift, and go to state 265
    '['   shift, and go to state 180
    '.'   shift, and go to state 181

    or  go to state 182


State 252

   66 matched_if: common_if matched_stmt else matched_stmt .

    $default  reduce using rule 66 (matched_if)


State 253

   68 unmatched_if: common_if matched_stmt else unmatched_stmt .

    $default  reduce using rule 68 (unmatched_if)


State 254

   80 Lvalue: expr1 '[' expr1 ']' .

    $default  reduce using rule 80 (Lvalue)


State 255

   36 call: identifier '(' nactuals ')' .

    $default  reduce using rule 36 (call)


State 256

  119 nactuals: nactuals ',' . expr

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 266
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 257

  118 nactuals: nactuals expr .

    $default  reduce using rule 118 (nactuals)


State 258

  113 expr8: new '(' identifier ')' .

    $default  reduce using rule 113 (expr8)


State 259

  114 expr8: newarray '(' expr ',' . type ')'
  115      | newarray '(' expr ',' . special ')'

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_IDENTIFIER      shift, and go to state 31
    T_TYPEIDENTIFIER  shift, and go to state 12

    type            go to state 267
    usertype        go to state 16
    primtype        go to state 17
    arraytype       go to state 18
    special         go to state 268
    typeidentifier  go to state 22
    identifier      go to state 269
    string          go to state 23
    int             go to state 24
    double          go to state 25
    bool            go to state 26


State 260

   65 common_if: if '(' expr ')' .

    $default  reduce using rule 65 (common_if)


State 261

   64 print_stmt: print '(' actuals ')' .

    $default  reduce using rule 64 (print_stmt)


State 262

  121 actuals: actuals ',' . expr

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 270
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 263

   74 common_for: for '(' ';' expr . ';' expr ')'
   76           | for '(' ';' expr . ';' ')'

    ';'  shift, and go to state 271


State 264

   73 common_for: for '(' expr ';' . expr ';' expr ')'
   75           | for '(' expr ';' . expr ';' ')'

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 272
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 265

   70 common_while: while '(' expr1 ')' .

    $default  reduce using rule 70 (common_while)


State 266

  119 nactuals: nactuals ',' expr .

    $default  reduce using rule 119 (nactuals)


State 267

  114 expr8: newarray '(' expr ',' type . ')'

    ')'  shift, and go to state 273


State 268

  115 expr8: newarray '(' expr ',' special . ')'

    ')'  shift, and go to state 274


State 269

  116 special: identifier .

    $default  reduce using rule 116 (special)


State 270

  121 actuals: actuals ',' expr .

    $default  reduce using rule 121 (actuals)


State 271

   74 common_for: for '(' ';' expr ';' . expr ')'
   76           | for '(' ';' expr ';' . ')'

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    ')'              shift, and go to state 275
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 276
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 272

   73 common_for: for '(' expr ';' expr . ';' expr ')'
   75           | for '(' expr ';' expr . ';' ')'

    ';'  shift, and go to state 277


State 273

  114 expr8: newarray '(' expr ',' type ')' .

    $default  reduce using rule 114 (expr8)


State 274

  115 expr8: newarray '(' expr ',' special ')' .

    $default  reduce using rule 115 (expr8)


State 275

   76 common_for: for '(' ';' expr ';' ')' .

    $default  reduce using rule 76 (common_for)


State 276

   74 common_for: for '(' ';' expr ';' expr . ')'

    ')'  shift, and go to state 278


State 277

   73 common_for: for '(' expr ';' expr ';' . expr ')'
   75           | for '(' expr ';' expr ';' . ')'

    "null"           shift, and go to state 96
    "this"           shift, and go to state 97
    "New"            shift, and go to state 103
    "NewArray"       shift, and go to state 104
    "ReadInteger"    shift, and go to state 106
    "ReadLine"       shift, and go to state 107
    T_DBLLITERAL     shift, and go to state 108
    T_INTLITERAL     shift, and go to state 109
    T_BOOLLITERAL    shift, and go to state 110
    T_IDENTIFIER     shift, and go to state 31
    T_STRINGLITERAL  shift, and go to state 111
    '('              shift, and go to state 113
    ')'              shift, and go to state 279
    '-'              shift, and go to state 115
    '!'              shift, and go to state 116

    call        go to state 117
    Lvalue      go to state 134
    expr        go to state 280
    expr1       go to state 136
    expr2       go to state 137
    expr3       go to state 138
    expr4       go to state 139
    expr5       go to state 140
    expr6       go to state 141
    expr7       go to state 142
    expr8       go to state 143
    constant    go to state 144
    identifier  go to state 145
    this        go to state 147
    readint     go to state 148
    new         go to state 149
    newarray    go to state 150
    intlit      go to state 151
    dbllit      go to state 152
    boollit     go to state 153
    stringlit   go to state 154
    null        go to state 155
    readline    go to state 156
    scminus     go to state 162
    scneq       go to state 163


State 278

   74 common_for: for '(' ';' expr ';' expr ')' .

    $default  reduce using rule 74 (common_for)


State 279

   75 common_for: for '(' expr ';' expr ';' ')' .

    $default  reduce using rule 75 (common_for)


State 280

   73 common_for: for '(' expr ';' expr ';' expr . ')'

    ')'  shift, and go to state 281


State 281

   73 common_for: for '(' expr ';' expr ';' expr ')' .

    $default  reduce using rule 73 (common_for)
