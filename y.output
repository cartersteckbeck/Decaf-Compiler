Nonterminals useless in grammar

   sccolon
   sccomma
   scperiod
   sclbracket
   scrbracket
   sclparen
   scrparen
   sclcurly
   scrcurly
   scbackslash


Terminals unused in grammar

   "class"
   "interface"
   "extends"
   "implements"
   "for"
   "while"
   "if"
   "else"
   "return"
   "Print"
   '\\'


Rules useless in grammar

  114 sccolon: ';'

  115 sccomma: ','

  116 scperiod: '.'

  117 sclbracket: '['

  118 scrbracket: ']'

  119 sclparen: '('

  120 scrparen: ')'

  121 sclcurly: '{'

  122 scrcurly: '}'

  123 scbackslash: '\\'


State 66 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 73 conflicts: 2 shift/reduce
State 77 conflicts: 1 shift/reduce
State 132 conflicts: 15 reduce/reduce
State 133 conflicts: 15 reduce/reduce
State 135 conflicts: 1 shift/reduce, 1 reduce/reduce
State 138 conflicts: 1 shift/reduce
State 139 conflicts: 4 reduce/reduce
State 140 conflicts: 2 shift/reduce, 1 reduce/reduce
State 141 conflicts: 6 reduce/reduce
State 142 conflicts: 6 reduce/reduce
State 143 conflicts: 1 shift/reduce, 10 reduce/reduce
State 144 conflicts: 1 shift/reduce, 10 reduce/reduce
State 145 conflicts: 1 shift/reduce, 10 reduce/reduce
State 146 conflicts: 1 shift/reduce, 10 reduce/reduce
State 147 conflicts: 12 reduce/reduce
State 148 conflicts: 12 reduce/reduce
State 149 conflicts: 15 reduce/reduce
State 150 conflicts: 15 reduce/reduce
State 151 conflicts: 15 reduce/reduce
State 152 conflicts: 2 shift/reduce, 15 reduce/reduce
State 153 conflicts: 2 shift/reduce


Grammar

    0 $accept: pgm $end

    1 pgm: program

    2 program: decl

    3 decl: %empty
    4     | decl varDecl
    5     | decl funcDecl

    6 varDecl: variable ';'

    7 variable: type identifier

    8 type: usertype
    9     | primtype
   10     | arraytype

   11 usertype: typeidentifier

   12 primtype: string
   13         | int
   14         | double
   15         | bool

   16 arraytype: usertype array
   17          | primtype array

   18 funcDecl: type identifier '(' formals ')' stmtblock
   19         | void identifier '(' formals ')' stmtblock

   20 formals: %empty
   21        | formals variable
   22        | formals variable ','

   23 varDeclStar: %empty
   24            | varDeclStar varDecl

   25 stmtStar: %empty
   26         | stmtStar stmt

   27 stmtblock: '{' varDeclStar stmtStar '}'

   28 stmt: break ';'
   29     | expr ';'
   30     | ';'

   31 Lval: identifier
   32     | expr1 '.' identifier
   33     | expr1 '[' expr1 ']'

   34 expr: expr1
   35     | Lval sceq expr1

   36 expr1: expr2
   37      | expr2 or expr1

   38 expr2: expr3
   39      | expr2 and expr3

   40 expr3: expr4
   41      | expr3 eq expr4
   42      | expr3 neq expr4

   43 expr4: expr5
   44      | expr4 sclt expr5
   45      | expr4 scgt expr5
   46      | expr4 le expr5
   47      | expr4 ge expr5

   48 expr5: expr6
   49      | expr5 scplus expr6
   50      | expr5 scminus expr6

   51 expr6: expr7
   52      | expr6 sctimes expr7
   53      | expr6 scdiv expr7
   54      | expr6 scmod expr7

   55 expr7: expr8
   56      | scneq expr7
   57      | scminus expr7

   58 expr8: expr9
   59      | expr8 '[' expr8 ']'
   60      | expr8 '.' expr8

   61 expr9: identifier
   62      | constant
   63      | this
   64      | call
   65      | '(' expr ')'
   66      | readint '(' ')'
   67      | readline '(' ')'
   68      | new '(' identifier ')'
   69      | newarray '(' expr ',' type ')'

   70 call: identifier '(' actuals ')'
   71     | expr '.' identifier '(' actuals ')'

   72 actuals: %empty
   73        | actuals expr
   74        | actuals expr ','

   75 constant: intlit
   76         | dbllit
   77         | boollit
   78         | stringlit
   79         | null

   80 typeidentifier: T_TYPEIDENTIFIER

   81 identifier: T_IDENTIFIER

   82 string: "string"

   83 int: "int"

   84 double: "double"

   85 bool: "bool"

   86 array: "[]"

   87 void: "void"

   88 break: "break"

   89 this: "this"

   90 le: "<="

   91 ge: ">="

   92 eq: "=="

   93 neq: "!="

   94 and: "&&"

   95 or: "||"

   96 readint: "ReadInteger"

   97 new: "New"

   98 newarray: "NewArray"

   99 intlit: T_INTLITERAL

  100 dbllit: T_DBLLITERAL

  101 boollit: T_BOOLLITERAL

  102 stringlit: T_STRINGLITERAL

  103 null: "null"

  104 readline: "ReadLine"

  105 scplus: '+'

  106 scminus: '-'

  107 sctimes: '*'

  108 scdiv: '/'

  109 scmod: '%'

  110 sclt: '<'

  111 scgt: '>'

  112 sceq: '='

  113 scneq: '!'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 113
'%' (37) 109
'(' (40) 18 19 65 66 67 68 69 70 71
')' (41) 18 19 65 66 67 68 69 70 71
'*' (42) 107
'+' (43) 105
',' (44) 22 69 74
'-' (45) 106
'.' (46) 32 60 71
'/' (47) 108
';' (59) 6 28 29 30
'<' (60) 110
'=' (61) 112
'>' (62) 111
'[' (91) 33 59
'\\' (92)
']' (93) 33 59
'{' (123) 27
'}' (125) 27
error (256)
"void" (260) 87
"int" (261) 83
"double" (262) 84
"bool" (263) 85
"string" (264) 82
"class" (265)
"interface" (266)
"null" (267) 103
"this" (268) 89
"extends" (269)
"implements" (270)
"for" (271)
"while" (272)
"if" (273)
"else" (274)
"return" (275)
"break" (276) 88
"New" (277) 97
"NewArray" (278) 98
"Print" (279)
"ReadInteger" (280) 96
"ReadLine" (281) 104
"<=" (282) 90
">=" (283) 91
"==" (284) 92
"!=" (285) 93
"&&" (286) 94
"||" (287) 95
"[]" (288) 86
T_DBLLITERAL (289) 100
T_INTLITERAL (290) 99
T_BOOLLITERAL (291) 101
T_IDENTIFIER (292) 81
T_TYPEIDENTIFIER (293) 80
T_STRINGLITERAL (294) 102


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
pgm (58)
    on left: 1, on right: 0
program (59)
    on left: 2, on right: 1
decl (60)
    on left: 3 4 5, on right: 2 4 5
varDecl (61)
    on left: 6, on right: 4 24
variable (62)
    on left: 7, on right: 6 21 22
type (63)
    on left: 8 9 10, on right: 7 18 69
usertype (64)
    on left: 11, on right: 8 16
primtype (65)
    on left: 12 13 14 15, on right: 9 17
arraytype (66)
    on left: 16 17, on right: 10
funcDecl (67)
    on left: 18 19, on right: 5
formals (68)
    on left: 20 21 22, on right: 18 19 21 22
varDeclStar (69)
    on left: 23 24, on right: 24 27
stmtStar (70)
    on left: 25 26, on right: 26 27
stmtblock (71)
    on left: 27, on right: 18 19
stmt (72)
    on left: 28 29 30, on right: 26
Lval (73)
    on left: 31 32 33, on right: 35
expr (74)
    on left: 34 35, on right: 29 65 69 71 73 74
expr1 (75)
    on left: 36 37, on right: 32 33 34 35 37
expr2 (76)
    on left: 38 39, on right: 36 37 39
expr3 (77)
    on left: 40 41 42, on right: 38 39 41 42
expr4 (78)
    on left: 43 44 45 46 47, on right: 40 41 42 44 45 46 47
expr5 (79)
    on left: 48 49 50, on right: 43 44 45 46 47 49 50
expr6 (80)
    on left: 51 52 53 54, on right: 48 49 50 52 53 54
expr7 (81)
    on left: 55 56 57, on right: 51 52 53 54 56 57
expr8 (82)
    on left: 58 59 60, on right: 55 59 60
expr9 (83)
    on left: 61 62 63 64 65 66 67 68 69, on right: 58
call (84)
    on left: 70 71, on right: 64
actuals (85)
    on left: 72 73 74, on right: 70 71 73 74
constant (86)
    on left: 75 76 77 78 79, on right: 62
typeidentifier (87)
    on left: 80, on right: 11
identifier (88)
    on left: 81, on right: 7 18 19 31 32 61 68 70 71
string (89)
    on left: 82, on right: 12
int (90)
    on left: 83, on right: 13
double (91)
    on left: 84, on right: 14
bool (92)
    on left: 85, on right: 15
array (93)
    on left: 86, on right: 16 17
void (94)
    on left: 87, on right: 19
break (95)
    on left: 88, on right: 28
this (96)
    on left: 89, on right: 63
le (97)
    on left: 90, on right: 46
ge (98)
    on left: 91, on right: 47
eq (99)
    on left: 92, on right: 41
neq (100)
    on left: 93, on right: 42
and (101)
    on left: 94, on right: 39
or (102)
    on left: 95, on right: 37
readint (103)
    on left: 96, on right: 66
new (104)
    on left: 97, on right: 68
newarray (105)
    on left: 98, on right: 69
intlit (106)
    on left: 99, on right: 75
dbllit (107)
    on left: 100, on right: 76
boollit (108)
    on left: 101, on right: 77
stringlit (109)
    on left: 102, on right: 78
null (110)
    on left: 103, on right: 79
readline (111)
    on left: 104, on right: 67
scplus (112)
    on left: 105, on right: 49
scminus (113)
    on left: 106, on right: 50 57
sctimes (114)
    on left: 107, on right: 52
scdiv (115)
    on left: 108, on right: 53
scmod (116)
    on left: 109, on right: 54
sclt (117)
    on left: 110, on right: 44
scgt (118)
    on left: 111, on right: 45
sceq (119)
    on left: 112, on right: 35
scneq (120)
    on left: 113, on right: 56


State 0

    0 $accept: . pgm $end

    $default  reduce using rule 3 (decl)

    pgm      go to state 1
    program  go to state 2
    decl     go to state 3


State 1

    0 $accept: pgm . $end

    $end  shift, and go to state 4


State 2

    1 pgm: program .

    $default  reduce using rule 1 (pgm)


State 3

    2 program: decl .
    4 decl: decl . varDecl
    5     | decl . funcDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10

    $default  reduce using rule 2 (program)

    varDecl         go to state 11
    variable        go to state 12
    type            go to state 13
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    funcDecl        go to state 17
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22
    void            go to state 23


State 4

    0 $accept: pgm $end .

    $default  accept


State 5

   87 void: "void" .

    $default  reduce using rule 87 (void)


State 6

   83 int: "int" .

    $default  reduce using rule 83 (int)


State 7

   84 double: "double" .

    $default  reduce using rule 84 (double)


State 8

   85 bool: "bool" .

    $default  reduce using rule 85 (bool)


State 9

   82 string: "string" .

    $default  reduce using rule 82 (string)


State 10

   80 typeidentifier: T_TYPEIDENTIFIER .

    $default  reduce using rule 80 (typeidentifier)


State 11

    4 decl: decl varDecl .

    $default  reduce using rule 4 (decl)


State 12

    6 varDecl: variable . ';'

    ';'  shift, and go to state 24


State 13

    7 variable: type . identifier
   18 funcDecl: type . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 26


State 14

    8 type: usertype .
   16 arraytype: usertype . array

    "[]"  shift, and go to state 27

    $default  reduce using rule 8 (type)

    array  go to state 28


State 15

    9 type: primtype .
   17 arraytype: primtype . array

    "[]"  shift, and go to state 27

    $default  reduce using rule 9 (type)

    array  go to state 29


State 16

   10 type: arraytype .

    $default  reduce using rule 10 (type)


State 17

    5 decl: decl funcDecl .

    $default  reduce using rule 5 (decl)


State 18

   11 usertype: typeidentifier .

    $default  reduce using rule 11 (usertype)


State 19

   12 primtype: string .

    $default  reduce using rule 12 (primtype)


State 20

   13 primtype: int .

    $default  reduce using rule 13 (primtype)


State 21

   14 primtype: double .

    $default  reduce using rule 14 (primtype)


State 22

   15 primtype: bool .

    $default  reduce using rule 15 (primtype)


State 23

   19 funcDecl: void . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 30


State 24

    6 varDecl: variable ';' .

    $default  reduce using rule 6 (varDecl)


State 25

   81 identifier: T_IDENTIFIER .

    $default  reduce using rule 81 (identifier)


State 26

    7 variable: type identifier .
   18 funcDecl: type identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 31

    $default  reduce using rule 7 (variable)


State 27

   86 array: "[]" .

    $default  reduce using rule 86 (array)


State 28

   16 arraytype: usertype array .

    $default  reduce using rule 16 (arraytype)


State 29

   17 arraytype: primtype array .

    $default  reduce using rule 17 (arraytype)


State 30

   19 funcDecl: void identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 32


State 31

   18 funcDecl: type identifier '(' . formals ')' stmtblock

    $default  reduce using rule 20 (formals)

    formals  go to state 33


State 32

   19 funcDecl: void identifier '(' . formals ')' stmtblock

    $default  reduce using rule 20 (formals)

    formals  go to state 34


State 33

   18 funcDecl: type identifier '(' formals . ')' stmtblock
   21 formals: formals . variable
   22        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10
    ')'               shift, and go to state 35

    variable        go to state 36
    type            go to state 37
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22


State 34

   19 funcDecl: void identifier '(' formals . ')' stmtblock
   21 formals: formals . variable
   22        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10
    ')'               shift, and go to state 38

    variable        go to state 36
    type            go to state 37
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22


State 35

   18 funcDecl: type identifier '(' formals ')' . stmtblock

    '{'  shift, and go to state 39

    stmtblock  go to state 40


State 36

   21 formals: formals variable .
   22        | formals variable . ','

    ','  shift, and go to state 41

    $default  reduce using rule 21 (formals)


State 37

    7 variable: type . identifier

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 42


State 38

   19 funcDecl: void identifier '(' formals ')' . stmtblock

    '{'  shift, and go to state 39

    stmtblock  go to state 43


State 39

   27 stmtblock: '{' . varDeclStar stmtStar '}'

    $default  reduce using rule 23 (varDeclStar)

    varDeclStar  go to state 44


State 40

   18 funcDecl: type identifier '(' formals ')' stmtblock .

    $default  reduce using rule 18 (funcDecl)


State 41

   22 formals: formals variable ',' .

    $default  reduce using rule 22 (formals)


State 42

    7 variable: type identifier .

    $default  reduce using rule 7 (variable)


State 43

   19 funcDecl: void identifier '(' formals ')' stmtblock .

    $default  reduce using rule 19 (funcDecl)


State 44

   24 varDeclStar: varDeclStar . varDecl
   27 stmtblock: '{' varDeclStar . stmtStar '}'

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10

    $default  reduce using rule 25 (stmtStar)

    varDecl         go to state 45
    variable        go to state 12
    type            go to state 37
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    stmtStar        go to state 46
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22


State 45

   24 varDeclStar: varDeclStar varDecl .

    $default  reduce using rule 24 (varDeclStar)


State 46

   26 stmtStar: stmtStar . stmt
   27 stmtblock: '{' varDeclStar stmtStar . '}'

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "break"          shift, and go to state 49
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    ';'              shift, and go to state 58
    '('              shift, and go to state 59
    '}'              shift, and go to state 60
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    stmt        go to state 63
    Lval        go to state 64
    expr        go to state 65
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    break       go to state 78
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 47

  103 null: "null" .

    $default  reduce using rule 103 (null)


State 48

   89 this: "this" .

    $default  reduce using rule 89 (this)


State 49

   88 break: "break" .

    $default  reduce using rule 88 (break)


State 50

   97 new: "New" .

    $default  reduce using rule 97 (new)


State 51

   98 newarray: "NewArray" .

    $default  reduce using rule 98 (newarray)


State 52

   96 readint: "ReadInteger" .

    $default  reduce using rule 96 (readint)


State 53

  104 readline: "ReadLine" .

    $default  reduce using rule 104 (readline)


State 54

  100 dbllit: T_DBLLITERAL .

    $default  reduce using rule 100 (dbllit)


State 55

   99 intlit: T_INTLITERAL .

    $default  reduce using rule 99 (intlit)


State 56

  101 boollit: T_BOOLLITERAL .

    $default  reduce using rule 101 (boollit)


State 57

  102 stringlit: T_STRINGLITERAL .

    $default  reduce using rule 102 (stringlit)


State 58

   30 stmt: ';' .

    $default  reduce using rule 30 (stmt)


State 59

   65 expr9: '(' . expr ')'

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 91
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 60

   27 stmtblock: '{' varDeclStar stmtStar '}' .

    $default  reduce using rule 27 (stmtblock)


State 61

  106 scminus: '-' .

    $default  reduce using rule 106 (scminus)


State 62

  113 scneq: '!' .

    $default  reduce using rule 113 (scneq)


State 63

   26 stmtStar: stmtStar stmt .

    $default  reduce using rule 26 (stmtStar)


State 64

   35 expr: Lval . sceq expr1

    '='  shift, and go to state 92

    sceq  go to state 93


State 65

   29 stmt: expr . ';'
   71 call: expr . '.' identifier '(' actuals ')'

    ';'  shift, and go to state 94
    '.'  shift, and go to state 95


State 66

   32 Lval: expr1 . '.' identifier
   33     | expr1 . '[' expr1 ']'
   34 expr: expr1 .

    '.'  shift, and go to state 96
    '['  shift, and go to state 97

    '.'       [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


State 67

   36 expr1: expr2 .
   37      | expr2 . or expr1
   39 expr2: expr2 . and expr3

    "&&"  shift, and go to state 98
    "||"  shift, and go to state 99

    $default  reduce using rule 36 (expr1)

    and  go to state 100
    or   go to state 101


State 68

   38 expr2: expr3 .
   41 expr3: expr3 . eq expr4
   42      | expr3 . neq expr4

    "=="  shift, and go to state 102
    "!="  shift, and go to state 103

    $default  reduce using rule 38 (expr2)

    eq   go to state 104
    neq  go to state 105


State 69

   40 expr3: expr4 .
   44 expr4: expr4 . sclt expr5
   45      | expr4 . scgt expr5
   46      | expr4 . le expr5
   47      | expr4 . ge expr5

    "<="  shift, and go to state 106
    ">="  shift, and go to state 107
    '<'   shift, and go to state 108
    '>'   shift, and go to state 109

    $default  reduce using rule 40 (expr3)

    le    go to state 110
    ge    go to state 111
    sclt  go to state 112
    scgt  go to state 113


State 70

   43 expr4: expr5 .
   49 expr5: expr5 . scplus expr6
   50      | expr5 . scminus expr6

    '+'  shift, and go to state 114
    '-'  shift, and go to state 61

    '-'       [reduce using rule 43 (expr4)]
    $default  reduce using rule 43 (expr4)

    scplus   go to state 115
    scminus  go to state 116


State 71

   48 expr5: expr6 .
   52 expr6: expr6 . sctimes expr7
   53      | expr6 . scdiv expr7
   54      | expr6 . scmod expr7

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 48 (expr5)

    sctimes  go to state 120
    scdiv    go to state 121
    scmod    go to state 122


State 72

   51 expr6: expr7 .

    $default  reduce using rule 51 (expr6)


State 73

   55 expr7: expr8 .
   59 expr8: expr8 . '[' expr8 ']'
   60      | expr8 . '.' expr8

    '.'  shift, and go to state 123
    '['  shift, and go to state 124

    '.'       [reduce using rule 55 (expr7)]
    '['       [reduce using rule 55 (expr7)]
    $default  reduce using rule 55 (expr7)


State 74

   58 expr8: expr9 .

    $default  reduce using rule 58 (expr8)


State 75

   64 expr9: call .

    $default  reduce using rule 64 (expr9)


State 76

   62 expr9: constant .

    $default  reduce using rule 62 (expr9)


State 77

   31 Lval: identifier .
   61 expr9: identifier .
   70 call: identifier . '(' actuals ')'

    '('  shift, and go to state 125

    '('       [reduce using rule 61 (expr9)]
    '='       reduce using rule 31 (Lval)
    $default  reduce using rule 61 (expr9)


State 78

   28 stmt: break . ';'

    ';'  shift, and go to state 126


State 79

   63 expr9: this .

    $default  reduce using rule 63 (expr9)


State 80

   66 expr9: readint . '(' ')'

    '('  shift, and go to state 127


State 81

   68 expr9: new . '(' identifier ')'

    '('  shift, and go to state 128


State 82

   69 expr9: newarray . '(' expr ',' type ')'

    '('  shift, and go to state 129


State 83

   75 constant: intlit .

    $default  reduce using rule 75 (constant)


State 84

   76 constant: dbllit .

    $default  reduce using rule 76 (constant)


State 85

   77 constant: boollit .

    $default  reduce using rule 77 (constant)


State 86

   78 constant: stringlit .

    $default  reduce using rule 78 (constant)


State 87

   79 constant: null .

    $default  reduce using rule 79 (constant)


State 88

   67 expr9: readline . '(' ')'

    '('  shift, and go to state 130


State 89

   57 expr7: scminus . expr7

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 132
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 90

   56 expr7: scneq . expr7

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 133
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 91

   65 expr9: '(' expr . ')'
   71 call: expr . '.' identifier '(' actuals ')'

    ')'  shift, and go to state 134
    '.'  shift, and go to state 95


State 92

  112 sceq: '=' .

    $default  reduce using rule 112 (sceq)


State 93

   35 expr: Lval sceq . expr1

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 135
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 94

   29 stmt: expr ';' .

    $default  reduce using rule 29 (stmt)


State 95

   71 call: expr '.' . identifier '(' actuals ')'

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 136


State 96

   32 Lval: expr1 '.' . identifier

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 137


State 97

   33 Lval: expr1 '[' . expr1 ']'

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 138
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 98

   94 and: "&&" .

    $default  reduce using rule 94 (and)


State 99

   95 or: "||" .

    $default  reduce using rule 95 (or)


State 100

   39 expr2: expr2 and . expr3

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 139
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 101

   37 expr1: expr2 or . expr1

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 140
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 102

   92 eq: "==" .

    $default  reduce using rule 92 (eq)


State 103

   93 neq: "!=" .

    $default  reduce using rule 93 (neq)


State 104

   41 expr3: expr3 eq . expr4

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 141
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 105

   42 expr3: expr3 neq . expr4

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 142
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 106

   90 le: "<=" .

    $default  reduce using rule 90 (le)


State 107

   91 ge: ">=" .

    $default  reduce using rule 91 (ge)


State 108

  110 sclt: '<' .

    $default  reduce using rule 110 (sclt)


State 109

  111 scgt: '>' .

    $default  reduce using rule 111 (scgt)


State 110

   46 expr4: expr4 le . expr5

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 143
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 111

   47 expr4: expr4 ge . expr5

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 144
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 112

   44 expr4: expr4 sclt . expr5

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 145
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 113

   45 expr4: expr4 scgt . expr5

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 146
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 114

  105 scplus: '+' .

    $default  reduce using rule 105 (scplus)


State 115

   49 expr5: expr5 scplus . expr6

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 147
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 116

   50 expr5: expr5 scminus . expr6

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 148
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 117

  107 sctimes: '*' .

    $default  reduce using rule 107 (sctimes)


State 118

  108 scdiv: '/' .

    $default  reduce using rule 108 (scdiv)


State 119

  109 scmod: '%' .

    $default  reduce using rule 109 (scmod)


State 120

   52 expr6: expr6 sctimes . expr7

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 149
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 121

   53 expr6: expr6 scdiv . expr7

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 150
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 122

   54 expr6: expr6 scmod . expr7

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 151
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 123

   60 expr8: expr8 '.' . expr8

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 152
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 124

   59 expr8: expr8 '[' . expr8 ']'

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 131
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 153
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 125

   70 call: identifier '(' . actuals ')'

    $default  reduce using rule 72 (actuals)

    actuals  go to state 154


State 126

   28 stmt: break ';' .

    $default  reduce using rule 28 (stmt)


State 127

   66 expr9: readint '(' . ')'

    ')'  shift, and go to state 155


State 128

   68 expr9: new '(' . identifier ')'

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 156


State 129

   69 expr9: newarray '(' . expr ',' type ')'

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 157
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 130

   67 expr9: readline '(' . ')'

    ')'  shift, and go to state 158


State 131

   71 call: expr . '.' identifier '(' actuals ')'

    '.'  shift, and go to state 95


State 132

   51 expr6: expr7 .
   57 expr7: scminus expr7 .

    "<="      reduce using rule 51 (expr6)
    "<="      [reduce using rule 57 (expr7)]
    ">="      reduce using rule 51 (expr6)
    ">="      [reduce using rule 57 (expr7)]
    "=="      reduce using rule 51 (expr6)
    "=="      [reduce using rule 57 (expr7)]
    "!="      reduce using rule 51 (expr6)
    "!="      [reduce using rule 57 (expr7)]
    "&&"      reduce using rule 51 (expr6)
    "&&"      [reduce using rule 57 (expr7)]
    "||"      reduce using rule 51 (expr6)
    "||"      [reduce using rule 57 (expr7)]
    '.'       reduce using rule 51 (expr6)
    '.'       [reduce using rule 57 (expr7)]
    '['       reduce using rule 51 (expr6)
    '['       [reduce using rule 57 (expr7)]
    '+'       reduce using rule 51 (expr6)
    '+'       [reduce using rule 57 (expr7)]
    '-'       reduce using rule 51 (expr6)
    '-'       [reduce using rule 57 (expr7)]
    '*'       reduce using rule 51 (expr6)
    '*'       [reduce using rule 57 (expr7)]
    '/'       reduce using rule 51 (expr6)
    '/'       [reduce using rule 57 (expr7)]
    '%'       reduce using rule 51 (expr6)
    '%'       [reduce using rule 57 (expr7)]
    '<'       reduce using rule 51 (expr6)
    '<'       [reduce using rule 57 (expr7)]
    '>'       reduce using rule 51 (expr6)
    '>'       [reduce using rule 57 (expr7)]
    $default  reduce using rule 57 (expr7)


State 133

   51 expr6: expr7 .
   56 expr7: scneq expr7 .

    "<="      reduce using rule 51 (expr6)
    "<="      [reduce using rule 56 (expr7)]
    ">="      reduce using rule 51 (expr6)
    ">="      [reduce using rule 56 (expr7)]
    "=="      reduce using rule 51 (expr6)
    "=="      [reduce using rule 56 (expr7)]
    "!="      reduce using rule 51 (expr6)
    "!="      [reduce using rule 56 (expr7)]
    "&&"      reduce using rule 51 (expr6)
    "&&"      [reduce using rule 56 (expr7)]
    "||"      reduce using rule 51 (expr6)
    "||"      [reduce using rule 56 (expr7)]
    '.'       reduce using rule 51 (expr6)
    '.'       [reduce using rule 56 (expr7)]
    '['       reduce using rule 51 (expr6)
    '['       [reduce using rule 56 (expr7)]
    '+'       reduce using rule 51 (expr6)
    '+'       [reduce using rule 56 (expr7)]
    '-'       reduce using rule 51 (expr6)
    '-'       [reduce using rule 56 (expr7)]
    '*'       reduce using rule 51 (expr6)
    '*'       [reduce using rule 56 (expr7)]
    '/'       reduce using rule 51 (expr6)
    '/'       [reduce using rule 56 (expr7)]
    '%'       reduce using rule 51 (expr6)
    '%'       [reduce using rule 56 (expr7)]
    '<'       reduce using rule 51 (expr6)
    '<'       [reduce using rule 56 (expr7)]
    '>'       reduce using rule 51 (expr6)
    '>'       [reduce using rule 56 (expr7)]
    $default  reduce using rule 56 (expr7)


State 134

   65 expr9: '(' expr ')' .

    $default  reduce using rule 65 (expr9)


State 135

   32 Lval: expr1 . '.' identifier
   33     | expr1 . '[' expr1 ']'
   34 expr: expr1 .
   35     | Lval sceq expr1 .

    '.'  shift, and go to state 96
    '['  shift, and go to state 97

    '.'       [reduce using rule 34 (expr)]
    '.'       [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


State 136

   71 call: expr '.' identifier . '(' actuals ')'

    '('  shift, and go to state 159


State 137

   32 Lval: expr1 '.' identifier .

    $default  reduce using rule 32 (Lval)


State 138

   32 Lval: expr1 . '.' identifier
   33     | expr1 . '[' expr1 ']'
   33     | expr1 '[' expr1 . ']'
   34 expr: expr1 .

    '.'  shift, and go to state 96
    '['  shift, and go to state 97
    ']'  shift, and go to state 160

    '.'  [reduce using rule 34 (expr)]


State 139

   38 expr2: expr3 .
   39      | expr2 and expr3 .
   41 expr3: expr3 . eq expr4
   42      | expr3 . neq expr4

    "=="  shift, and go to state 102
    "!="  shift, and go to state 103

    "&&"      reduce using rule 38 (expr2)
    "&&"      [reduce using rule 39 (expr2)]
    "||"      reduce using rule 38 (expr2)
    "||"      [reduce using rule 39 (expr2)]
    '.'       reduce using rule 38 (expr2)
    '.'       [reduce using rule 39 (expr2)]
    '['       reduce using rule 38 (expr2)
    '['       [reduce using rule 39 (expr2)]
    $default  reduce using rule 39 (expr2)

    eq   go to state 104
    neq  go to state 105


State 140

   32 Lval: expr1 . '.' identifier
   33     | expr1 . '[' expr1 ']'
   34 expr: expr1 .
   37 expr1: expr2 or expr1 .

    '.'  shift, and go to state 96
    '['  shift, and go to state 97

    '.'       [reduce using rule 34 (expr)]
    '.'       [reduce using rule 37 (expr1)]
    '['       [reduce using rule 37 (expr1)]
    $default  reduce using rule 37 (expr1)


State 141

   40 expr3: expr4 .
   41      | expr3 eq expr4 .
   44 expr4: expr4 . sclt expr5
   45      | expr4 . scgt expr5
   46      | expr4 . le expr5
   47      | expr4 . ge expr5

    "<="  shift, and go to state 106
    ">="  shift, and go to state 107
    '<'   shift, and go to state 108
    '>'   shift, and go to state 109

    "=="      reduce using rule 40 (expr3)
    "=="      [reduce using rule 41 (expr3)]
    "!="      reduce using rule 40 (expr3)
    "!="      [reduce using rule 41 (expr3)]
    "&&"      reduce using rule 40 (expr3)
    "&&"      [reduce using rule 41 (expr3)]
    "||"      reduce using rule 40 (expr3)
    "||"      [reduce using rule 41 (expr3)]
    '.'       reduce using rule 40 (expr3)
    '.'       [reduce using rule 41 (expr3)]
    '['       reduce using rule 40 (expr3)
    '['       [reduce using rule 41 (expr3)]
    $default  reduce using rule 41 (expr3)

    le    go to state 110
    ge    go to state 111
    sclt  go to state 112
    scgt  go to state 113


State 142

   40 expr3: expr4 .
   42      | expr3 neq expr4 .
   44 expr4: expr4 . sclt expr5
   45      | expr4 . scgt expr5
   46      | expr4 . le expr5
   47      | expr4 . ge expr5

    "<="  shift, and go to state 106
    ">="  shift, and go to state 107
    '<'   shift, and go to state 108
    '>'   shift, and go to state 109

    "=="      reduce using rule 40 (expr3)
    "=="      [reduce using rule 42 (expr3)]
    "!="      reduce using rule 40 (expr3)
    "!="      [reduce using rule 42 (expr3)]
    "&&"      reduce using rule 40 (expr3)
    "&&"      [reduce using rule 42 (expr3)]
    "||"      reduce using rule 40 (expr3)
    "||"      [reduce using rule 42 (expr3)]
    '.'       reduce using rule 40 (expr3)
    '.'       [reduce using rule 42 (expr3)]
    '['       reduce using rule 40 (expr3)
    '['       [reduce using rule 42 (expr3)]
    $default  reduce using rule 42 (expr3)

    le    go to state 110
    ge    go to state 111
    sclt  go to state 112
    scgt  go to state 113


State 143

   43 expr4: expr5 .
   46      | expr4 le expr5 .
   49 expr5: expr5 . scplus expr6
   50      | expr5 . scminus expr6

    '+'  shift, and go to state 114
    '-'  shift, and go to state 61

    "<="      reduce using rule 43 (expr4)
    "<="      [reduce using rule 46 (expr4)]
    ">="      reduce using rule 43 (expr4)
    ">="      [reduce using rule 46 (expr4)]
    "=="      reduce using rule 43 (expr4)
    "=="      [reduce using rule 46 (expr4)]
    "!="      reduce using rule 43 (expr4)
    "!="      [reduce using rule 46 (expr4)]
    "&&"      reduce using rule 43 (expr4)
    "&&"      [reduce using rule 46 (expr4)]
    "||"      reduce using rule 43 (expr4)
    "||"      [reduce using rule 46 (expr4)]
    '.'       reduce using rule 43 (expr4)
    '.'       [reduce using rule 46 (expr4)]
    '['       reduce using rule 43 (expr4)
    '['       [reduce using rule 46 (expr4)]
    '-'       [reduce using rule 46 (expr4)]
    '<'       reduce using rule 43 (expr4)
    '<'       [reduce using rule 46 (expr4)]
    '>'       reduce using rule 43 (expr4)
    '>'       [reduce using rule 46 (expr4)]
    $default  reduce using rule 46 (expr4)

    scplus   go to state 115
    scminus  go to state 116


State 144

   43 expr4: expr5 .
   47      | expr4 ge expr5 .
   49 expr5: expr5 . scplus expr6
   50      | expr5 . scminus expr6

    '+'  shift, and go to state 114
    '-'  shift, and go to state 61

    "<="      reduce using rule 43 (expr4)
    "<="      [reduce using rule 47 (expr4)]
    ">="      reduce using rule 43 (expr4)
    ">="      [reduce using rule 47 (expr4)]
    "=="      reduce using rule 43 (expr4)
    "=="      [reduce using rule 47 (expr4)]
    "!="      reduce using rule 43 (expr4)
    "!="      [reduce using rule 47 (expr4)]
    "&&"      reduce using rule 43 (expr4)
    "&&"      [reduce using rule 47 (expr4)]
    "||"      reduce using rule 43 (expr4)
    "||"      [reduce using rule 47 (expr4)]
    '.'       reduce using rule 43 (expr4)
    '.'       [reduce using rule 47 (expr4)]
    '['       reduce using rule 43 (expr4)
    '['       [reduce using rule 47 (expr4)]
    '-'       [reduce using rule 47 (expr4)]
    '<'       reduce using rule 43 (expr4)
    '<'       [reduce using rule 47 (expr4)]
    '>'       reduce using rule 43 (expr4)
    '>'       [reduce using rule 47 (expr4)]
    $default  reduce using rule 47 (expr4)

    scplus   go to state 115
    scminus  go to state 116


State 145

   43 expr4: expr5 .
   44      | expr4 sclt expr5 .
   49 expr5: expr5 . scplus expr6
   50      | expr5 . scminus expr6

    '+'  shift, and go to state 114
    '-'  shift, and go to state 61

    "<="      reduce using rule 43 (expr4)
    "<="      [reduce using rule 44 (expr4)]
    ">="      reduce using rule 43 (expr4)
    ">="      [reduce using rule 44 (expr4)]
    "=="      reduce using rule 43 (expr4)
    "=="      [reduce using rule 44 (expr4)]
    "!="      reduce using rule 43 (expr4)
    "!="      [reduce using rule 44 (expr4)]
    "&&"      reduce using rule 43 (expr4)
    "&&"      [reduce using rule 44 (expr4)]
    "||"      reduce using rule 43 (expr4)
    "||"      [reduce using rule 44 (expr4)]
    '.'       reduce using rule 43 (expr4)
    '.'       [reduce using rule 44 (expr4)]
    '['       reduce using rule 43 (expr4)
    '['       [reduce using rule 44 (expr4)]
    '-'       [reduce using rule 44 (expr4)]
    '<'       reduce using rule 43 (expr4)
    '<'       [reduce using rule 44 (expr4)]
    '>'       reduce using rule 43 (expr4)
    '>'       [reduce using rule 44 (expr4)]
    $default  reduce using rule 44 (expr4)

    scplus   go to state 115
    scminus  go to state 116


State 146

   43 expr4: expr5 .
   45      | expr4 scgt expr5 .
   49 expr5: expr5 . scplus expr6
   50      | expr5 . scminus expr6

    '+'  shift, and go to state 114
    '-'  shift, and go to state 61

    "<="      reduce using rule 43 (expr4)
    "<="      [reduce using rule 45 (expr4)]
    ">="      reduce using rule 43 (expr4)
    ">="      [reduce using rule 45 (expr4)]
    "=="      reduce using rule 43 (expr4)
    "=="      [reduce using rule 45 (expr4)]
    "!="      reduce using rule 43 (expr4)
    "!="      [reduce using rule 45 (expr4)]
    "&&"      reduce using rule 43 (expr4)
    "&&"      [reduce using rule 45 (expr4)]
    "||"      reduce using rule 43 (expr4)
    "||"      [reduce using rule 45 (expr4)]
    '.'       reduce using rule 43 (expr4)
    '.'       [reduce using rule 45 (expr4)]
    '['       reduce using rule 43 (expr4)
    '['       [reduce using rule 45 (expr4)]
    '-'       [reduce using rule 45 (expr4)]
    '<'       reduce using rule 43 (expr4)
    '<'       [reduce using rule 45 (expr4)]
    '>'       reduce using rule 43 (expr4)
    '>'       [reduce using rule 45 (expr4)]
    $default  reduce using rule 45 (expr4)

    scplus   go to state 115
    scminus  go to state 116


State 147

   48 expr5: expr6 .
   49      | expr5 scplus expr6 .
   52 expr6: expr6 . sctimes expr7
   53      | expr6 . scdiv expr7
   54      | expr6 . scmod expr7

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    "<="      reduce using rule 48 (expr5)
    "<="      [reduce using rule 49 (expr5)]
    ">="      reduce using rule 48 (expr5)
    ">="      [reduce using rule 49 (expr5)]
    "=="      reduce using rule 48 (expr5)
    "=="      [reduce using rule 49 (expr5)]
    "!="      reduce using rule 48 (expr5)
    "!="      [reduce using rule 49 (expr5)]
    "&&"      reduce using rule 48 (expr5)
    "&&"      [reduce using rule 49 (expr5)]
    "||"      reduce using rule 48 (expr5)
    "||"      [reduce using rule 49 (expr5)]
    '.'       reduce using rule 48 (expr5)
    '.'       [reduce using rule 49 (expr5)]
    '['       reduce using rule 48 (expr5)
    '['       [reduce using rule 49 (expr5)]
    '+'       reduce using rule 48 (expr5)
    '+'       [reduce using rule 49 (expr5)]
    '-'       reduce using rule 48 (expr5)
    '-'       [reduce using rule 49 (expr5)]
    '<'       reduce using rule 48 (expr5)
    '<'       [reduce using rule 49 (expr5)]
    '>'       reduce using rule 48 (expr5)
    '>'       [reduce using rule 49 (expr5)]
    $default  reduce using rule 49 (expr5)

    sctimes  go to state 120
    scdiv    go to state 121
    scmod    go to state 122


State 148

   48 expr5: expr6 .
   50      | expr5 scminus expr6 .
   52 expr6: expr6 . sctimes expr7
   53      | expr6 . scdiv expr7
   54      | expr6 . scmod expr7

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    "<="      reduce using rule 48 (expr5)
    "<="      [reduce using rule 50 (expr5)]
    ">="      reduce using rule 48 (expr5)
    ">="      [reduce using rule 50 (expr5)]
    "=="      reduce using rule 48 (expr5)
    "=="      [reduce using rule 50 (expr5)]
    "!="      reduce using rule 48 (expr5)
    "!="      [reduce using rule 50 (expr5)]
    "&&"      reduce using rule 48 (expr5)
    "&&"      [reduce using rule 50 (expr5)]
    "||"      reduce using rule 48 (expr5)
    "||"      [reduce using rule 50 (expr5)]
    '.'       reduce using rule 48 (expr5)
    '.'       [reduce using rule 50 (expr5)]
    '['       reduce using rule 48 (expr5)
    '['       [reduce using rule 50 (expr5)]
    '+'       reduce using rule 48 (expr5)
    '+'       [reduce using rule 50 (expr5)]
    '-'       reduce using rule 48 (expr5)
    '-'       [reduce using rule 50 (expr5)]
    '<'       reduce using rule 48 (expr5)
    '<'       [reduce using rule 50 (expr5)]
    '>'       reduce using rule 48 (expr5)
    '>'       [reduce using rule 50 (expr5)]
    $default  reduce using rule 50 (expr5)

    sctimes  go to state 120
    scdiv    go to state 121
    scmod    go to state 122


State 149

   51 expr6: expr7 .
   52      | expr6 sctimes expr7 .

    "<="      reduce using rule 51 (expr6)
    "<="      [reduce using rule 52 (expr6)]
    ">="      reduce using rule 51 (expr6)
    ">="      [reduce using rule 52 (expr6)]
    "=="      reduce using rule 51 (expr6)
    "=="      [reduce using rule 52 (expr6)]
    "!="      reduce using rule 51 (expr6)
    "!="      [reduce using rule 52 (expr6)]
    "&&"      reduce using rule 51 (expr6)
    "&&"      [reduce using rule 52 (expr6)]
    "||"      reduce using rule 51 (expr6)
    "||"      [reduce using rule 52 (expr6)]
    '.'       reduce using rule 51 (expr6)
    '.'       [reduce using rule 52 (expr6)]
    '['       reduce using rule 51 (expr6)
    '['       [reduce using rule 52 (expr6)]
    '+'       reduce using rule 51 (expr6)
    '+'       [reduce using rule 52 (expr6)]
    '-'       reduce using rule 51 (expr6)
    '-'       [reduce using rule 52 (expr6)]
    '*'       reduce using rule 51 (expr6)
    '*'       [reduce using rule 52 (expr6)]
    '/'       reduce using rule 51 (expr6)
    '/'       [reduce using rule 52 (expr6)]
    '%'       reduce using rule 51 (expr6)
    '%'       [reduce using rule 52 (expr6)]
    '<'       reduce using rule 51 (expr6)
    '<'       [reduce using rule 52 (expr6)]
    '>'       reduce using rule 51 (expr6)
    '>'       [reduce using rule 52 (expr6)]
    $default  reduce using rule 52 (expr6)


State 150

   51 expr6: expr7 .
   53      | expr6 scdiv expr7 .

    "<="      reduce using rule 51 (expr6)
    "<="      [reduce using rule 53 (expr6)]
    ">="      reduce using rule 51 (expr6)
    ">="      [reduce using rule 53 (expr6)]
    "=="      reduce using rule 51 (expr6)
    "=="      [reduce using rule 53 (expr6)]
    "!="      reduce using rule 51 (expr6)
    "!="      [reduce using rule 53 (expr6)]
    "&&"      reduce using rule 51 (expr6)
    "&&"      [reduce using rule 53 (expr6)]
    "||"      reduce using rule 51 (expr6)
    "||"      [reduce using rule 53 (expr6)]
    '.'       reduce using rule 51 (expr6)
    '.'       [reduce using rule 53 (expr6)]
    '['       reduce using rule 51 (expr6)
    '['       [reduce using rule 53 (expr6)]
    '+'       reduce using rule 51 (expr6)
    '+'       [reduce using rule 53 (expr6)]
    '-'       reduce using rule 51 (expr6)
    '-'       [reduce using rule 53 (expr6)]
    '*'       reduce using rule 51 (expr6)
    '*'       [reduce using rule 53 (expr6)]
    '/'       reduce using rule 51 (expr6)
    '/'       [reduce using rule 53 (expr6)]
    '%'       reduce using rule 51 (expr6)
    '%'       [reduce using rule 53 (expr6)]
    '<'       reduce using rule 51 (expr6)
    '<'       [reduce using rule 53 (expr6)]
    '>'       reduce using rule 51 (expr6)
    '>'       [reduce using rule 53 (expr6)]
    $default  reduce using rule 53 (expr6)


State 151

   51 expr6: expr7 .
   54      | expr6 scmod expr7 .

    "<="      reduce using rule 51 (expr6)
    "<="      [reduce using rule 54 (expr6)]
    ">="      reduce using rule 51 (expr6)
    ">="      [reduce using rule 54 (expr6)]
    "=="      reduce using rule 51 (expr6)
    "=="      [reduce using rule 54 (expr6)]
    "!="      reduce using rule 51 (expr6)
    "!="      [reduce using rule 54 (expr6)]
    "&&"      reduce using rule 51 (expr6)
    "&&"      [reduce using rule 54 (expr6)]
    "||"      reduce using rule 51 (expr6)
    "||"      [reduce using rule 54 (expr6)]
    '.'       reduce using rule 51 (expr6)
    '.'       [reduce using rule 54 (expr6)]
    '['       reduce using rule 51 (expr6)
    '['       [reduce using rule 54 (expr6)]
    '+'       reduce using rule 51 (expr6)
    '+'       [reduce using rule 54 (expr6)]
    '-'       reduce using rule 51 (expr6)
    '-'       [reduce using rule 54 (expr6)]
    '*'       reduce using rule 51 (expr6)
    '*'       [reduce using rule 54 (expr6)]
    '/'       reduce using rule 51 (expr6)
    '/'       [reduce using rule 54 (expr6)]
    '%'       reduce using rule 51 (expr6)
    '%'       [reduce using rule 54 (expr6)]
    '<'       reduce using rule 51 (expr6)
    '<'       [reduce using rule 54 (expr6)]
    '>'       reduce using rule 51 (expr6)
    '>'       [reduce using rule 54 (expr6)]
    $default  reduce using rule 54 (expr6)


State 152

   55 expr7: expr8 .
   59 expr8: expr8 . '[' expr8 ']'
   60      | expr8 . '.' expr8
   60      | expr8 '.' expr8 .

    '.'  shift, and go to state 123
    '['  shift, and go to state 124

    "<="      reduce using rule 55 (expr7)
    "<="      [reduce using rule 60 (expr8)]
    ">="      reduce using rule 55 (expr7)
    ">="      [reduce using rule 60 (expr8)]
    "=="      reduce using rule 55 (expr7)
    "=="      [reduce using rule 60 (expr8)]
    "!="      reduce using rule 55 (expr7)
    "!="      [reduce using rule 60 (expr8)]
    "&&"      reduce using rule 55 (expr7)
    "&&"      [reduce using rule 60 (expr8)]
    "||"      reduce using rule 55 (expr7)
    "||"      [reduce using rule 60 (expr8)]
    '.'       [reduce using rule 55 (expr7)]
    '.'       [reduce using rule 60 (expr8)]
    '['       [reduce using rule 55 (expr7)]
    '['       [reduce using rule 60 (expr8)]
    '+'       reduce using rule 55 (expr7)
    '+'       [reduce using rule 60 (expr8)]
    '-'       reduce using rule 55 (expr7)
    '-'       [reduce using rule 60 (expr8)]
    '*'       reduce using rule 55 (expr7)
    '*'       [reduce using rule 60 (expr8)]
    '/'       reduce using rule 55 (expr7)
    '/'       [reduce using rule 60 (expr8)]
    '%'       reduce using rule 55 (expr7)
    '%'       [reduce using rule 60 (expr8)]
    '<'       reduce using rule 55 (expr7)
    '<'       [reduce using rule 60 (expr8)]
    '>'       reduce using rule 55 (expr7)
    '>'       [reduce using rule 60 (expr8)]
    $default  reduce using rule 60 (expr8)


State 153

   55 expr7: expr8 .
   59 expr8: expr8 . '[' expr8 ']'
   59      | expr8 '[' expr8 . ']'
   60      | expr8 . '.' expr8

    '.'  shift, and go to state 123
    '['  shift, and go to state 124
    ']'  shift, and go to state 161

    '.'       [reduce using rule 55 (expr7)]
    '['       [reduce using rule 55 (expr7)]
    $default  reduce using rule 55 (expr7)


State 154

   70 call: identifier '(' actuals . ')'
   73 actuals: actuals . expr
   74        | actuals . expr ','

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    ')'              shift, and go to state 162
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 163
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 155

   66 expr9: readint '(' ')' .

    $default  reduce using rule 66 (expr9)


State 156

   68 expr9: new '(' identifier . ')'

    ')'  shift, and go to state 164


State 157

   69 expr9: newarray '(' expr . ',' type ')'
   71 call: expr . '.' identifier '(' actuals ')'

    ','  shift, and go to state 165
    '.'  shift, and go to state 95


State 158

   67 expr9: readline '(' ')' .

    $default  reduce using rule 67 (expr9)


State 159

   71 call: expr '.' identifier '(' . actuals ')'

    $default  reduce using rule 72 (actuals)

    actuals  go to state 166


State 160

   33 Lval: expr1 '[' expr1 ']' .

    $default  reduce using rule 33 (Lval)


State 161

   59 expr8: expr8 '[' expr8 ']' .

    $default  reduce using rule 59 (expr8)


State 162

   70 call: identifier '(' actuals ')' .

    $default  reduce using rule 70 (call)


State 163

   71 call: expr . '.' identifier '(' actuals ')'
   73 actuals: actuals expr .
   74        | actuals expr . ','

    ','  shift, and go to state 167
    '.'  shift, and go to state 95

    $default  reduce using rule 73 (actuals)


State 164

   68 expr9: new '(' identifier ')' .

    $default  reduce using rule 68 (expr9)


State 165

   69 expr9: newarray '(' expr ',' . type ')'

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10

    type            go to state 168
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22


State 166

   71 call: expr '.' identifier '(' actuals . ')'
   73 actuals: actuals . expr
   74        | actuals . expr ','

    "null"           shift, and go to state 47
    "this"           shift, and go to state 48
    "New"            shift, and go to state 50
    "NewArray"       shift, and go to state 51
    "ReadInteger"    shift, and go to state 52
    "ReadLine"       shift, and go to state 53
    T_DBLLITERAL     shift, and go to state 54
    T_INTLITERAL     shift, and go to state 55
    T_BOOLLITERAL    shift, and go to state 56
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 57
    '('              shift, and go to state 59
    ')'              shift, and go to state 169
    '-'              shift, and go to state 61
    '!'              shift, and go to state 62

    Lval        go to state 64
    expr        go to state 163
    expr1       go to state 66
    expr2       go to state 67
    expr3       go to state 68
    expr4       go to state 69
    expr5       go to state 70
    expr6       go to state 71
    expr7       go to state 72
    expr8       go to state 73
    expr9       go to state 74
    call        go to state 75
    constant    go to state 76
    identifier  go to state 77
    this        go to state 79
    readint     go to state 80
    new         go to state 81
    newarray    go to state 82
    intlit      go to state 83
    dbllit      go to state 84
    boollit     go to state 85
    stringlit   go to state 86
    null        go to state 87
    readline    go to state 88
    scminus     go to state 89
    scneq       go to state 90


State 167

   74 actuals: actuals expr ',' .

    $default  reduce using rule 74 (actuals)


State 168

   69 expr9: newarray '(' expr ',' type . ')'

    ')'  shift, and go to state 170


State 169

   71 call: expr '.' identifier '(' actuals ')' .

    $default  reduce using rule 71 (call)


State 170

   69 expr9: newarray '(' expr ',' type ')' .

    $default  reduce using rule 69 (expr9)
