Nonterminals useless in grammar

   this
   readint
   new
   newarray
   readline
   sccolon
   sccomma
   scperiod
   sclbracket
   scrbracket
   sclparen
   scrparen
   sclcurly
   scrcurly
   scbackslash


Terminals unused in grammar

   "class"
   "interface"
   "this"
   "extends"
   "implements"
   "for"
   "while"
   "if"
   "else"
   "return"
   "New"
   "NewArray"
   "Print"
   "ReadInteger"
   "ReadLine"
   '\\'


Rules useless in grammar

   95 this: "this"

   96 readint: "ReadInteger"

   97 new: "New"

   98 newarray: "NewArray"

   99 readline: "ReadLine"

  100 sccolon: ';'

  101 sccomma: ','

  102 scperiod: '.'

  103 sclbracket: '['

  104 scrbracket: ']'

  105 sclparen: '('

  106 scrparen: ')'

  107 sclcurly: '{'

  108 scrcurly: '}'

  109 scbackslash: '\\'


Grammar

    0 $accept: pgm $end

    1 pgm: program

    2 program: decl

    3 decl: %empty
    4     | decl varDecl
    5     | decl funcDecl

    6 varDecl: variable ';'

    7 variable: type identifier

    8 type: usertype
    9     | primtype
   10     | arraytype

   11 usertype: typeidentifier

   12 primtype: string
   13         | int
   14         | double
   15         | bool

   16 arraytype: usertype array
   17          | primtype array

   18 funcDecl: type identifier '(' formals ')' stmtblock
   19         | void identifier '(' formals ')' stmtblock

   20 formals: %empty
   21        | formals variable
   22        | formals variable ','

   23 varDeclStar: %empty
   24            | varDeclStar varDecl

   25 stmtStar: %empty
   26         | stmtStar stmt

   27 stmtblock: '{' varDeclStar stmtStar '}'

   28 stmt: break ';'
   29     | expr ';'
   30     | ';'

   31 expr: expr1
   32     | expr1 sceq expr1

   33 expr1: expr2
   34      | expr1 or expr2

   35 expr2: expr3
   36      | expr2 and expr3

   37 expr3: expr4
   38      | expr3 eq expr4
   39      | expr3 neq expr4

   40 expr4: expr5
   41      | expr4 sclt expr5
   42      | expr4 scgt expr5
   43      | expr4 le expr5
   44      | expr4 ge expr5

   45 expr5: expr6
   46      | expr5 scplus expr6
   47      | expr5 scminus expr6

   48 expr6: expr7
   49      | expr6 sctimes expr7
   50      | expr6 scdiv expr7
   51      | expr6 scmod expr7

   52 expr7: expr8
   53      | scneq expr7
   54      | scminus expr7

   55 expr8: expr9
   56      | expr8 '[' expr1 ']'
   57      | expr8 '.' expr9

   58 expr9: identifier
   59      | constant
   60      | '(' expr ')'

   61 constant: intlit
   62         | dbllit
   63         | boollit
   64         | stringlit
   65         | null

   66 typeidentifier: T_TYPEIDENTIFIER

   67 identifier: T_IDENTIFIER

   68 string: "string"

   69 int: "int"

   70 double: "double"

   71 bool: "bool"

   72 array: "[]"

   73 void: "void"

   74 break: "break"

   75 le: "<="

   76 ge: ">="

   77 eq: "=="

   78 neq: "!="

   79 and: "&&"

   80 or: "||"

   81 intlit: T_INTLITERAL

   82 dbllit: T_DBLLITERAL

   83 boollit: T_BOOLLITERAL

   84 stringlit: T_STRINGLITERAL

   85 null: "null"

   86 scplus: '+'

   87 scminus: '-'

   88 sctimes: '*'

   89 scdiv: '/'

   90 scmod: '%'

   91 sclt: '<'

   92 scgt: '>'

   93 sceq: '='

   94 scneq: '!'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 94
'%' (37) 90
'(' (40) 18 19 60
')' (41) 18 19 60
'*' (42) 88
'+' (43) 86
',' (44) 22
'-' (45) 87
'.' (46) 57
'/' (47) 89
';' (59) 6 28 29 30
'<' (60) 91
'=' (61) 93
'>' (62) 92
'[' (91) 56
'\\' (92)
']' (93) 56
'{' (123) 27
'}' (125) 27
error (256)
"void" (260) 73
"int" (261) 69
"double" (262) 70
"bool" (263) 71
"string" (264) 68
"class" (265)
"interface" (266)
"null" (267) 85
"this" (268)
"extends" (269)
"implements" (270)
"for" (271)
"while" (272)
"if" (273)
"else" (274)
"return" (275)
"break" (276) 74
"New" (277)
"NewArray" (278)
"Print" (279)
"ReadInteger" (280)
"ReadLine" (281)
"<=" (282) 75
">=" (283) 76
"==" (284) 77
"!=" (285) 78
"&&" (286) 79
"||" (287) 80
"[]" (288) 72
T_DBLLITERAL (289) 82
T_INTLITERAL (290) 81
T_BOOLLITERAL (291) 83
T_IDENTIFIER (292) 67
T_TYPEIDENTIFIER (293) 66
T_STRINGLITERAL (294) 84


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
pgm (58)
    on left: 1, on right: 0
program (59)
    on left: 2, on right: 1
decl (60)
    on left: 3 4 5, on right: 2 4 5
varDecl (61)
    on left: 6, on right: 4 24
variable (62)
    on left: 7, on right: 6 21 22
type (63)
    on left: 8 9 10, on right: 7 18
usertype (64)
    on left: 11, on right: 8 16
primtype (65)
    on left: 12 13 14 15, on right: 9 17
arraytype (66)
    on left: 16 17, on right: 10
funcDecl (67)
    on left: 18 19, on right: 5
formals (68)
    on left: 20 21 22, on right: 18 19 21 22
varDeclStar (69)
    on left: 23 24, on right: 24 27
stmtStar (70)
    on left: 25 26, on right: 26 27
stmtblock (71)
    on left: 27, on right: 18 19
stmt (72)
    on left: 28 29 30, on right: 26
expr (73)
    on left: 31 32, on right: 29 60
expr1 (74)
    on left: 33 34, on right: 31 32 34 56
expr2 (75)
    on left: 35 36, on right: 33 34 36
expr3 (76)
    on left: 37 38 39, on right: 35 36 38 39
expr4 (77)
    on left: 40 41 42 43 44, on right: 37 38 39 41 42 43 44
expr5 (78)
    on left: 45 46 47, on right: 40 41 42 43 44 46 47
expr6 (79)
    on left: 48 49 50 51, on right: 45 46 47 49 50 51
expr7 (80)
    on left: 52 53 54, on right: 48 49 50 51 53 54
expr8 (81)
    on left: 55 56 57, on right: 52 56 57
expr9 (82)
    on left: 58 59 60, on right: 55 57
constant (83)
    on left: 61 62 63 64 65, on right: 59
typeidentifier (84)
    on left: 66, on right: 11
identifier (85)
    on left: 67, on right: 7 18 19 58
string (86)
    on left: 68, on right: 12
int (87)
    on left: 69, on right: 13
double (88)
    on left: 70, on right: 14
bool (89)
    on left: 71, on right: 15
array (90)
    on left: 72, on right: 16 17
void (91)
    on left: 73, on right: 19
break (92)
    on left: 74, on right: 28
le (93)
    on left: 75, on right: 43
ge (94)
    on left: 76, on right: 44
eq (95)
    on left: 77, on right: 38
neq (96)
    on left: 78, on right: 39
and (97)
    on left: 79, on right: 36
or (98)
    on left: 80, on right: 34
intlit (99)
    on left: 81, on right: 61
dbllit (100)
    on left: 82, on right: 62
boollit (101)
    on left: 83, on right: 63
stringlit (102)
    on left: 84, on right: 64
null (103)
    on left: 85, on right: 65
scplus (104)
    on left: 86, on right: 46
scminus (105)
    on left: 87, on right: 47 54
sctimes (106)
    on left: 88, on right: 49
scdiv (107)
    on left: 89, on right: 50
scmod (108)
    on left: 90, on right: 51
sclt (109)
    on left: 91, on right: 41
scgt (110)
    on left: 92, on right: 42
sceq (111)
    on left: 93, on right: 32
scneq (112)
    on left: 94, on right: 53


State 0

    0 $accept: . pgm $end

    $default  reduce using rule 3 (decl)

    pgm      go to state 1
    program  go to state 2
    decl     go to state 3


State 1

    0 $accept: pgm . $end

    $end  shift, and go to state 4


State 2

    1 pgm: program .

    $default  reduce using rule 1 (pgm)


State 3

    2 program: decl .
    4 decl: decl . varDecl
    5     | decl . funcDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10

    $default  reduce using rule 2 (program)

    varDecl         go to state 11
    variable        go to state 12
    type            go to state 13
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    funcDecl        go to state 17
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22
    void            go to state 23


State 4

    0 $accept: pgm $end .

    $default  accept


State 5

   73 void: "void" .

    $default  reduce using rule 73 (void)


State 6

   69 int: "int" .

    $default  reduce using rule 69 (int)


State 7

   70 double: "double" .

    $default  reduce using rule 70 (double)


State 8

   71 bool: "bool" .

    $default  reduce using rule 71 (bool)


State 9

   68 string: "string" .

    $default  reduce using rule 68 (string)


State 10

   66 typeidentifier: T_TYPEIDENTIFIER .

    $default  reduce using rule 66 (typeidentifier)


State 11

    4 decl: decl varDecl .

    $default  reduce using rule 4 (decl)


State 12

    6 varDecl: variable . ';'

    ';'  shift, and go to state 24


State 13

    7 variable: type . identifier
   18 funcDecl: type . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 26


State 14

    8 type: usertype .
   16 arraytype: usertype . array

    "[]"  shift, and go to state 27

    $default  reduce using rule 8 (type)

    array  go to state 28


State 15

    9 type: primtype .
   17 arraytype: primtype . array

    "[]"  shift, and go to state 27

    $default  reduce using rule 9 (type)

    array  go to state 29


State 16

   10 type: arraytype .

    $default  reduce using rule 10 (type)


State 17

    5 decl: decl funcDecl .

    $default  reduce using rule 5 (decl)


State 18

   11 usertype: typeidentifier .

    $default  reduce using rule 11 (usertype)


State 19

   12 primtype: string .

    $default  reduce using rule 12 (primtype)


State 20

   13 primtype: int .

    $default  reduce using rule 13 (primtype)


State 21

   14 primtype: double .

    $default  reduce using rule 14 (primtype)


State 22

   15 primtype: bool .

    $default  reduce using rule 15 (primtype)


State 23

   19 funcDecl: void . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 30


State 24

    6 varDecl: variable ';' .

    $default  reduce using rule 6 (varDecl)


State 25

   67 identifier: T_IDENTIFIER .

    $default  reduce using rule 67 (identifier)


State 26

    7 variable: type identifier .
   18 funcDecl: type identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 31

    $default  reduce using rule 7 (variable)


State 27

   72 array: "[]" .

    $default  reduce using rule 72 (array)


State 28

   16 arraytype: usertype array .

    $default  reduce using rule 16 (arraytype)


State 29

   17 arraytype: primtype array .

    $default  reduce using rule 17 (arraytype)


State 30

   19 funcDecl: void identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 32


State 31

   18 funcDecl: type identifier '(' . formals ')' stmtblock

    $default  reduce using rule 20 (formals)

    formals  go to state 33


State 32

   19 funcDecl: void identifier '(' . formals ')' stmtblock

    $default  reduce using rule 20 (formals)

    formals  go to state 34


State 33

   18 funcDecl: type identifier '(' formals . ')' stmtblock
   21 formals: formals . variable
   22        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10
    ')'               shift, and go to state 35

    variable        go to state 36
    type            go to state 37
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22


State 34

   19 funcDecl: void identifier '(' formals . ')' stmtblock
   21 formals: formals . variable
   22        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10
    ')'               shift, and go to state 38

    variable        go to state 36
    type            go to state 37
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22


State 35

   18 funcDecl: type identifier '(' formals ')' . stmtblock

    '{'  shift, and go to state 39

    stmtblock  go to state 40


State 36

   21 formals: formals variable .
   22        | formals variable . ','

    ','  shift, and go to state 41

    $default  reduce using rule 21 (formals)


State 37

    7 variable: type . identifier

    T_IDENTIFIER  shift, and go to state 25

    identifier  go to state 42


State 38

   19 funcDecl: void identifier '(' formals ')' . stmtblock

    '{'  shift, and go to state 39

    stmtblock  go to state 43


State 39

   27 stmtblock: '{' . varDeclStar stmtStar '}'

    $default  reduce using rule 23 (varDeclStar)

    varDeclStar  go to state 44


State 40

   18 funcDecl: type identifier '(' formals ')' stmtblock .

    $default  reduce using rule 18 (funcDecl)


State 41

   22 formals: formals variable ',' .

    $default  reduce using rule 22 (formals)


State 42

    7 variable: type identifier .

    $default  reduce using rule 7 (variable)


State 43

   19 funcDecl: void identifier '(' formals ')' stmtblock .

    $default  reduce using rule 19 (funcDecl)


State 44

   24 varDeclStar: varDeclStar . varDecl
   27 stmtblock: '{' varDeclStar . stmtStar '}'

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 10

    $default  reduce using rule 25 (stmtStar)

    varDecl         go to state 45
    variable        go to state 12
    type            go to state 37
    usertype        go to state 14
    primtype        go to state 15
    arraytype       go to state 16
    stmtStar        go to state 46
    typeidentifier  go to state 18
    string          go to state 19
    int             go to state 20
    double          go to state 21
    bool            go to state 22


State 45

   24 varDeclStar: varDeclStar varDecl .

    $default  reduce using rule 24 (varDeclStar)


State 46

   26 stmtStar: stmtStar . stmt
   27 stmtblock: '{' varDeclStar stmtStar . '}'

    "null"           shift, and go to state 47
    "break"          shift, and go to state 48
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    ';'              shift, and go to state 53
    '('              shift, and go to state 54
    '}'              shift, and go to state 55
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    stmt        go to state 58
    expr        go to state 59
    expr1       go to state 60
    expr2       go to state 61
    expr3       go to state 62
    expr4       go to state 63
    expr5       go to state 64
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    break       go to state 71
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 47

   85 null: "null" .

    $default  reduce using rule 85 (null)


State 48

   74 break: "break" .

    $default  reduce using rule 74 (break)


State 49

   82 dbllit: T_DBLLITERAL .

    $default  reduce using rule 82 (dbllit)


State 50

   81 intlit: T_INTLITERAL .

    $default  reduce using rule 81 (intlit)


State 51

   83 boollit: T_BOOLLITERAL .

    $default  reduce using rule 83 (boollit)


State 52

   84 stringlit: T_STRINGLITERAL .

    $default  reduce using rule 84 (stringlit)


State 53

   30 stmt: ';' .

    $default  reduce using rule 30 (stmt)


State 54

   60 expr9: '(' . expr ')'

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr        go to state 79
    expr1       go to state 60
    expr2       go to state 61
    expr3       go to state 62
    expr4       go to state 63
    expr5       go to state 64
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 55

   27 stmtblock: '{' varDeclStar stmtStar '}' .

    $default  reduce using rule 27 (stmtblock)


State 56

   87 scminus: '-' .

    $default  reduce using rule 87 (scminus)


State 57

   94 scneq: '!' .

    $default  reduce using rule 94 (scneq)


State 58

   26 stmtStar: stmtStar stmt .

    $default  reduce using rule 26 (stmtStar)


State 59

   29 stmt: expr . ';'

    ';'  shift, and go to state 80


State 60

   31 expr: expr1 .
   32     | expr1 . sceq expr1
   34 expr1: expr1 . or expr2

    "||"  shift, and go to state 81
    '='   shift, and go to state 82

    $default  reduce using rule 31 (expr)

    or    go to state 83
    sceq  go to state 84


State 61

   33 expr1: expr2 .
   36 expr2: expr2 . and expr3

    "&&"  shift, and go to state 85

    $default  reduce using rule 33 (expr1)

    and  go to state 86


State 62

   35 expr2: expr3 .
   38 expr3: expr3 . eq expr4
   39      | expr3 . neq expr4

    "=="  shift, and go to state 87
    "!="  shift, and go to state 88

    $default  reduce using rule 35 (expr2)

    eq   go to state 89
    neq  go to state 90


State 63

   37 expr3: expr4 .
   41 expr4: expr4 . sclt expr5
   42      | expr4 . scgt expr5
   43      | expr4 . le expr5
   44      | expr4 . ge expr5

    "<="  shift, and go to state 91
    ">="  shift, and go to state 92
    '<'   shift, and go to state 93
    '>'   shift, and go to state 94

    $default  reduce using rule 37 (expr3)

    le    go to state 95
    ge    go to state 96
    sclt  go to state 97
    scgt  go to state 98


State 64

   40 expr4: expr5 .
   46 expr5: expr5 . scplus expr6
   47      | expr5 . scminus expr6

    '+'  shift, and go to state 99
    '-'  shift, and go to state 56

    $default  reduce using rule 40 (expr4)

    scplus   go to state 100
    scminus  go to state 101


State 65

   45 expr5: expr6 .
   49 expr6: expr6 . sctimes expr7
   50      | expr6 . scdiv expr7
   51      | expr6 . scmod expr7

    '*'  shift, and go to state 102
    '/'  shift, and go to state 103
    '%'  shift, and go to state 104

    $default  reduce using rule 45 (expr5)

    sctimes  go to state 105
    scdiv    go to state 106
    scmod    go to state 107


State 66

   48 expr6: expr7 .

    $default  reduce using rule 48 (expr6)


State 67

   52 expr7: expr8 .
   56 expr8: expr8 . '[' expr1 ']'
   57      | expr8 . '.' expr9

    '['  shift, and go to state 108
    '.'  shift, and go to state 109

    $default  reduce using rule 52 (expr7)


State 68

   55 expr8: expr9 .

    $default  reduce using rule 55 (expr8)


State 69

   59 expr9: constant .

    $default  reduce using rule 59 (expr9)


State 70

   58 expr9: identifier .

    $default  reduce using rule 58 (expr9)


State 71

   28 stmt: break . ';'

    ';'  shift, and go to state 110


State 72

   61 constant: intlit .

    $default  reduce using rule 61 (constant)


State 73

   62 constant: dbllit .

    $default  reduce using rule 62 (constant)


State 74

   63 constant: boollit .

    $default  reduce using rule 63 (constant)


State 75

   64 constant: stringlit .

    $default  reduce using rule 64 (constant)


State 76

   65 constant: null .

    $default  reduce using rule 65 (constant)


State 77

   54 expr7: scminus . expr7

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr7       go to state 111
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 78

   53 expr7: scneq . expr7

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr7       go to state 112
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 79

   60 expr9: '(' expr . ')'

    ')'  shift, and go to state 113


State 80

   29 stmt: expr ';' .

    $default  reduce using rule 29 (stmt)


State 81

   80 or: "||" .

    $default  reduce using rule 80 (or)


State 82

   93 sceq: '=' .

    $default  reduce using rule 93 (sceq)


State 83

   34 expr1: expr1 or . expr2

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr2       go to state 114
    expr3       go to state 62
    expr4       go to state 63
    expr5       go to state 64
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 84

   32 expr: expr1 sceq . expr1

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr1       go to state 115
    expr2       go to state 61
    expr3       go to state 62
    expr4       go to state 63
    expr5       go to state 64
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 85

   79 and: "&&" .

    $default  reduce using rule 79 (and)


State 86

   36 expr2: expr2 and . expr3

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr3       go to state 116
    expr4       go to state 63
    expr5       go to state 64
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 87

   77 eq: "==" .

    $default  reduce using rule 77 (eq)


State 88

   78 neq: "!=" .

    $default  reduce using rule 78 (neq)


State 89

   38 expr3: expr3 eq . expr4

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr4       go to state 117
    expr5       go to state 64
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 90

   39 expr3: expr3 neq . expr4

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr4       go to state 118
    expr5       go to state 64
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 91

   75 le: "<=" .

    $default  reduce using rule 75 (le)


State 92

   76 ge: ">=" .

    $default  reduce using rule 76 (ge)


State 93

   91 sclt: '<' .

    $default  reduce using rule 91 (sclt)


State 94

   92 scgt: '>' .

    $default  reduce using rule 92 (scgt)


State 95

   43 expr4: expr4 le . expr5

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr5       go to state 119
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 96

   44 expr4: expr4 ge . expr5

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr5       go to state 120
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 97

   41 expr4: expr4 sclt . expr5

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr5       go to state 121
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 98

   42 expr4: expr4 scgt . expr5

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr5       go to state 122
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 99

   86 scplus: '+' .

    $default  reduce using rule 86 (scplus)


State 100

   46 expr5: expr5 scplus . expr6

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr6       go to state 123
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 101

   47 expr5: expr5 scminus . expr6

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr6       go to state 124
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 102

   88 sctimes: '*' .

    $default  reduce using rule 88 (sctimes)


State 103

   89 scdiv: '/' .

    $default  reduce using rule 89 (scdiv)


State 104

   90 scmod: '%' .

    $default  reduce using rule 90 (scmod)


State 105

   49 expr6: expr6 sctimes . expr7

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr7       go to state 125
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 106

   50 expr6: expr6 scdiv . expr7

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr7       go to state 126
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 107

   51 expr6: expr6 scmod . expr7

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr7       go to state 127
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 108

   56 expr8: expr8 '[' . expr1 ']'

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54
    '-'              shift, and go to state 56
    '!'              shift, and go to state 57

    expr1       go to state 128
    expr2       go to state 61
    expr3       go to state 62
    expr4       go to state 63
    expr5       go to state 64
    expr6       go to state 65
    expr7       go to state 66
    expr8       go to state 67
    expr9       go to state 68
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76
    scminus     go to state 77
    scneq       go to state 78


State 109

   57 expr8: expr8 '.' . expr9

    "null"           shift, and go to state 47
    T_DBLLITERAL     shift, and go to state 49
    T_INTLITERAL     shift, and go to state 50
    T_BOOLLITERAL    shift, and go to state 51
    T_IDENTIFIER     shift, and go to state 25
    T_STRINGLITERAL  shift, and go to state 52
    '('              shift, and go to state 54

    expr9       go to state 129
    constant    go to state 69
    identifier  go to state 70
    intlit      go to state 72
    dbllit      go to state 73
    boollit     go to state 74
    stringlit   go to state 75
    null        go to state 76


State 110

   28 stmt: break ';' .

    $default  reduce using rule 28 (stmt)


State 111

   54 expr7: scminus expr7 .

    $default  reduce using rule 54 (expr7)


State 112

   53 expr7: scneq expr7 .

    $default  reduce using rule 53 (expr7)


State 113

   60 expr9: '(' expr ')' .

    $default  reduce using rule 60 (expr9)


State 114

   34 expr1: expr1 or expr2 .
   36 expr2: expr2 . and expr3

    "&&"  shift, and go to state 85

    $default  reduce using rule 34 (expr1)

    and  go to state 86


State 115

   32 expr: expr1 sceq expr1 .
   34 expr1: expr1 . or expr2

    "||"  shift, and go to state 81

    $default  reduce using rule 32 (expr)

    or  go to state 83


State 116

   36 expr2: expr2 and expr3 .
   38 expr3: expr3 . eq expr4
   39      | expr3 . neq expr4

    "=="  shift, and go to state 87
    "!="  shift, and go to state 88

    $default  reduce using rule 36 (expr2)

    eq   go to state 89
    neq  go to state 90


State 117

   38 expr3: expr3 eq expr4 .
   41 expr4: expr4 . sclt expr5
   42      | expr4 . scgt expr5
   43      | expr4 . le expr5
   44      | expr4 . ge expr5

    "<="  shift, and go to state 91
    ">="  shift, and go to state 92
    '<'   shift, and go to state 93
    '>'   shift, and go to state 94

    $default  reduce using rule 38 (expr3)

    le    go to state 95
    ge    go to state 96
    sclt  go to state 97
    scgt  go to state 98


State 118

   39 expr3: expr3 neq expr4 .
   41 expr4: expr4 . sclt expr5
   42      | expr4 . scgt expr5
   43      | expr4 . le expr5
   44      | expr4 . ge expr5

    "<="  shift, and go to state 91
    ">="  shift, and go to state 92
    '<'   shift, and go to state 93
    '>'   shift, and go to state 94

    $default  reduce using rule 39 (expr3)

    le    go to state 95
    ge    go to state 96
    sclt  go to state 97
    scgt  go to state 98


State 119

   43 expr4: expr4 le expr5 .
   46 expr5: expr5 . scplus expr6
   47      | expr5 . scminus expr6

    '+'  shift, and go to state 99
    '-'  shift, and go to state 56

    $default  reduce using rule 43 (expr4)

    scplus   go to state 100
    scminus  go to state 101


State 120

   44 expr4: expr4 ge expr5 .
   46 expr5: expr5 . scplus expr6
   47      | expr5 . scminus expr6

    '+'  shift, and go to state 99
    '-'  shift, and go to state 56

    $default  reduce using rule 44 (expr4)

    scplus   go to state 100
    scminus  go to state 101


State 121

   41 expr4: expr4 sclt expr5 .
   46 expr5: expr5 . scplus expr6
   47      | expr5 . scminus expr6

    '+'  shift, and go to state 99
    '-'  shift, and go to state 56

    $default  reduce using rule 41 (expr4)

    scplus   go to state 100
    scminus  go to state 101


State 122

   42 expr4: expr4 scgt expr5 .
   46 expr5: expr5 . scplus expr6
   47      | expr5 . scminus expr6

    '+'  shift, and go to state 99
    '-'  shift, and go to state 56

    $default  reduce using rule 42 (expr4)

    scplus   go to state 100
    scminus  go to state 101


State 123

   46 expr5: expr5 scplus expr6 .
   49 expr6: expr6 . sctimes expr7
   50      | expr6 . scdiv expr7
   51      | expr6 . scmod expr7

    '*'  shift, and go to state 102
    '/'  shift, and go to state 103
    '%'  shift, and go to state 104

    $default  reduce using rule 46 (expr5)

    sctimes  go to state 105
    scdiv    go to state 106
    scmod    go to state 107


State 124

   47 expr5: expr5 scminus expr6 .
   49 expr6: expr6 . sctimes expr7
   50      | expr6 . scdiv expr7
   51      | expr6 . scmod expr7

    '*'  shift, and go to state 102
    '/'  shift, and go to state 103
    '%'  shift, and go to state 104

    $default  reduce using rule 47 (expr5)

    sctimes  go to state 105
    scdiv    go to state 106
    scmod    go to state 107


State 125

   49 expr6: expr6 sctimes expr7 .

    $default  reduce using rule 49 (expr6)


State 126

   50 expr6: expr6 scdiv expr7 .

    $default  reduce using rule 50 (expr6)


State 127

   51 expr6: expr6 scmod expr7 .

    $default  reduce using rule 51 (expr6)


State 128

   34 expr1: expr1 . or expr2
   56 expr8: expr8 '[' expr1 . ']'

    "||"  shift, and go to state 81
    ']'   shift, and go to state 130

    or  go to state 83


State 129

   57 expr8: expr8 '.' expr9 .

    $default  reduce using rule 57 (expr8)


State 130

   56 expr8: expr8 '[' expr1 ']' .

    $default  reduce using rule 56 (expr8)
