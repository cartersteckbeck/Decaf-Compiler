Nonterminals useless in grammar

   this
   readint
   new
   newarray
   readline
   if
   sccolon
   sccomma
   scperiod
   sclbracket
   scrbracket
   sclparen
   scrparen
   sclcurly
   scrcurly
   scbackslash


Terminals unused in grammar

   "this"
   "New"
   "NewArray"
   "ReadInteger"
   "ReadLine"
   '\\'


Rules useless in grammar

  152 this: "this"

  153 readint: "ReadInteger"

  154 new: "New"

  155 newarray: "NewArray"

  156 readline: "ReadLine"

  157 if: "if"

  158 sccolon: ';'

  159 sccomma: ','

  160 scperiod: '.'

  161 sclbracket: '['

  162 scrbracket: ']'

  163 sclparen: '('

  164 scrparen: ')'

  165 sclcurly: '{'

  166 scrcurly: '}'

  167 scbackslash: '\\'


Rules useless in parser due to conflicts

   38 funcDecl: type identifier '(' formals ')' stmtblock
   39         | void identifier '(' formals ')' stmtblock


State 75 conflicts: 10 reduce/reduce
State 79 conflicts: 10 reduce/reduce
State 115 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce
State 141 conflicts: 1 shift/reduce
State 200 conflicts: 1 reduce/reduce
State 217 conflicts: 1 shift/reduce
State 218 conflicts: 1 shift/reduce
State 219 conflicts: 1 shift/reduce
State 220 conflicts: 1 shift/reduce


Grammar

    0 $accept: pgm $end

    1 pgm: program

    2 program: decl

    3 decl: %empty
    4     | decl varDecl
    5     | decl funcDecl
    6     | decl prototypeDecl
    7     | decl interfaceDecl
    8     | decl classDecl

    9 varDecl: variable ';'

   10 funcDecl: type identifier '(' formals ')' stmtblock
   11         | void identifier '(' formals ')' stmtblock

   12 interfaceDecl: "interface" identifier '{' prototypes '}'

   13 prototypes: %empty
   14           | prototypes prototypeDecl

   15 prototypeDecl: type identifier '(' formals ')' ';'
   16              | void identifier '(' formals ')' ';'

   17 classDecl: "class" identifier '{' fields '}'
   18          | "class" identifier "implements" implements '{' fields '}'
   19          | "class" identifier "extends" identifier "implements" identifier '{' fields '}'

   20 fields: %empty
   21       | fields funcDecl
   22       | fields varDecl

   23 implements: %empty
   24           | implements identifier
   25           | implements identifier ','

   26 functionCall: identifier '(' actuals ')'

   27 variable: type identifier

   28 type: usertype
   29     | primtype
   30     | arraytype

   31 usertype: typeidentifier

   32 primtype: string
   33         | int
   34         | double
   35         | bool

   36 arraytype: usertype array
   37          | primtype array

   38 funcDecl: type identifier '(' formals ')' stmtblock
   39         | void identifier '(' formals ')' stmtblock

   40 formals: %empty
   41        | formals variable
   42        | formals variable ','

   43 varDeclStar: %empty
   44            | varDeclStar varDecl

   45 stmtStar: %empty
   46         | stmtStar stmt

   47 stmtblock: '{' varDeclStar stmtStar '}'

   48 print_stmt: print '(' print_actuals ')'

   49 return_stmt: return
   50            | return expr
   51            | return functionCall

   52 stmt: matched_stmt
   53     | unmatched_stmt

   54 matched_stmt: break ';'
   55             | expr ';'
   56             | ';'
   57             | print_stmt ';'
   58             | return_stmt ';'
   59             | matched_if
   60             | matched_while
   61             | matched_for
   62             | functionCall ';'
   63             | stmtblock

   64 unmatched_stmt: unmatched_if
   65               | unmatched_while

   66 common_if: "if" '(' expr ')'

   67 matched_if: common_if matched_stmt else matched_stmt

   68 unmatched_if: common_if matched_stmt
   69             | common_if matched_stmt else unmatched_stmt
   70             | common_if unmatched_stmt

   71 common_while: "while" '(' expr ')'

   72 matched_while: common_while matched_stmt

   73 unmatched_while: common_while unmatched_stmt

   74 common_for: "for" '(' expr ';' expr ';' expr ')'
   75           | "for" '(' ';' expr ';' expr ')'
   76           | "for" '(' expr ';' expr ';' ')'
   77           | "for" '(' ';' expr ';' ')'

   78 matched_for: common_for matched_stmt

   79 expr: expr1
   80     | expr1 sceq expr1

   81 expr1: expr2
   82      | expr1 or expr2

   83 expr2: expr3
   84      | expr2 and expr3

   85 expr3: expr4
   86      | expr3 eq expr4
   87      | expr3 neq expr4

   88 expr4: expr5
   89      | expr4 sclt expr5
   90      | expr4 scgt expr5
   91      | expr4 le expr5
   92      | expr4 ge expr5

   93 expr5: expr6
   94      | expr5 scplus expr6
   95      | expr5 scminus expr6

   96 expr6: expr7
   97      | expr6 sctimes expr7
   98      | expr6 scdiv expr7
   99      | expr6 scmod expr7

  100 expr7: expr8
  101      | scneq expr7
  102      | scminus expr7

  103 expr8: expr9
  104      | expr8 '[' expr1 ']'
  105      | expr8 '.' expr9

  106 expr9: identifier
  107      | constant
  108      | functionCall
  109      | '(' expr ')'

  110 actuals: %empty
  111        | actuals expr
  112        | actuals ',' expr

  113 print_actuals: expr
  114              | print_actuals ',' expr

  115 constant: intlit
  116         | dbllit
  117         | boollit
  118         | stringlit
  119         | null

  120 typeidentifier: T_TYPEIDENTIFIER

  121 identifier: T_IDENTIFIER

  122 string: "string"

  123 int: "int"

  124 double: "double"

  125 bool: "bool"

  126 array: "[]"

  127 void: "void"

  128 break: "break"

  129 le: "<="

  130 ge: ">="

  131 eq: "=="

  132 neq: "!="

  133 and: "&&"

  134 or: "||"

  135 intlit: T_INTLITERAL

  136 dbllit: T_DBLLITERAL

  137 boollit: T_BOOLLITERAL

  138 stringlit: T_STRINGLITERAL

  139 null: "null"

  140 else: "else"

  141 print: "Print"

  142 return: "return"

  143 scplus: '+'

  144 scminus: '-'

  145 sctimes: '*'

  146 scdiv: '/'

  147 scmod: '%'

  148 sclt: '<'

  149 scgt: '>'

  150 sceq: '='

  151 scneq: '!'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 151
'%' (37) 147
'(' (40) 10 11 15 16 26 38 39 48 66 71 74 75 76 77 109
')' (41) 10 11 15 16 26 38 39 48 66 71 74 75 76 77 109
'*' (42) 145
'+' (43) 143
',' (44) 25 42 112 114
'-' (45) 144
'.' (46) 105
'/' (47) 146
';' (59) 9 15 16 54 55 56 57 58 62 74 75 76 77
'<' (60) 148
'=' (61) 150
'>' (62) 149
'[' (91) 104
'\\' (92)
']' (93) 104
'{' (123) 12 17 18 19 47
'}' (125) 12 17 18 19 47
error (256)
"void" (260) 127
"int" (261) 123
"double" (262) 124
"bool" (263) 125
"string" (264) 122
"class" (265) 17 18 19
"interface" (266) 12
"null" (267) 139
"this" (268)
"extends" (269) 19
"implements" (270) 18 19
"for" (271) 74 75 76 77
"while" (272) 71
"if" (273) 66
"else" (274) 140
"return" (275) 142
"break" (276) 128
"New" (277)
"NewArray" (278)
"Print" (279) 141
"ReadInteger" (280)
"ReadLine" (281)
"<=" (282) 129
">=" (283) 130
"==" (284) 131
"!=" (285) 132
"&&" (286) 133
"||" (287) 134
"[]" (288) 126
T_DBLLITERAL (289) 136
T_INTLITERAL (290) 135
T_BOOLLITERAL (291) 137
T_IDENTIFIER (292) 121
T_TYPEIDENTIFIER (293) 120
T_STRINGLITERAL (294) 138


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
pgm (58)
    on left: 1, on right: 0
program (59)
    on left: 2, on right: 1
decl (60)
    on left: 3 4 5 6 7 8, on right: 2 4 5 6 7 8
varDecl (61)
    on left: 9, on right: 4 22 44
funcDecl (62)
    on left: 10 11 38 39, on right: 5 21
interfaceDecl (63)
    on left: 12, on right: 7
prototypes (64)
    on left: 13 14, on right: 12 14
prototypeDecl (65)
    on left: 15 16, on right: 6 14
classDecl (66)
    on left: 17 18 19, on right: 8
fields (67)
    on left: 20 21 22, on right: 17 18 19 21 22
implements (68)
    on left: 23 24 25, on right: 18 24 25
functionCall (69)
    on left: 26, on right: 51 62 108
variable (70)
    on left: 27, on right: 9 41 42
type (71)
    on left: 28 29 30, on right: 10 15 27 38
usertype (72)
    on left: 31, on right: 28 36
primtype (73)
    on left: 32 33 34 35, on right: 29 37
arraytype (74)
    on left: 36 37, on right: 30
formals (75)
    on left: 40 41 42, on right: 10 11 15 16 38 39 41 42
varDeclStar (76)
    on left: 43 44, on right: 44 47
stmtStar (77)
    on left: 45 46, on right: 46 47
stmtblock (78)
    on left: 47, on right: 10 11 38 39 63
print_stmt (79)
    on left: 48, on right: 57
return_stmt (80)
    on left: 49 50 51, on right: 58
stmt (81)
    on left: 52 53, on right: 46
matched_stmt (82)
    on left: 54 55 56 57 58 59 60 61 62 63, on right: 52 67 68 69 72
    78
unmatched_stmt (83)
    on left: 64 65, on right: 53 69 70 73
common_if (84)
    on left: 66, on right: 67 68 69 70
matched_if (85)
    on left: 67, on right: 59
unmatched_if (86)
    on left: 68 69 70, on right: 64
common_while (87)
    on left: 71, on right: 72 73
matched_while (88)
    on left: 72, on right: 60
unmatched_while (89)
    on left: 73, on right: 65
common_for (90)
    on left: 74 75 76 77, on right: 78
matched_for (91)
    on left: 78, on right: 61
expr (92)
    on left: 79 80, on right: 50 55 66 71 74 75 76 77 109 111 112 113
    114
expr1 (93)
    on left: 81 82, on right: 79 80 82 104
expr2 (94)
    on left: 83 84, on right: 81 82 84
expr3 (95)
    on left: 85 86 87, on right: 83 84 86 87
expr4 (96)
    on left: 88 89 90 91 92, on right: 85 86 87 89 90 91 92
expr5 (97)
    on left: 93 94 95, on right: 88 89 90 91 92 94 95
expr6 (98)
    on left: 96 97 98 99, on right: 93 94 95 97 98 99
expr7 (99)
    on left: 100 101 102, on right: 96 97 98 99 101 102
expr8 (100)
    on left: 103 104 105, on right: 100 104 105
expr9 (101)
    on left: 106 107 108 109, on right: 103 105
actuals (102)
    on left: 110 111 112, on right: 26 111 112
print_actuals (103)
    on left: 113 114, on right: 48 114
constant (104)
    on left: 115 116 117 118 119, on right: 107
typeidentifier (105)
    on left: 120, on right: 31
identifier (106)
    on left: 121, on right: 10 11 12 15 16 17 18 19 24 25 26 27 38
    39 106
string (107)
    on left: 122, on right: 32
int (108)
    on left: 123, on right: 33
double (109)
    on left: 124, on right: 34
bool (110)
    on left: 125, on right: 35
array (111)
    on left: 126, on right: 36 37
void (112)
    on left: 127, on right: 11 16 39
break (113)
    on left: 128, on right: 54
le (114)
    on left: 129, on right: 91
ge (115)
    on left: 130, on right: 92
eq (116)
    on left: 131, on right: 86
neq (117)
    on left: 132, on right: 87
and (118)
    on left: 133, on right: 84
or (119)
    on left: 134, on right: 82
intlit (120)
    on left: 135, on right: 115
dbllit (121)
    on left: 136, on right: 116
boollit (122)
    on left: 137, on right: 117
stringlit (123)
    on left: 138, on right: 118
null (124)
    on left: 139, on right: 119
else (125)
    on left: 140, on right: 67 69
print (126)
    on left: 141, on right: 48
return (127)
    on left: 142, on right: 49 50 51
scplus (128)
    on left: 143, on right: 94
scminus (129)
    on left: 144, on right: 95 102
sctimes (130)
    on left: 145, on right: 97
scdiv (131)
    on left: 146, on right: 98
scmod (132)
    on left: 147, on right: 99
sclt (133)
    on left: 148, on right: 89
scgt (134)
    on left: 149, on right: 90
sceq (135)
    on left: 150, on right: 80
scneq (136)
    on left: 151, on right: 101


State 0

    0 $accept: . pgm $end

    $default  reduce using rule 3 (decl)

    pgm      go to state 1
    program  go to state 2
    decl     go to state 3


State 1

    0 $accept: pgm . $end

    $end  shift, and go to state 4


State 2

    1 pgm: program .

    $default  reduce using rule 1 (pgm)


State 3

    2 program: decl .
    4 decl: decl . varDecl
    5     | decl . funcDecl
    6     | decl . prototypeDecl
    7     | decl . interfaceDecl
    8     | decl . classDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    "class"           shift, and go to state 10
    "interface"       shift, and go to state 11
    T_TYPEIDENTIFIER  shift, and go to state 12

    $default  reduce using rule 2 (program)

    varDecl         go to state 13
    funcDecl        go to state 14
    interfaceDecl   go to state 15
    prototypeDecl   go to state 16
    classDecl       go to state 17
    variable        go to state 18
    type            go to state 19
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27
    void            go to state 28


State 4

    0 $accept: pgm $end .

    $default  accept


State 5

  127 void: "void" .

    $default  reduce using rule 127 (void)


State 6

  123 int: "int" .

    $default  reduce using rule 123 (int)


State 7

  124 double: "double" .

    $default  reduce using rule 124 (double)


State 8

  125 bool: "bool" .

    $default  reduce using rule 125 (bool)


State 9

  122 string: "string" .

    $default  reduce using rule 122 (string)


State 10

   17 classDecl: "class" . identifier '{' fields '}'
   18          | "class" . identifier "implements" implements '{' fields '}'
   19          | "class" . identifier "extends" identifier "implements" identifier '{' fields '}'

    T_IDENTIFIER  shift, and go to state 29

    identifier  go to state 30


State 11

   12 interfaceDecl: "interface" . identifier '{' prototypes '}'

    T_IDENTIFIER  shift, and go to state 29

    identifier  go to state 31


State 12

  120 typeidentifier: T_TYPEIDENTIFIER .

    $default  reduce using rule 120 (typeidentifier)


State 13

    4 decl: decl varDecl .

    $default  reduce using rule 4 (decl)


State 14

    5 decl: decl funcDecl .

    $default  reduce using rule 5 (decl)


State 15

    7 decl: decl interfaceDecl .

    $default  reduce using rule 7 (decl)


State 16

    6 decl: decl prototypeDecl .

    $default  reduce using rule 6 (decl)


State 17

    8 decl: decl classDecl .

    $default  reduce using rule 8 (decl)


State 18

    9 varDecl: variable . ';'

    ';'  shift, and go to state 32


State 19

   10 funcDecl: type . identifier '(' formals ')' stmtblock
   15 prototypeDecl: type . identifier '(' formals ')' ';'
   27 variable: type . identifier
   38 funcDecl: type . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 29

    identifier  go to state 33


State 20

   28 type: usertype .
   36 arraytype: usertype . array

    "[]"  shift, and go to state 34

    $default  reduce using rule 28 (type)

    array  go to state 35


State 21

   29 type: primtype .
   37 arraytype: primtype . array

    "[]"  shift, and go to state 34

    $default  reduce using rule 29 (type)

    array  go to state 36


State 22

   30 type: arraytype .

    $default  reduce using rule 30 (type)


State 23

   31 usertype: typeidentifier .

    $default  reduce using rule 31 (usertype)


State 24

   32 primtype: string .

    $default  reduce using rule 32 (primtype)


State 25

   33 primtype: int .

    $default  reduce using rule 33 (primtype)


State 26

   34 primtype: double .

    $default  reduce using rule 34 (primtype)


State 27

   35 primtype: bool .

    $default  reduce using rule 35 (primtype)


State 28

   11 funcDecl: void . identifier '(' formals ')' stmtblock
   16 prototypeDecl: void . identifier '(' formals ')' ';'
   39 funcDecl: void . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 29

    identifier  go to state 37


State 29

  121 identifier: T_IDENTIFIER .

    $default  reduce using rule 121 (identifier)


State 30

   17 classDecl: "class" identifier . '{' fields '}'
   18          | "class" identifier . "implements" implements '{' fields '}'
   19          | "class" identifier . "extends" identifier "implements" identifier '{' fields '}'

    "extends"     shift, and go to state 38
    "implements"  shift, and go to state 39
    '{'           shift, and go to state 40


State 31

   12 interfaceDecl: "interface" identifier . '{' prototypes '}'

    '{'  shift, and go to state 41


State 32

    9 varDecl: variable ';' .

    $default  reduce using rule 9 (varDecl)


State 33

   10 funcDecl: type identifier . '(' formals ')' stmtblock
   15 prototypeDecl: type identifier . '(' formals ')' ';'
   27 variable: type identifier .
   38 funcDecl: type identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 42

    $default  reduce using rule 27 (variable)


State 34

  126 array: "[]" .

    $default  reduce using rule 126 (array)


State 35

   36 arraytype: usertype array .

    $default  reduce using rule 36 (arraytype)


State 36

   37 arraytype: primtype array .

    $default  reduce using rule 37 (arraytype)


State 37

   11 funcDecl: void identifier . '(' formals ')' stmtblock
   16 prototypeDecl: void identifier . '(' formals ')' ';'
   39 funcDecl: void identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 43


State 38

   19 classDecl: "class" identifier "extends" . identifier "implements" identifier '{' fields '}'

    T_IDENTIFIER  shift, and go to state 29

    identifier  go to state 44


State 39

   18 classDecl: "class" identifier "implements" . implements '{' fields '}'

    $default  reduce using rule 23 (implements)

    implements  go to state 45


State 40

   17 classDecl: "class" identifier '{' . fields '}'

    $default  reduce using rule 20 (fields)

    fields  go to state 46


State 41

   12 interfaceDecl: "interface" identifier '{' . prototypes '}'

    $default  reduce using rule 13 (prototypes)

    prototypes  go to state 47


State 42

   10 funcDecl: type identifier '(' . formals ')' stmtblock
   15 prototypeDecl: type identifier '(' . formals ')' ';'
   38 funcDecl: type identifier '(' . formals ')' stmtblock

    $default  reduce using rule 40 (formals)

    formals  go to state 48


State 43

   11 funcDecl: void identifier '(' . formals ')' stmtblock
   16 prototypeDecl: void identifier '(' . formals ')' ';'
   39 funcDecl: void identifier '(' . formals ')' stmtblock

    $default  reduce using rule 40 (formals)

    formals  go to state 49


State 44

   19 classDecl: "class" identifier "extends" identifier . "implements" identifier '{' fields '}'

    "implements"  shift, and go to state 50


State 45

   18 classDecl: "class" identifier "implements" implements . '{' fields '}'
   24 implements: implements . identifier
   25           | implements . identifier ','

    T_IDENTIFIER  shift, and go to state 29
    '{'           shift, and go to state 51

    identifier  go to state 52


State 46

   17 classDecl: "class" identifier '{' fields . '}'
   21 fields: fields . funcDecl
   22       | fields . varDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    '}'               shift, and go to state 53

    varDecl         go to state 54
    funcDecl        go to state 55
    variable        go to state 18
    type            go to state 56
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27
    void            go to state 57


State 47

   12 interfaceDecl: "interface" identifier '{' prototypes . '}'
   14 prototypes: prototypes . prototypeDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    '}'               shift, and go to state 58

    prototypeDecl   go to state 59
    type            go to state 60
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27
    void            go to state 61


State 48

   10 funcDecl: type identifier '(' formals . ')' stmtblock
   15 prototypeDecl: type identifier '(' formals . ')' ';'
   38 funcDecl: type identifier '(' formals . ')' stmtblock
   41 formals: formals . variable
   42        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    ')'               shift, and go to state 62

    variable        go to state 63
    type            go to state 64
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27


State 49

   11 funcDecl: void identifier '(' formals . ')' stmtblock
   16 prototypeDecl: void identifier '(' formals . ')' ';'
   39 funcDecl: void identifier '(' formals . ')' stmtblock
   41 formals: formals . variable
   42        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    ')'               shift, and go to state 65

    variable        go to state 63
    type            go to state 64
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27


State 50

   19 classDecl: "class" identifier "extends" identifier "implements" . identifier '{' fields '}'

    T_IDENTIFIER  shift, and go to state 29

    identifier  go to state 66


State 51

   18 classDecl: "class" identifier "implements" implements '{' . fields '}'

    $default  reduce using rule 20 (fields)

    fields  go to state 67


State 52

   24 implements: implements identifier .
   25           | implements identifier . ','

    ','  shift, and go to state 68

    $default  reduce using rule 24 (implements)


State 53

   17 classDecl: "class" identifier '{' fields '}' .

    $default  reduce using rule 17 (classDecl)


State 54

   22 fields: fields varDecl .

    $default  reduce using rule 22 (fields)


State 55

   21 fields: fields funcDecl .

    $default  reduce using rule 21 (fields)


State 56

   10 funcDecl: type . identifier '(' formals ')' stmtblock
   27 variable: type . identifier
   38 funcDecl: type . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 29

    identifier  go to state 69


State 57

   11 funcDecl: void . identifier '(' formals ')' stmtblock
   39         | void . identifier '(' formals ')' stmtblock

    T_IDENTIFIER  shift, and go to state 29

    identifier  go to state 70


State 58

   12 interfaceDecl: "interface" identifier '{' prototypes '}' .

    $default  reduce using rule 12 (interfaceDecl)


State 59

   14 prototypes: prototypes prototypeDecl .

    $default  reduce using rule 14 (prototypes)


State 60

   15 prototypeDecl: type . identifier '(' formals ')' ';'

    T_IDENTIFIER  shift, and go to state 29

    identifier  go to state 71


State 61

   16 prototypeDecl: void . identifier '(' formals ')' ';'

    T_IDENTIFIER  shift, and go to state 29

    identifier  go to state 72


State 62

   10 funcDecl: type identifier '(' formals ')' . stmtblock
   15 prototypeDecl: type identifier '(' formals ')' . ';'
   38 funcDecl: type identifier '(' formals ')' . stmtblock

    ';'  shift, and go to state 73
    '{'  shift, and go to state 74

    stmtblock  go to state 75


State 63

   41 formals: formals variable .
   42        | formals variable . ','

    ','  shift, and go to state 76

    $default  reduce using rule 41 (formals)


State 64

   27 variable: type . identifier

    T_IDENTIFIER  shift, and go to state 29

    identifier  go to state 77


State 65

   11 funcDecl: void identifier '(' formals ')' . stmtblock
   16 prototypeDecl: void identifier '(' formals ')' . ';'
   39 funcDecl: void identifier '(' formals ')' . stmtblock

    ';'  shift, and go to state 78
    '{'  shift, and go to state 74

    stmtblock  go to state 79


State 66

   19 classDecl: "class" identifier "extends" identifier "implements" identifier . '{' fields '}'

    '{'  shift, and go to state 80


State 67

   18 classDecl: "class" identifier "implements" implements '{' fields . '}'
   21 fields: fields . funcDecl
   22       | fields . varDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    '}'               shift, and go to state 81

    varDecl         go to state 54
    funcDecl        go to state 55
    variable        go to state 18
    type            go to state 56
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27
    void            go to state 57


State 68

   25 implements: implements identifier ',' .

    $default  reduce using rule 25 (implements)


State 69

   10 funcDecl: type identifier . '(' formals ')' stmtblock
   27 variable: type identifier .
   38 funcDecl: type identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 82

    $default  reduce using rule 27 (variable)


State 70

   11 funcDecl: void identifier . '(' formals ')' stmtblock
   39         | void identifier . '(' formals ')' stmtblock

    '('  shift, and go to state 83


State 71

   15 prototypeDecl: type identifier . '(' formals ')' ';'

    '('  shift, and go to state 84


State 72

   16 prototypeDecl: void identifier . '(' formals ')' ';'

    '('  shift, and go to state 85


State 73

   15 prototypeDecl: type identifier '(' formals ')' ';' .

    $default  reduce using rule 15 (prototypeDecl)


State 74

   47 stmtblock: '{' . varDeclStar stmtStar '}'

    $default  reduce using rule 43 (varDeclStar)

    varDeclStar  go to state 86


State 75

   10 funcDecl: type identifier '(' formals ')' stmtblock .
   38         | type identifier '(' formals ')' stmtblock .

    $end              reduce using rule 10 (funcDecl)
    $end              [reduce using rule 38 (funcDecl)]
    "void"            reduce using rule 10 (funcDecl)
    "void"            [reduce using rule 38 (funcDecl)]
    "int"             reduce using rule 10 (funcDecl)
    "int"             [reduce using rule 38 (funcDecl)]
    "double"          reduce using rule 10 (funcDecl)
    "double"          [reduce using rule 38 (funcDecl)]
    "bool"            reduce using rule 10 (funcDecl)
    "bool"            [reduce using rule 38 (funcDecl)]
    "string"          reduce using rule 10 (funcDecl)
    "string"          [reduce using rule 38 (funcDecl)]
    "class"           reduce using rule 10 (funcDecl)
    "class"           [reduce using rule 38 (funcDecl)]
    "interface"       reduce using rule 10 (funcDecl)
    "interface"       [reduce using rule 38 (funcDecl)]
    T_TYPEIDENTIFIER  reduce using rule 10 (funcDecl)
    T_TYPEIDENTIFIER  [reduce using rule 38 (funcDecl)]
    '}'               reduce using rule 10 (funcDecl)
    '}'               [reduce using rule 38 (funcDecl)]
    $default          reduce using rule 10 (funcDecl)


State 76

   42 formals: formals variable ',' .

    $default  reduce using rule 42 (formals)


State 77

   27 variable: type identifier .

    $default  reduce using rule 27 (variable)


State 78

   16 prototypeDecl: void identifier '(' formals ')' ';' .

    $default  reduce using rule 16 (prototypeDecl)


State 79

   11 funcDecl: void identifier '(' formals ')' stmtblock .
   39         | void identifier '(' formals ')' stmtblock .

    $end              reduce using rule 11 (funcDecl)
    $end              [reduce using rule 39 (funcDecl)]
    "void"            reduce using rule 11 (funcDecl)
    "void"            [reduce using rule 39 (funcDecl)]
    "int"             reduce using rule 11 (funcDecl)
    "int"             [reduce using rule 39 (funcDecl)]
    "double"          reduce using rule 11 (funcDecl)
    "double"          [reduce using rule 39 (funcDecl)]
    "bool"            reduce using rule 11 (funcDecl)
    "bool"            [reduce using rule 39 (funcDecl)]
    "string"          reduce using rule 11 (funcDecl)
    "string"          [reduce using rule 39 (funcDecl)]
    "class"           reduce using rule 11 (funcDecl)
    "class"           [reduce using rule 39 (funcDecl)]
    "interface"       reduce using rule 11 (funcDecl)
    "interface"       [reduce using rule 39 (funcDecl)]
    T_TYPEIDENTIFIER  reduce using rule 11 (funcDecl)
    T_TYPEIDENTIFIER  [reduce using rule 39 (funcDecl)]
    '}'               reduce using rule 11 (funcDecl)
    '}'               [reduce using rule 39 (funcDecl)]
    $default          reduce using rule 11 (funcDecl)


State 80

   19 classDecl: "class" identifier "extends" identifier "implements" identifier '{' . fields '}'

    $default  reduce using rule 20 (fields)

    fields  go to state 87


State 81

   18 classDecl: "class" identifier "implements" implements '{' fields '}' .

    $default  reduce using rule 18 (classDecl)


State 82

   10 funcDecl: type identifier '(' . formals ')' stmtblock
   38         | type identifier '(' . formals ')' stmtblock

    $default  reduce using rule 40 (formals)

    formals  go to state 88


State 83

   11 funcDecl: void identifier '(' . formals ')' stmtblock
   39         | void identifier '(' . formals ')' stmtblock

    $default  reduce using rule 40 (formals)

    formals  go to state 89


State 84

   15 prototypeDecl: type identifier '(' . formals ')' ';'

    $default  reduce using rule 40 (formals)

    formals  go to state 90


State 85

   16 prototypeDecl: void identifier '(' . formals ')' ';'

    $default  reduce using rule 40 (formals)

    formals  go to state 91


State 86

   44 varDeclStar: varDeclStar . varDecl
   47 stmtblock: '{' varDeclStar . stmtStar '}'

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12

    $default  reduce using rule 45 (stmtStar)

    varDecl         go to state 92
    variable        go to state 18
    type            go to state 64
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    stmtStar        go to state 93
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27


State 87

   19 classDecl: "class" identifier "extends" identifier "implements" identifier '{' fields . '}'
   21 fields: fields . funcDecl
   22       | fields . varDecl

    "void"            shift, and go to state 5
    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    '}'               shift, and go to state 94

    varDecl         go to state 54
    funcDecl        go to state 55
    variable        go to state 18
    type            go to state 56
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27
    void            go to state 57


State 88

   10 funcDecl: type identifier '(' formals . ')' stmtblock
   38         | type identifier '(' formals . ')' stmtblock
   41 formals: formals . variable
   42        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    ')'               shift, and go to state 95

    variable        go to state 63
    type            go to state 64
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27


State 89

   11 funcDecl: void identifier '(' formals . ')' stmtblock
   39         | void identifier '(' formals . ')' stmtblock
   41 formals: formals . variable
   42        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    ')'               shift, and go to state 96

    variable        go to state 63
    type            go to state 64
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27


State 90

   15 prototypeDecl: type identifier '(' formals . ')' ';'
   41 formals: formals . variable
   42        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    ')'               shift, and go to state 97

    variable        go to state 63
    type            go to state 64
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27


State 91

   16 prototypeDecl: void identifier '(' formals . ')' ';'
   41 formals: formals . variable
   42        | formals . variable ','

    "int"             shift, and go to state 6
    "double"          shift, and go to state 7
    "bool"            shift, and go to state 8
    "string"          shift, and go to state 9
    T_TYPEIDENTIFIER  shift, and go to state 12
    ')'               shift, and go to state 98

    variable        go to state 63
    type            go to state 64
    usertype        go to state 20
    primtype        go to state 21
    arraytype       go to state 22
    typeidentifier  go to state 23
    string          go to state 24
    int             go to state 25
    double          go to state 26
    bool            go to state 27


State 92

   44 varDeclStar: varDeclStar varDecl .

    $default  reduce using rule 44 (varDeclStar)


State 93

   46 stmtStar: stmtStar . stmt
   47 stmtblock: '{' varDeclStar stmtStar . '}'

    "null"           shift, and go to state 99
    "for"            shift, and go to state 100
    "while"          shift, and go to state 101
    "if"             shift, and go to state 102
    "return"         shift, and go to state 103
    "break"          shift, and go to state 104
    "Print"          shift, and go to state 105
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    ';'              shift, and go to state 110
    '('              shift, and go to state 111
    '{'              shift, and go to state 74
    '}'              shift, and go to state 112
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall     go to state 115
    stmtblock        go to state 116
    print_stmt       go to state 117
    return_stmt      go to state 118
    stmt             go to state 119
    matched_stmt     go to state 120
    unmatched_stmt   go to state 121
    common_if        go to state 122
    matched_if       go to state 123
    unmatched_if     go to state 124
    common_while     go to state 125
    matched_while    go to state 126
    unmatched_while  go to state 127
    common_for       go to state 128
    matched_for      go to state 129
    expr             go to state 130
    expr1            go to state 131
    expr2            go to state 132
    expr3            go to state 133
    expr4            go to state 134
    expr5            go to state 135
    expr6            go to state 136
    expr7            go to state 137
    expr8            go to state 138
    expr9            go to state 139
    constant         go to state 140
    identifier       go to state 141
    break            go to state 142
    intlit           go to state 143
    dbllit           go to state 144
    boollit          go to state 145
    stringlit        go to state 146
    null             go to state 147
    print            go to state 148
    return           go to state 149
    scminus          go to state 150
    scneq            go to state 151


State 94

   19 classDecl: "class" identifier "extends" identifier "implements" identifier '{' fields '}' .

    $default  reduce using rule 19 (classDecl)


State 95

   10 funcDecl: type identifier '(' formals ')' . stmtblock
   38         | type identifier '(' formals ')' . stmtblock

    '{'  shift, and go to state 74

    stmtblock  go to state 75


State 96

   11 funcDecl: void identifier '(' formals ')' . stmtblock
   39         | void identifier '(' formals ')' . stmtblock

    '{'  shift, and go to state 74

    stmtblock  go to state 79


State 97

   15 prototypeDecl: type identifier '(' formals ')' . ';'

    ';'  shift, and go to state 73


State 98

   16 prototypeDecl: void identifier '(' formals ')' . ';'

    ';'  shift, and go to state 78


State 99

  139 null: "null" .

    $default  reduce using rule 139 (null)


State 100

   74 common_for: "for" . '(' expr ';' expr ';' expr ')'
   75           | "for" . '(' ';' expr ';' expr ')'
   76           | "for" . '(' expr ';' expr ';' ')'
   77           | "for" . '(' ';' expr ';' ')'

    '('  shift, and go to state 152


State 101

   71 common_while: "while" . '(' expr ')'

    '('  shift, and go to state 153


State 102

   66 common_if: "if" . '(' expr ')'

    '('  shift, and go to state 154


State 103

  142 return: "return" .

    $default  reduce using rule 142 (return)


State 104

  128 break: "break" .

    $default  reduce using rule 128 (break)


State 105

  141 print: "Print" .

    $default  reduce using rule 141 (print)


State 106

  136 dbllit: T_DBLLITERAL .

    $default  reduce using rule 136 (dbllit)


State 107

  135 intlit: T_INTLITERAL .

    $default  reduce using rule 135 (intlit)


State 108

  137 boollit: T_BOOLLITERAL .

    $default  reduce using rule 137 (boollit)


State 109

  138 stringlit: T_STRINGLITERAL .

    $default  reduce using rule 138 (stringlit)


State 110

   56 matched_stmt: ';' .

    $default  reduce using rule 56 (matched_stmt)


State 111

  109 expr9: '(' . expr ')'

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr          go to state 156
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 112

   47 stmtblock: '{' varDeclStar stmtStar '}' .

    $default  reduce using rule 47 (stmtblock)


State 113

  144 scminus: '-' .

    $default  reduce using rule 144 (scminus)


State 114

  151 scneq: '!' .

    $default  reduce using rule 151 (scneq)


State 115

   62 matched_stmt: functionCall . ';'
  108 expr9: functionCall .

    ';'  shift, and go to state 157

    ';'       [reduce using rule 108 (expr9)]
    $default  reduce using rule 108 (expr9)


State 116

   63 matched_stmt: stmtblock .

    $default  reduce using rule 63 (matched_stmt)


State 117

   57 matched_stmt: print_stmt . ';'

    ';'  shift, and go to state 158


State 118

   58 matched_stmt: return_stmt . ';'

    ';'  shift, and go to state 159


State 119

   46 stmtStar: stmtStar stmt .

    $default  reduce using rule 46 (stmtStar)


State 120

   52 stmt: matched_stmt .

    $default  reduce using rule 52 (stmt)


State 121

   53 stmt: unmatched_stmt .

    $default  reduce using rule 53 (stmt)


State 122

   67 matched_if: common_if . matched_stmt else matched_stmt
   68 unmatched_if: common_if . matched_stmt
   69             | common_if . matched_stmt else unmatched_stmt
   70             | common_if . unmatched_stmt

    "null"           shift, and go to state 99
    "for"            shift, and go to state 100
    "while"          shift, and go to state 101
    "if"             shift, and go to state 102
    "return"         shift, and go to state 103
    "break"          shift, and go to state 104
    "Print"          shift, and go to state 105
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    ';'              shift, and go to state 110
    '('              shift, and go to state 111
    '{'              shift, and go to state 74
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall     go to state 115
    stmtblock        go to state 116
    print_stmt       go to state 117
    return_stmt      go to state 118
    matched_stmt     go to state 160
    unmatched_stmt   go to state 161
    common_if        go to state 122
    matched_if       go to state 123
    unmatched_if     go to state 124
    common_while     go to state 125
    matched_while    go to state 126
    unmatched_while  go to state 127
    common_for       go to state 128
    matched_for      go to state 129
    expr             go to state 130
    expr1            go to state 131
    expr2            go to state 132
    expr3            go to state 133
    expr4            go to state 134
    expr5            go to state 135
    expr6            go to state 136
    expr7            go to state 137
    expr8            go to state 138
    expr9            go to state 139
    constant         go to state 140
    identifier       go to state 141
    break            go to state 142
    intlit           go to state 143
    dbllit           go to state 144
    boollit          go to state 145
    stringlit        go to state 146
    null             go to state 147
    print            go to state 148
    return           go to state 149
    scminus          go to state 150
    scneq            go to state 151


State 123

   59 matched_stmt: matched_if .

    $default  reduce using rule 59 (matched_stmt)


State 124

   64 unmatched_stmt: unmatched_if .

    $default  reduce using rule 64 (unmatched_stmt)


State 125

   72 matched_while: common_while . matched_stmt
   73 unmatched_while: common_while . unmatched_stmt

    "null"           shift, and go to state 99
    "for"            shift, and go to state 100
    "while"          shift, and go to state 101
    "if"             shift, and go to state 102
    "return"         shift, and go to state 103
    "break"          shift, and go to state 104
    "Print"          shift, and go to state 105
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    ';'              shift, and go to state 110
    '('              shift, and go to state 111
    '{'              shift, and go to state 74
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall     go to state 115
    stmtblock        go to state 116
    print_stmt       go to state 117
    return_stmt      go to state 118
    matched_stmt     go to state 162
    unmatched_stmt   go to state 163
    common_if        go to state 122
    matched_if       go to state 123
    unmatched_if     go to state 124
    common_while     go to state 125
    matched_while    go to state 126
    unmatched_while  go to state 127
    common_for       go to state 128
    matched_for      go to state 129
    expr             go to state 130
    expr1            go to state 131
    expr2            go to state 132
    expr3            go to state 133
    expr4            go to state 134
    expr5            go to state 135
    expr6            go to state 136
    expr7            go to state 137
    expr8            go to state 138
    expr9            go to state 139
    constant         go to state 140
    identifier       go to state 141
    break            go to state 142
    intlit           go to state 143
    dbllit           go to state 144
    boollit          go to state 145
    stringlit        go to state 146
    null             go to state 147
    print            go to state 148
    return           go to state 149
    scminus          go to state 150
    scneq            go to state 151


State 126

   60 matched_stmt: matched_while .

    $default  reduce using rule 60 (matched_stmt)


State 127

   65 unmatched_stmt: unmatched_while .

    $default  reduce using rule 65 (unmatched_stmt)


State 128

   78 matched_for: common_for . matched_stmt

    "null"           shift, and go to state 99
    "for"            shift, and go to state 100
    "while"          shift, and go to state 101
    "if"             shift, and go to state 102
    "return"         shift, and go to state 103
    "break"          shift, and go to state 104
    "Print"          shift, and go to state 105
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    ';'              shift, and go to state 110
    '('              shift, and go to state 111
    '{'              shift, and go to state 74
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall   go to state 115
    stmtblock      go to state 116
    print_stmt     go to state 117
    return_stmt    go to state 118
    matched_stmt   go to state 164
    common_if      go to state 165
    matched_if     go to state 123
    common_while   go to state 166
    matched_while  go to state 126
    common_for     go to state 128
    matched_for    go to state 129
    expr           go to state 130
    expr1          go to state 131
    expr2          go to state 132
    expr3          go to state 133
    expr4          go to state 134
    expr5          go to state 135
    expr6          go to state 136
    expr7          go to state 137
    expr8          go to state 138
    expr9          go to state 139
    constant       go to state 140
    identifier     go to state 141
    break          go to state 142
    intlit         go to state 143
    dbllit         go to state 144
    boollit        go to state 145
    stringlit      go to state 146
    null           go to state 147
    print          go to state 148
    return         go to state 149
    scminus        go to state 150
    scneq          go to state 151


State 129

   61 matched_stmt: matched_for .

    $default  reduce using rule 61 (matched_stmt)


State 130

   55 matched_stmt: expr . ';'

    ';'  shift, and go to state 167


State 131

   79 expr: expr1 .
   80     | expr1 . sceq expr1
   82 expr1: expr1 . or expr2

    "||"  shift, and go to state 168
    '='   shift, and go to state 169

    $default  reduce using rule 79 (expr)

    or    go to state 170
    sceq  go to state 171


State 132

   81 expr1: expr2 .
   84 expr2: expr2 . and expr3

    "&&"  shift, and go to state 172

    $default  reduce using rule 81 (expr1)

    and  go to state 173


State 133

   83 expr2: expr3 .
   86 expr3: expr3 . eq expr4
   87      | expr3 . neq expr4

    "=="  shift, and go to state 174
    "!="  shift, and go to state 175

    $default  reduce using rule 83 (expr2)

    eq   go to state 176
    neq  go to state 177


State 134

   85 expr3: expr4 .
   89 expr4: expr4 . sclt expr5
   90      | expr4 . scgt expr5
   91      | expr4 . le expr5
   92      | expr4 . ge expr5

    "<="  shift, and go to state 178
    ">="  shift, and go to state 179
    '<'   shift, and go to state 180
    '>'   shift, and go to state 181

    $default  reduce using rule 85 (expr3)

    le    go to state 182
    ge    go to state 183
    sclt  go to state 184
    scgt  go to state 185


State 135

   88 expr4: expr5 .
   94 expr5: expr5 . scplus expr6
   95      | expr5 . scminus expr6

    '+'  shift, and go to state 186
    '-'  shift, and go to state 113

    '-'       [reduce using rule 88 (expr4)]
    $default  reduce using rule 88 (expr4)

    scplus   go to state 187
    scminus  go to state 188


State 136

   93 expr5: expr6 .
   97 expr6: expr6 . sctimes expr7
   98      | expr6 . scdiv expr7
   99      | expr6 . scmod expr7

    '*'  shift, and go to state 189
    '/'  shift, and go to state 190
    '%'  shift, and go to state 191

    $default  reduce using rule 93 (expr5)

    sctimes  go to state 192
    scdiv    go to state 193
    scmod    go to state 194


State 137

   96 expr6: expr7 .

    $default  reduce using rule 96 (expr6)


State 138

  100 expr7: expr8 .
  104 expr8: expr8 . '[' expr1 ']'
  105      | expr8 . '.' expr9

    '['  shift, and go to state 195
    '.'  shift, and go to state 196

    $default  reduce using rule 100 (expr7)


State 139

  103 expr8: expr9 .

    $default  reduce using rule 103 (expr8)


State 140

  107 expr9: constant .

    $default  reduce using rule 107 (expr9)


State 141

   26 functionCall: identifier . '(' actuals ')'
  106 expr9: identifier .

    '('  shift, and go to state 197

    '('       [reduce using rule 106 (expr9)]
    $default  reduce using rule 106 (expr9)


State 142

   54 matched_stmt: break . ';'

    ';'  shift, and go to state 198


State 143

  115 constant: intlit .

    $default  reduce using rule 115 (constant)


State 144

  116 constant: dbllit .

    $default  reduce using rule 116 (constant)


State 145

  117 constant: boollit .

    $default  reduce using rule 117 (constant)


State 146

  118 constant: stringlit .

    $default  reduce using rule 118 (constant)


State 147

  119 constant: null .

    $default  reduce using rule 119 (constant)


State 148

   48 print_stmt: print . '(' print_actuals ')'

    '('  shift, and go to state 199


State 149

   49 return_stmt: return .
   50            | return . expr
   51            | return . functionCall

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    $default  reduce using rule 49 (return_stmt)

    functionCall  go to state 200
    expr          go to state 201
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 150

  102 expr7: scminus . expr7

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr7         go to state 202
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 151

  101 expr7: scneq . expr7

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr7         go to state 203
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 152

   74 common_for: "for" '(' . expr ';' expr ';' expr ')'
   75           | "for" '(' . ';' expr ';' expr ')'
   76           | "for" '(' . expr ';' expr ';' ')'
   77           | "for" '(' . ';' expr ';' ')'

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    ';'              shift, and go to state 204
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr          go to state 205
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 153

   71 common_while: "while" '(' . expr ')'

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr          go to state 206
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 154

   66 common_if: "if" '(' . expr ')'

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr          go to state 207
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 155

  108 expr9: functionCall .

    $default  reduce using rule 108 (expr9)


State 156

  109 expr9: '(' expr . ')'

    ')'  shift, and go to state 208


State 157

   62 matched_stmt: functionCall ';' .

    $default  reduce using rule 62 (matched_stmt)


State 158

   57 matched_stmt: print_stmt ';' .

    $default  reduce using rule 57 (matched_stmt)


State 159

   58 matched_stmt: return_stmt ';' .

    $default  reduce using rule 58 (matched_stmt)


State 160

   67 matched_if: common_if matched_stmt . else matched_stmt
   68 unmatched_if: common_if matched_stmt .
   69             | common_if matched_stmt . else unmatched_stmt

    "else"  shift, and go to state 209

    $default  reduce using rule 68 (unmatched_if)

    else  go to state 210


State 161

   70 unmatched_if: common_if unmatched_stmt .

    $default  reduce using rule 70 (unmatched_if)


State 162

   72 matched_while: common_while matched_stmt .

    $default  reduce using rule 72 (matched_while)


State 163

   73 unmatched_while: common_while unmatched_stmt .

    $default  reduce using rule 73 (unmatched_while)


State 164

   78 matched_for: common_for matched_stmt .

    $default  reduce using rule 78 (matched_for)


State 165

   67 matched_if: common_if . matched_stmt else matched_stmt

    "null"           shift, and go to state 99
    "for"            shift, and go to state 100
    "while"          shift, and go to state 101
    "if"             shift, and go to state 102
    "return"         shift, and go to state 103
    "break"          shift, and go to state 104
    "Print"          shift, and go to state 105
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    ';'              shift, and go to state 110
    '('              shift, and go to state 111
    '{'              shift, and go to state 74
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall   go to state 115
    stmtblock      go to state 116
    print_stmt     go to state 117
    return_stmt    go to state 118
    matched_stmt   go to state 211
    common_if      go to state 165
    matched_if     go to state 123
    common_while   go to state 166
    matched_while  go to state 126
    common_for     go to state 128
    matched_for    go to state 129
    expr           go to state 130
    expr1          go to state 131
    expr2          go to state 132
    expr3          go to state 133
    expr4          go to state 134
    expr5          go to state 135
    expr6          go to state 136
    expr7          go to state 137
    expr8          go to state 138
    expr9          go to state 139
    constant       go to state 140
    identifier     go to state 141
    break          go to state 142
    intlit         go to state 143
    dbllit         go to state 144
    boollit        go to state 145
    stringlit      go to state 146
    null           go to state 147
    print          go to state 148
    return         go to state 149
    scminus        go to state 150
    scneq          go to state 151


State 166

   72 matched_while: common_while . matched_stmt

    "null"           shift, and go to state 99
    "for"            shift, and go to state 100
    "while"          shift, and go to state 101
    "if"             shift, and go to state 102
    "return"         shift, and go to state 103
    "break"          shift, and go to state 104
    "Print"          shift, and go to state 105
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    ';'              shift, and go to state 110
    '('              shift, and go to state 111
    '{'              shift, and go to state 74
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall   go to state 115
    stmtblock      go to state 116
    print_stmt     go to state 117
    return_stmt    go to state 118
    matched_stmt   go to state 162
    common_if      go to state 165
    matched_if     go to state 123
    common_while   go to state 166
    matched_while  go to state 126
    common_for     go to state 128
    matched_for    go to state 129
    expr           go to state 130
    expr1          go to state 131
    expr2          go to state 132
    expr3          go to state 133
    expr4          go to state 134
    expr5          go to state 135
    expr6          go to state 136
    expr7          go to state 137
    expr8          go to state 138
    expr9          go to state 139
    constant       go to state 140
    identifier     go to state 141
    break          go to state 142
    intlit         go to state 143
    dbllit         go to state 144
    boollit        go to state 145
    stringlit      go to state 146
    null           go to state 147
    print          go to state 148
    return         go to state 149
    scminus        go to state 150
    scneq          go to state 151


State 167

   55 matched_stmt: expr ';' .

    $default  reduce using rule 55 (matched_stmt)


State 168

  134 or: "||" .

    $default  reduce using rule 134 (or)


State 169

  150 sceq: '=' .

    $default  reduce using rule 150 (sceq)


State 170

   82 expr1: expr1 or . expr2

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr2         go to state 212
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 171

   80 expr: expr1 sceq . expr1

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr1         go to state 213
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 172

  133 and: "&&" .

    $default  reduce using rule 133 (and)


State 173

   84 expr2: expr2 and . expr3

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr3         go to state 214
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 174

  131 eq: "==" .

    $default  reduce using rule 131 (eq)


State 175

  132 neq: "!=" .

    $default  reduce using rule 132 (neq)


State 176

   86 expr3: expr3 eq . expr4

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr4         go to state 215
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 177

   87 expr3: expr3 neq . expr4

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr4         go to state 216
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 178

  129 le: "<=" .

    $default  reduce using rule 129 (le)


State 179

  130 ge: ">=" .

    $default  reduce using rule 130 (ge)


State 180

  148 sclt: '<' .

    $default  reduce using rule 148 (sclt)


State 181

  149 scgt: '>' .

    $default  reduce using rule 149 (scgt)


State 182

   91 expr4: expr4 le . expr5

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr5         go to state 217
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 183

   92 expr4: expr4 ge . expr5

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr5         go to state 218
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 184

   89 expr4: expr4 sclt . expr5

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr5         go to state 219
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 185

   90 expr4: expr4 scgt . expr5

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr5         go to state 220
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 186

  143 scplus: '+' .

    $default  reduce using rule 143 (scplus)


State 187

   94 expr5: expr5 scplus . expr6

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr6         go to state 221
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 188

   95 expr5: expr5 scminus . expr6

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr6         go to state 222
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 189

  145 sctimes: '*' .

    $default  reduce using rule 145 (sctimes)


State 190

  146 scdiv: '/' .

    $default  reduce using rule 146 (scdiv)


State 191

  147 scmod: '%' .

    $default  reduce using rule 147 (scmod)


State 192

   97 expr6: expr6 sctimes . expr7

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr7         go to state 223
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 193

   98 expr6: expr6 scdiv . expr7

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr7         go to state 224
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 194

   99 expr6: expr6 scmod . expr7

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr7         go to state 225
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 195

  104 expr8: expr8 '[' . expr1 ']'

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr1         go to state 226
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 196

  105 expr8: expr8 '.' . expr9

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111

    functionCall  go to state 155
    expr9         go to state 227
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147


State 197

   26 functionCall: identifier '(' . actuals ')'

    $default  reduce using rule 110 (actuals)

    actuals  go to state 228


State 198

   54 matched_stmt: break ';' .

    $default  reduce using rule 54 (matched_stmt)


State 199

   48 print_stmt: print '(' . print_actuals ')'

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall   go to state 155
    expr           go to state 229
    expr1          go to state 131
    expr2          go to state 132
    expr3          go to state 133
    expr4          go to state 134
    expr5          go to state 135
    expr6          go to state 136
    expr7          go to state 137
    expr8          go to state 138
    expr9          go to state 139
    print_actuals  go to state 230
    constant       go to state 140
    identifier     go to state 141
    intlit         go to state 143
    dbllit         go to state 144
    boollit        go to state 145
    stringlit      go to state 146
    null           go to state 147
    scminus        go to state 150
    scneq          go to state 151


State 200

   51 return_stmt: return functionCall .
  108 expr9: functionCall .

    ';'       reduce using rule 51 (return_stmt)
    ';'       [reduce using rule 108 (expr9)]
    $default  reduce using rule 108 (expr9)


State 201

   50 return_stmt: return expr .

    $default  reduce using rule 50 (return_stmt)


State 202

  102 expr7: scminus expr7 .

    $default  reduce using rule 102 (expr7)


State 203

  101 expr7: scneq expr7 .

    $default  reduce using rule 101 (expr7)


State 204

   75 common_for: "for" '(' ';' . expr ';' expr ')'
   77           | "for" '(' ';' . expr ';' ')'

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr          go to state 231
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 205

   74 common_for: "for" '(' expr . ';' expr ';' expr ')'
   76           | "for" '(' expr . ';' expr ';' ')'

    ';'  shift, and go to state 232


State 206

   71 common_while: "while" '(' expr . ')'

    ')'  shift, and go to state 233


State 207

   66 common_if: "if" '(' expr . ')'

    ')'  shift, and go to state 234


State 208

  109 expr9: '(' expr ')' .

    $default  reduce using rule 109 (expr9)


State 209

  140 else: "else" .

    $default  reduce using rule 140 (else)


State 210

   67 matched_if: common_if matched_stmt else . matched_stmt
   69 unmatched_if: common_if matched_stmt else . unmatched_stmt

    "null"           shift, and go to state 99
    "for"            shift, and go to state 100
    "while"          shift, and go to state 101
    "if"             shift, and go to state 102
    "return"         shift, and go to state 103
    "break"          shift, and go to state 104
    "Print"          shift, and go to state 105
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    ';'              shift, and go to state 110
    '('              shift, and go to state 111
    '{'              shift, and go to state 74
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall     go to state 115
    stmtblock        go to state 116
    print_stmt       go to state 117
    return_stmt      go to state 118
    matched_stmt     go to state 235
    unmatched_stmt   go to state 236
    common_if        go to state 122
    matched_if       go to state 123
    unmatched_if     go to state 124
    common_while     go to state 125
    matched_while    go to state 126
    unmatched_while  go to state 127
    common_for       go to state 128
    matched_for      go to state 129
    expr             go to state 130
    expr1            go to state 131
    expr2            go to state 132
    expr3            go to state 133
    expr4            go to state 134
    expr5            go to state 135
    expr6            go to state 136
    expr7            go to state 137
    expr8            go to state 138
    expr9            go to state 139
    constant         go to state 140
    identifier       go to state 141
    break            go to state 142
    intlit           go to state 143
    dbllit           go to state 144
    boollit          go to state 145
    stringlit        go to state 146
    null             go to state 147
    print            go to state 148
    return           go to state 149
    scminus          go to state 150
    scneq            go to state 151


State 211

   67 matched_if: common_if matched_stmt . else matched_stmt

    "else"  shift, and go to state 209

    else  go to state 237


State 212

   82 expr1: expr1 or expr2 .
   84 expr2: expr2 . and expr3

    "&&"  shift, and go to state 172

    $default  reduce using rule 82 (expr1)

    and  go to state 173


State 213

   80 expr: expr1 sceq expr1 .
   82 expr1: expr1 . or expr2

    "||"  shift, and go to state 168

    $default  reduce using rule 80 (expr)

    or  go to state 170


State 214

   84 expr2: expr2 and expr3 .
   86 expr3: expr3 . eq expr4
   87      | expr3 . neq expr4

    "=="  shift, and go to state 174
    "!="  shift, and go to state 175

    $default  reduce using rule 84 (expr2)

    eq   go to state 176
    neq  go to state 177


State 215

   86 expr3: expr3 eq expr4 .
   89 expr4: expr4 . sclt expr5
   90      | expr4 . scgt expr5
   91      | expr4 . le expr5
   92      | expr4 . ge expr5

    "<="  shift, and go to state 178
    ">="  shift, and go to state 179
    '<'   shift, and go to state 180
    '>'   shift, and go to state 181

    $default  reduce using rule 86 (expr3)

    le    go to state 182
    ge    go to state 183
    sclt  go to state 184
    scgt  go to state 185


State 216

   87 expr3: expr3 neq expr4 .
   89 expr4: expr4 . sclt expr5
   90      | expr4 . scgt expr5
   91      | expr4 . le expr5
   92      | expr4 . ge expr5

    "<="  shift, and go to state 178
    ">="  shift, and go to state 179
    '<'   shift, and go to state 180
    '>'   shift, and go to state 181

    $default  reduce using rule 87 (expr3)

    le    go to state 182
    ge    go to state 183
    sclt  go to state 184
    scgt  go to state 185


State 217

   91 expr4: expr4 le expr5 .
   94 expr5: expr5 . scplus expr6
   95      | expr5 . scminus expr6

    '+'  shift, and go to state 186
    '-'  shift, and go to state 113

    '-'       [reduce using rule 91 (expr4)]
    $default  reduce using rule 91 (expr4)

    scplus   go to state 187
    scminus  go to state 188


State 218

   92 expr4: expr4 ge expr5 .
   94 expr5: expr5 . scplus expr6
   95      | expr5 . scminus expr6

    '+'  shift, and go to state 186
    '-'  shift, and go to state 113

    '-'       [reduce using rule 92 (expr4)]
    $default  reduce using rule 92 (expr4)

    scplus   go to state 187
    scminus  go to state 188


State 219

   89 expr4: expr4 sclt expr5 .
   94 expr5: expr5 . scplus expr6
   95      | expr5 . scminus expr6

    '+'  shift, and go to state 186
    '-'  shift, and go to state 113

    '-'       [reduce using rule 89 (expr4)]
    $default  reduce using rule 89 (expr4)

    scplus   go to state 187
    scminus  go to state 188


State 220

   90 expr4: expr4 scgt expr5 .
   94 expr5: expr5 . scplus expr6
   95      | expr5 . scminus expr6

    '+'  shift, and go to state 186
    '-'  shift, and go to state 113

    '-'       [reduce using rule 90 (expr4)]
    $default  reduce using rule 90 (expr4)

    scplus   go to state 187
    scminus  go to state 188


State 221

   94 expr5: expr5 scplus expr6 .
   97 expr6: expr6 . sctimes expr7
   98      | expr6 . scdiv expr7
   99      | expr6 . scmod expr7

    '*'  shift, and go to state 189
    '/'  shift, and go to state 190
    '%'  shift, and go to state 191

    $default  reduce using rule 94 (expr5)

    sctimes  go to state 192
    scdiv    go to state 193
    scmod    go to state 194


State 222

   95 expr5: expr5 scminus expr6 .
   97 expr6: expr6 . sctimes expr7
   98      | expr6 . scdiv expr7
   99      | expr6 . scmod expr7

    '*'  shift, and go to state 189
    '/'  shift, and go to state 190
    '%'  shift, and go to state 191

    $default  reduce using rule 95 (expr5)

    sctimes  go to state 192
    scdiv    go to state 193
    scmod    go to state 194


State 223

   97 expr6: expr6 sctimes expr7 .

    $default  reduce using rule 97 (expr6)


State 224

   98 expr6: expr6 scdiv expr7 .

    $default  reduce using rule 98 (expr6)


State 225

   99 expr6: expr6 scmod expr7 .

    $default  reduce using rule 99 (expr6)


State 226

   82 expr1: expr1 . or expr2
  104 expr8: expr8 '[' expr1 . ']'

    "||"  shift, and go to state 168
    ']'   shift, and go to state 238

    or  go to state 170


State 227

  105 expr8: expr8 '.' expr9 .

    $default  reduce using rule 105 (expr8)


State 228

   26 functionCall: identifier '(' actuals . ')'
  111 actuals: actuals . expr
  112        | actuals . ',' expr

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    ')'              shift, and go to state 239
    ','              shift, and go to state 240
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr          go to state 241
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 229

  113 print_actuals: expr .

    $default  reduce using rule 113 (print_actuals)


State 230

   48 print_stmt: print '(' print_actuals . ')'
  114 print_actuals: print_actuals . ',' expr

    ')'  shift, and go to state 242
    ','  shift, and go to state 243


State 231

   75 common_for: "for" '(' ';' expr . ';' expr ')'
   77           | "for" '(' ';' expr . ';' ')'

    ';'  shift, and go to state 244


State 232

   74 common_for: "for" '(' expr ';' . expr ';' expr ')'
   76           | "for" '(' expr ';' . expr ';' ')'

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr          go to state 245
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 233

   71 common_while: "while" '(' expr ')' .

    $default  reduce using rule 71 (common_while)


State 234

   66 common_if: "if" '(' expr ')' .

    $default  reduce using rule 66 (common_if)


State 235

   67 matched_if: common_if matched_stmt else matched_stmt .

    $default  reduce using rule 67 (matched_if)


State 236

   69 unmatched_if: common_if matched_stmt else unmatched_stmt .

    $default  reduce using rule 69 (unmatched_if)


State 237

   67 matched_if: common_if matched_stmt else . matched_stmt

    "null"           shift, and go to state 99
    "for"            shift, and go to state 100
    "while"          shift, and go to state 101
    "if"             shift, and go to state 102
    "return"         shift, and go to state 103
    "break"          shift, and go to state 104
    "Print"          shift, and go to state 105
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    ';'              shift, and go to state 110
    '('              shift, and go to state 111
    '{'              shift, and go to state 74
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall   go to state 115
    stmtblock      go to state 116
    print_stmt     go to state 117
    return_stmt    go to state 118
    matched_stmt   go to state 235
    common_if      go to state 165
    matched_if     go to state 123
    common_while   go to state 166
    matched_while  go to state 126
    common_for     go to state 128
    matched_for    go to state 129
    expr           go to state 130
    expr1          go to state 131
    expr2          go to state 132
    expr3          go to state 133
    expr4          go to state 134
    expr5          go to state 135
    expr6          go to state 136
    expr7          go to state 137
    expr8          go to state 138
    expr9          go to state 139
    constant       go to state 140
    identifier     go to state 141
    break          go to state 142
    intlit         go to state 143
    dbllit         go to state 144
    boollit        go to state 145
    stringlit      go to state 146
    null           go to state 147
    print          go to state 148
    return         go to state 149
    scminus        go to state 150
    scneq          go to state 151


State 238

  104 expr8: expr8 '[' expr1 ']' .

    $default  reduce using rule 104 (expr8)


State 239

   26 functionCall: identifier '(' actuals ')' .

    $default  reduce using rule 26 (functionCall)


State 240

  112 actuals: actuals ',' . expr

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr          go to state 246
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 241

  111 actuals: actuals expr .

    $default  reduce using rule 111 (actuals)


State 242

   48 print_stmt: print '(' print_actuals ')' .

    $default  reduce using rule 48 (print_stmt)


State 243

  114 print_actuals: print_actuals ',' . expr

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr          go to state 247
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 244

   75 common_for: "for" '(' ';' expr ';' . expr ')'
   77           | "for" '(' ';' expr ';' . ')'

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    ')'              shift, and go to state 248
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr          go to state 249
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 245

   74 common_for: "for" '(' expr ';' expr . ';' expr ')'
   76           | "for" '(' expr ';' expr . ';' ')'

    ';'  shift, and go to state 250


State 246

  112 actuals: actuals ',' expr .

    $default  reduce using rule 112 (actuals)


State 247

  114 print_actuals: print_actuals ',' expr .

    $default  reduce using rule 114 (print_actuals)


State 248

   77 common_for: "for" '(' ';' expr ';' ')' .

    $default  reduce using rule 77 (common_for)


State 249

   75 common_for: "for" '(' ';' expr ';' expr . ')'

    ')'  shift, and go to state 251


State 250

   74 common_for: "for" '(' expr ';' expr ';' . expr ')'
   76           | "for" '(' expr ';' expr ';' . ')'

    "null"           shift, and go to state 99
    T_DBLLITERAL     shift, and go to state 106
    T_INTLITERAL     shift, and go to state 107
    T_BOOLLITERAL    shift, and go to state 108
    T_IDENTIFIER     shift, and go to state 29
    T_STRINGLITERAL  shift, and go to state 109
    '('              shift, and go to state 111
    ')'              shift, and go to state 252
    '-'              shift, and go to state 113
    '!'              shift, and go to state 114

    functionCall  go to state 155
    expr          go to state 253
    expr1         go to state 131
    expr2         go to state 132
    expr3         go to state 133
    expr4         go to state 134
    expr5         go to state 135
    expr6         go to state 136
    expr7         go to state 137
    expr8         go to state 138
    expr9         go to state 139
    constant      go to state 140
    identifier    go to state 141
    intlit        go to state 143
    dbllit        go to state 144
    boollit       go to state 145
    stringlit     go to state 146
    null          go to state 147
    scminus       go to state 150
    scneq         go to state 151


State 251

   75 common_for: "for" '(' ';' expr ';' expr ')' .

    $default  reduce using rule 75 (common_for)


State 252

   76 common_for: "for" '(' expr ';' expr ';' ')' .

    $default  reduce using rule 76 (common_for)


State 253

   74 common_for: "for" '(' expr ';' expr ';' expr . ')'

    ')'  shift, and go to state 254


State 254

   74 common_for: "for" '(' expr ';' expr ';' expr ')' .

    $default  reduce using rule 74 (common_for)
